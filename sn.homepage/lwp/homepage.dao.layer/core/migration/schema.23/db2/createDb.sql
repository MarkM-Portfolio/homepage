-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                   
-- Copyright IBM Corp. 2008, 2015                                    
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 

--------------------------------------
-- CREATE THE DATABASE
-------------------------------------- 
 
CREATE DATABASE HOMEPAGE USING CODESET UTF-8 TERRITORY US;

CONNECT TO HOMEPAGE;  


CREATE BUFFERPOOL HOMEPAGE4KBP IMMEDIATE SIZE 4000 AUTOMATIC PAGESIZE 4K;
CREATE BUFFERPOOL NT8KBP IMMEDIATE SIZE 8000 AUTOMATIC PAGESIZE 8K;
CREATE BUFFERPOOL NEWS16KBP IMMEDIATE SIZE 16000 AUTOMATIC PAGESIZE 16K;

-- Disable the run stats. Increase the logs
UPDATE DATABASE CONFIGURATION USING AUTO_RUNSTATS OFF IMMEDIATE;
UPDATE DATABASE CONFIGURATION USING LOGPRIMARY 26;
UPDATE DATABASE CONFIGURATION USING LOGSECOND 52;
UPDATE DBM CFG USING NUMDB 10;

-- HOMEPAGE TABLESPACE
CREATE LARGE TABLESPACE HOMEPAGETABSPACE  
	PAGESIZE 4K MANAGED BY DATABASE
	USING (FILE 'HOMEPAGETABSPACE' 20000) 
	EXTENTSIZE 4
	PREFETCHSIZE AUTOMATIC
	BUFFERPOOL HOMEPAGE4KBP
	AUTORESIZE YES
	INCREASESIZE 20 M
	MAXSIZE NONE;
 
-- HOMEPAGE NOTIFICATION TABLETABLESPACE
CREATE SYSTEM TEMPORARY TABLESPACE HPNTTMPTABSPACE
	PAGESIZE 8K MANAGED BY SYSTEM 
	USING ( 'HPNTTMPTABSPACE' ) 
	EXTENTSIZE 8 PREFETCHSIZE AUTOMATIC
	BUFFERPOOL NT8KBP
	FILE SYSTEM CACHING;
              
CREATE LARGE TABLESPACE HPNTTABSPACE 
	PAGESIZE 8K MANAGED BY DATABASE
	USING (FILE 'HPNTTABSPACE' 12800)
	EXTENTSIZE 8
	PREFETCHSIZE AUTOMATIC
	BUFFERPOOL NT8KBP
	AUTORESIZE YES
	INCREASESIZE 20 M
	MAXSIZE NONE;

-- HOMEPAGE NEWS TABLETABLESPACE
CREATE SYSTEM TEMPORARY TABLESPACE NEWSTMPTABSPACE
	PAGESIZE 16K MANAGED BY SYSTEM 
	USING ( 'NEWSTMPTABSPACE' ) 
	EXTENTSIZE 16 PREFETCHSIZE AUTOMATIC
	BUFFERPOOL NEWS16KBP
	FILE SYSTEM CACHING;
	      
CREATE LARGE TABLESPACE NEWSTABSPACE 
	PAGESIZE 16K MANAGED BY DATABASE
	USING (FILE 'NEWSTABSPACE' 12800)
	EXTENTSIZE 16
	PREFETCHSIZE AUTOMATIC
	BUFFERPOOL NEWS16KBP
	AUTORESIZE YES
	INCREASESIZE 40 M
	MAXSIZE NONE;              
    
--------------------------------------
-- CREATE THE SCHEMA
--------------------------------------    
        
CREATE SCHEMA HOMEPAGE;

--------------------------------------
-- CREATE THE TABLES
--------------------------------------

CREATE TABLE HOMEPAGE.HOMEPAGE_SCHEMA (
	COMPKEY VARCHAR ( 36 ) NOT NULL,
	DBSCHEMAVER INTEGER NOT NULL,
	RELEASEVER VARCHAR(32) NOT NULL DEFAULT ''
) 
IN HOMEPAGETABSPACE;

CREATE TABLE HOMEPAGE.PERSON  (
		  PERSON_ID VARCHAR(36) NOT NULL,
		  DISPLAYNAME VARCHAR(256) NOT NULL,
		  EXID VARCHAR(256) NOT NULL,
		  USER_MAIL VARCHAR(256)
)
IN HOMEPAGETABSPACE;

CREATE TABLE HOMEPAGE.LOGINNAME (
	PERSON_ID VARCHAR(36) NOT NULL,
	LOGINNAME VARCHAR(256) NOT NULL
)
IN HOMEPAGETABSPACE;

CREATE TABLE HOMEPAGE.HP_UI  (
	UI_ID VARCHAR(36) NOT NULL,
	PERSON_ID VARCHAR(36) NOT NULL,
	PERSON_LANG VARCHAR(5) NOT NULL,
	LAST_VISIT TIMESTAMP NOT NULL,
	WELCOME_MODE SMALLINT DEFAULT 1 NOT NULL,
	SHOW_DISABLED_WIDGETS SMALLINT DEFAULT 0 NOT NULL
)
IN HOMEPAGETABSPACE;

CREATE TABLE HOMEPAGE.HP_TAB  (
	TAB_ID VARCHAR(36) NOT NULL,
	DEFAULT_NAME VARCHAR(36) NOT NULL,
	DEFAULT_N_COLUMNS SMALLINT,
	IS_NAME_CHANGEABLE SMALLINT	
)
IN HOMEPAGETABSPACE;

CREATE TABLE HOMEPAGE.HP_TAB_INST  (
	TAB_INST_ID VARCHAR(36) NOT NULL,
	TAB_ID VARCHAR(36) NOT NULL,
	UI_ID VARCHAR(36) NOT NULL,
	TAB_NAME VARCHAR(36),
	N_COLUMNS SMALLINT,
	LAST_MODIFIED TIMESTAMP NOT NULL
)
IN HOMEPAGETABSPACE;

CREATE TABLE HOMEPAGE.HP_WIDGET_INST  (
	WIDGET_INST_ID VARCHAR(36) NOT NULL,
	WIDGET_ID VARCHAR(36) NOT NULL,
	TAB_INST_ID VARCHAR(36) NOT NULL,
	WIDGET_SETTING VARCHAR(2048),
	CONTAINER VARCHAR(36),
	ORDER_SEQUENCE SMALLINT,
	IS_FIXED SMALLINT,
	IS_TOGGLED SMALLINT,
	LAST_MODIFIED TIMESTAMP NOT NULL,
	LAST_UPDATED TIMESTAMP
)
IN HOMEPAGETABSPACE;

CREATE TABLE HOMEPAGE.WIDGET (
		WIDGET_ID VARCHAR(36) NOT NULL,
		WIDGET_TITLE VARCHAR(256) NOT NULL,
		WIDGET_TEXT VARCHAR(256),
		WIDGET_URL VARCHAR(256) NOT NULL,
		WIDGET_ICON VARCHAR(256),
		WIDGET_ENABLED SMALLINT DEFAULT 0 NOT NULL,
		WIDGET_SYSTEM SMALLINT DEFAULT 0 NOT NULL,
		WIDGET_HOMEPAGE_SPECIFIC SMALLINT DEFAULT 0 NOT NULL,
		WIDGET_PREVIEW_IMAGE VARCHAR(256),
		WIDGET_CATEGORY VARCHAR(36) DEFAULT ' ' NOT NULL,
		WIDGET_IS_DEFAULT_OPENED SMALLINT DEFAULT 0 NOT NULL,
		WIDGET_MULTIPLE_INSTANCES SMALLINT DEFAULT 0 NOT NULL,		
		WIDGET_MARKED_CACHABLE SMALLINT DEFAULT 0 NOT NULL,
		WIDGET_SECURE_URL VARCHAR(256) DEFAULT '',
		WIDGET_SECURE_ICON VARCHAR(256) DEFAULT ''
)
IN HOMEPAGETABSPACE;

CREATE TABLE HOMEPAGE.HP_WIDGET_TAB (
	WIDGET_TAB_ID VARCHAR(36) NOT NULL,
	WIDGET_ID VARCHAR(36) NOT NULL,
	TAB_ID VARCHAR(36) NOT NULL,
	TYPE VARCHAR(36) NOT NULL
)	
IN HOMEPAGETABSPACE;

CREATE TABLE HOMEPAGE.PREREQ (
		PREREQ_ID VARCHAR(36) NOT NULL,
		APP_ID VARCHAR(36) NOT NULL,
		WIDGET_ID VARCHAR(36) NOT NULL
)
IN HOMEPAGETABSPACE;

CREATE TABLE HOMEPAGE.NT_NOTIFICATION  (
	  NOTIFICATION_ID VARCHAR(36) NOT NULL,
	  NOTIFICATION_SOURCE VARCHAR(36) NOT NULL,
	  NOTIFICATION_TYPE VARCHAR(256) NOT NULL,
	  DATETIME_STAMP TIMESTAMP NOT NULL,
	  SENDER_EXID VARCHAR(36) NOT NULL,
	  SUBJECT VARCHAR(256),
	  MESSAGE VARCHAR(2048),
	  CONTAINER_NAME VARCHAR(256),
	  CONTAINER_URL VARCHAR(2048),
	  ITEM_NAME VARCHAR(256),
	  ITEM_URL VARCHAR(2048) 
)
IN HPNTTABSPACE;

CREATE TABLE HOMEPAGE.NT_NOTIFICATION_RECIPIENT (
		  ID VARCHAR(36) NOT NULL,
		  NOTIFICATION_ID VARCHAR(36) NOT NULL,
		  RECIPIENT_EXID VARCHAR(36) NOT NULL		  
)
IN HPNTTABSPACE;

--------------------------------------
-- CREATE THE CONSTRAINTS
--------------------------------------

ALTER TABLE HOMEPAGE.PERSON 
    ADD CONSTRAINT "PK_PERSON_ID" PRIMARY KEY("PERSON_ID");
    
ALTER TABLE HOMEPAGE.HP_UI
    ADD CONSTRAINT "PK_HP_UI" PRIMARY KEY("UI_ID");    

ALTER TABLE HOMEPAGE.HP_TAB
    ADD CONSTRAINT "PK_HP_TAB" PRIMARY KEY("TAB_ID");
    
ALTER TABLE HOMEPAGE.HP_TAB_INST
    ADD CONSTRAINT "PK_HP_TAB_INST" PRIMARY KEY("TAB_INST_ID");    

ALTER TABLE HOMEPAGE.WIDGET 
	ADD CONSTRAINT "PK_WIDGET" PRIMARY KEY ("WIDGET_ID");
	
ALTER TABLE HOMEPAGE.HP_WIDGET_TAB 
	ADD CONSTRAINT "PK_WIDGET_TAB" PRIMARY KEY ("WIDGET_TAB_ID");

ALTER TABLE HOMEPAGE.PREREQ 
	ADD CONSTRAINT "PK_PREREQ" PRIMARY KEY ("PREREQ_ID");

ALTER TABLE HOMEPAGE.HP_WIDGET_INST
	ADD CONSTRAINT "PK_HP_WIDGET_INST" PRIMARY KEY ("WIDGET_INST_ID");

ALTER TABLE HOMEPAGE.LOGINNAME
	ADD CONSTRAINT "PK_LOGINNAME_ID" PRIMARY KEY ("PERSON_ID","LOGINNAME");	
	
ALTER TABLE HOMEPAGE.NT_NOTIFICATION
	ADD CONSTRAINT "PK_NOTIFICATION" PRIMARY KEY ("NOTIFICATION_ID");
	
ALTER TABLE HOMEPAGE.NT_NOTIFICATION_RECIPIENT
	ADD CONSTRAINT "PK_NOTIF_RECIP" PRIMARY KEY ("ID");

ALTER TABLE HOMEPAGE.LOGINNAME
	ADD CONSTRAINT "FK_LN_PERSON_ID" FOREIGN KEY ("PERSON_ID")
	REFERENCES HOMEPAGE.PERSON("PERSON_ID");
	
ALTER TABLE HOMEPAGE.HP_UI
    ADD CONSTRAINT "FK_UI_PERSON_ID" FOREIGN KEY ("PERSON_ID")
	REFERENCES HOMEPAGE.PERSON("PERSON_ID");	
	
ALTER TABLE HOMEPAGE.HP_TAB_INST
    ADD CONSTRAINT "FK_UI_ID" FOREIGN KEY ("UI_ID")
	REFERENCES HOMEPAGE.HP_UI("UI_ID");

ALTER TABLE HOMEPAGE.HP_TAB_INST
    ADD CONSTRAINT "FK_TAB_INST_TAB_ID" FOREIGN KEY ("TAB_ID")
	REFERENCES HOMEPAGE.HP_TAB("TAB_ID");

ALTER TABLE HOMEPAGE.HP_WIDGET_INST
    ADD CONSTRAINT "FK_WIDGET_ID" FOREIGN KEY ("WIDGET_ID")
	REFERENCES HOMEPAGE.WIDGET ("WIDGET_ID");

ALTER TABLE HOMEPAGE.HP_WIDGET_INST
    ADD CONSTRAINT "FK_TAB_INST_ID" FOREIGN KEY ("TAB_INST_ID")
	REFERENCES HOMEPAGE.HP_TAB_INST("TAB_INST_ID");

ALTER TABLE HOMEPAGE.HP_WIDGET_TAB	
    ADD CONSTRAINT "FK_WID_TAB_WID_ID" FOREIGN KEY ("WIDGET_ID")
	REFERENCES HOMEPAGE.WIDGET("WIDGET_ID");

ALTER TABLE HOMEPAGE.HP_WIDGET_TAB	
    ADD CONSTRAINT "FK_WID_TAB_TAB_ID" FOREIGN KEY ("TAB_ID")
	REFERENCES HOMEPAGE.HP_TAB("TAB_ID");	

ALTER TABLE HOMEPAGE.PREREQ 
	ADD CONSTRAINT "FK_PREREQ_WIDGET" FOREIGN KEY ("WIDGET_ID")
	REFERENCES HOMEPAGE.WIDGET ("WIDGET_ID")
	ON DELETE CASCADE;
	
ALTER TABLE HOMEPAGE.NT_NOTIFICATION_RECIPIENT 
	ADD CONSTRAINT "FK_RECIP_NOTIF" FOREIGN KEY ("NOTIFICATION_ID")
	REFERENCES HOMEPAGE.NT_NOTIFICATION ("NOTIFICATION_ID")
	ON DELETE CASCADE;
	
ALTER TABLE HOMEPAGE.LOGINNAME
	ADD CONSTRAINT LOGINNAME_UNIQUE UNIQUE(LOGINNAME);

	
--------------------------------------
-- CREATE THE INDEXES
--------------------------------------
CREATE INDEX HOMEPAGE.WIDGET_INST
	ON HOMEPAGE.HP_WIDGET_INST(TAB_INST_ID ASC, WIDGET_ID ASC);
	
CREATE UNIQUE INDEX HOMEPAGE.PERSON_EXID
    ON HOMEPAGE.PERSON(EXID);

CREATE INDEX HOMEPAGE.PERSON_USER_MAIL
    ON HOMEPAGE.PERSON(USER_MAIL);

CREATE INDEX HOMEPAGE.HP_UI_PERSON_ID_INDEX
	ON HOMEPAGE.HP_UI(PERSON_ID);

CREATE INDEX HOMEPAGE.NT_NOTIFICATION_EXID_INDEX
	ON HOMEPAGE.NT_NOTIFICATION(SENDER_EXID);
	
CREATE INDEX HOMEPAGE.NT_NOTIF_RECT_EXID_INDEX
	ON HOMEPAGE.NT_NOTIFICATION_RECIPIENT(RECIPIENT_EXID);	
	
CREATE INDEX HOMEPAGE.NT_NOTIF_RECT_NID_INDEX
	ON HOMEPAGE.NT_NOTIFICATION_RECIPIENT(NOTIFICATION_ID);

CREATE INDEX HOMEPAGE.TAB_INST_UI_ID_IDX 
	ON HOMEPAGE.HP_TAB_INST(UI_ID);	

CREATE INDEX HOMEPAGE.HP_WIDGET_INST_TAB_INST_ID_IDX
	ON HOMEPAGE.HP_WIDGET_INST(TAB_INST_ID);	
	

---------------------------------------
-- RUN STATS
---------------------------------------
RUNSTATS ON TABLE "HOMEPAGE"."HOMEPAGE_SCHEMA";
RUNSTATS ON TABLE "HOMEPAGE"."PERSON";
RUNSTATS ON TABLE "HOMEPAGE"."LOGINNAME";
RUNSTATS ON TABLE "HOMEPAGE"."HP_UI";
RUNSTATS ON TABLE "HOMEPAGE"."HP_TAB";
RUNSTATS ON TABLE "HOMEPAGE"."HP_TAB_INST";
RUNSTATS ON TABLE "HOMEPAGE"."HP_WIDGET_INST";
RUNSTATS ON TABLE "HOMEPAGE"."WIDGET";
RUNSTATS ON TABLE "HOMEPAGE"."HP_WIDGET_TAB";
RUNSTATS ON TABLE "HOMEPAGE"."PREREQ";
RUNSTATS ON TABLE "HOMEPAGE"."NT_NOTIFICATION";
RUNSTATS ON TABLE "HOMEPAGE"."NT_NOTIFICATION_RECIPIENT";

RUNSTATS ON TABLE "HOMEPAGE"."HOMEPAGE_SCHEMA" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."PERSON" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."LOGINNAME" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."HP_UI" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."HP_TAB" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."HP_TAB_INST" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."HP_WIDGET_INST" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."WIDGET" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."HP_WIDGET_TAB" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."PREREQ" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."NT_NOTIFICATION" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."NT_NOTIFICATION_RECIPIENT" FOR INDEXES ALL;

COMMIT;
	
--------------------------------------
-- FLUSH
--------------------------------------
FLUSH PACKAGE CACHE DYNAMIC;

------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
-- STARTING OF THE DEFINITION FOR THE NEWS REPOSITORY DATABASE
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------
-- NEWS REPOSITORY - CREATE THE TABLES
----------------------------------------------------------------------------
CREATE TABLE HOMEPAGE.NR_SOURCE (
	SOURCE_ID VARCHAR(36) NOT NULL,
	SOURCE VARCHAR(36) NOT NULL,
	CONTAINER_ID VARCHAR(36) NOT NULL,
	CONTAINER_NAME VARCHAR(256),
	CONTAINER_URL VARCHAR(2048),
	ENTRY_ID  VARCHAR(36),
	ENTRY_NAME VARCHAR(256),
	ENTRY_URL VARCHAR(2048),
	ENTRY_ATOM_URL VARCHAR(2048),
	IS_ACL SMALLINT NOT NULL,
	IS_PRIVATE SMALLINT,
	LAST_UPDATE TIMESTAMP,
	IS_CNAME_RTL SMALLINT NOT NULL DEFAULT 0,
	IS_ENAME_RTL SMALLINT NOT NULL DEFAULT 0
)
IN NEWSTABSPACE;

CREATE TABLE HOMEPAGE.NR_SUBSCRIPTION  (
	SUBSCRIPTION_ID VARCHAR(36) NOT NULL,
	PERSON_ID VARCHAR(36) NOT NULL,
	SOURCE_ID VARCHAR(36) NOT NULL,
	IS_EXPLICIT SMALLINT NOT NULL,
	IS_ACTIVE SMALLINT NOT NULL DEFAULT 1
)
IN NEWSTABSPACE;

CREATE TABLE HOMEPAGE.NR_NEWS_RECORDS (
	NEWS_RECORDS_ID VARCHAR(36) NOT NULL,
	EVENT_NAME VARCHAR(256) NOT NULL,
    READER_ID VARCHAR(36),
    SOURCE VARCHAR(36),
    CONTAINER_ID VARCHAR(36),
    CONTAINER_NAME VARCHAR(256),
    CONTAINER_URL VARCHAR(2048),
    ENTRY_ID VARCHAR(36),
    ENTRY_NAME VARCHAR(256),
    ENTRY_URL VARCHAR(2048),
    ENTRY_ATOM_URL VARCHAR(2048),
    CREATION_DATE TIMESTAMP NOT NULL,
    IS_INBOX SMALLINT NOT NULL,
    IS_SAVED SMALLINT NOT NULL,
    IS_TOP_STORY SMALLINT NOT NULL,
    IS_PUBLIC SMALLINT NOT NULL,
    IS_MAILED SMALLINT NOT NULL,
    TIME_STAMP TIMESTAMP NOT NULL,
    BRIEF_DESC VARCHAR(512),
    IS_BRIEF_DESC_RTL SMALLINT NOT NULL,
    ACTOR_UUID VARCHAR(36),
    EVENT_RECORD_UUID VARCHAR(36) NOT NULL,
    RELATED_COMM_UUID VARCHAR(36),
    RELATED_COMM_NAME VARCHAR(256),
    TAGS VARCHAR(1024),
    META_TEMPLATE VARCHAR(4096) DEFAULT '' NOT NULL,
    TEXT_META_TEMPLATE VARCHAR(1024),
    IS_CONTAINER SMALLINT NOT NULL DEFAULT 0,
    ITEM_ID VARCHAR(36),
    ITEM_CORRELATION_ID VARCHAR(36)
)
IN NEWSTABSPACE;


CREATE TABLE HOMEPAGE.NR_TEMPLATE (
	TEMPLATE_ID VARCHAR(36) NOT NULL,
 	NAME VARCHAR(256) NOT NULL,
 	FORMAT VARCHAR(256) NOT NULL,
 	DATA_SOURCE_STRING VARCHAR(256) NOT NULL,
 	NO_VALUES SMALLINT NOT NULL
)
IN NEWSTABSPACE;

CREATE TABLE HOMEPAGE.NR_EVENT_RECORDS  (
	EVENT_RECORD_ID VARCHAR(36) NOT NULL,
	EVENT_RECORD_CONTENT BLOB (2097152),
	IS_ACL SMALLINT NOT NULL
)
IN NEWSTABSPACE;

-- EMAIL DIGEST
CREATE TABLE HOMEPAGE.EMD_RECIPIENTS (
	RECIPIENT_ID VARCHAR(36) NOT NULL,
	PERSON_ID VARCHAR(36) NOT NULL,
	FREQUENCY_UPDATE SMALLINT NOT NULL,
	LAST_SENT_UPDATE TIMESTAMP NOT NULL,
	MAIL_DOMAIN VARCHAR(256) NOT NULL,
	MAIL_ADDRESS  VARCHAR(256) NOT NULL,
	LOCALE VARCHAR(5),
	DISPLAYNAME VARCHAR(256)
)
IN NEWSTABSPACE;

CREATE TABLE HOMEPAGE.EMD_JOBS  (
	JOB_ID VARCHAR(36) NOT NULL,
	JOB_FREQUENCY SMALLINT NOT NULL,
	NEXT_EXEC_TIME TIMESTAMP,
	DUE_DATE_EXEC_TIME TIMESTAMP,
	START_JOB TIMESTAMP,
	END_JOB TIMESTAMP,
	STATUS VARCHAR(36),
	N_PERSONS_TO_UPDATE INTEGER,
	AVG_EXEC_TIME_SECONDS INTEGER,
	JOB_FREQUENCY_SCALE VARCHAR(36) NOT NULL
)
IN NEWSTABSPACE;

CREATE TABLE HOMEPAGE.EMD_JOBS_STATS (
	STAT_ID VARCHAR(36) NOT NULL,
	JOB_ID VARCHAR(36) NOT NULL,
	START_TIME TIMESTAMP NOT NULL,
    END_TIME TIMESTAMP NOT NULL,
    EXEC_TIME_SECONDS INTEGER,
    N_PERSONS_UPDATED INTEGER,
    STATUS VARCHAR(36) NOT NULL DEFAULT 'COMPLETED'
)
IN NEWSTABSPACE;


----------------------------------------------------------------------------
-- NEWS REPOSITORY -  CREATE THE CONSTRAINTS
----------------------------------------------------------------------------
ALTER TABLE HOMEPAGE.NR_SOURCE
    ADD CONSTRAINT "PK_SOURCE_ID" PRIMARY KEY("SOURCE_ID");    

ALTER TABLE HOMEPAGE.NR_SUBSCRIPTION
    ADD CONSTRAINT "PK_SUBSCRIPTION_ID" PRIMARY KEY("SUBSCRIPTION_ID");

ALTER TABLE HOMEPAGE.NR_NEWS_RECORDS
    ADD CONSTRAINT "PK_NR_NEWS_RECORDS" PRIMARY KEY("NEWS_RECORDS_ID");

ALTER TABLE HOMEPAGE.NR_TEMPLATE 
    ADD CONSTRAINT "PK_TEMPLATE_ID" PRIMARY KEY("TEMPLATE_ID");    

ALTER TABLE HOMEPAGE.NR_SUBSCRIPTION
    ADD CONSTRAINT "FK_PERSON_ID" FOREIGN KEY ("PERSON_ID")
	REFERENCES HOMEPAGE.PERSON ("PERSON_ID");
	
ALTER TABLE HOMEPAGE.NR_SUBSCRIPTION
    ADD CONSTRAINT "FK_SOURCE_ID" FOREIGN KEY ("SOURCE_ID")
	REFERENCES HOMEPAGE.NR_SOURCE ("SOURCE_ID");

ALTER TABLE HOMEPAGE.NR_EVENT_RECORDS
    ADD CONSTRAINT "PK_EVENT_RECORD_ID" PRIMARY KEY("EVENT_RECORD_ID"); 

-- EMAIL DIGEST CONSTRAINTS
ALTER TABLE HOMEPAGE.EMD_RECIPIENTS
    ADD CONSTRAINT "PK_RECIPIENT_ID" PRIMARY KEY("RECIPIENT_ID");    

ALTER TABLE HOMEPAGE.EMD_JOBS
    ADD CONSTRAINT "PK_JOB_ID" PRIMARY KEY("JOB_ID");

ALTER TABLE HOMEPAGE.EMD_JOBS_STATS
    ADD CONSTRAINT "PK_STAT_ID" PRIMARY KEY("STAT_ID");

ALTER TABLE HOMEPAGE.EMD_RECIPIENTS
    ADD CONSTRAINT "FK_REC_PERSON_ID" FOREIGN KEY ("PERSON_ID")
	REFERENCES HOMEPAGE.PERSON ("PERSON_ID");
	
ALTER TABLE HOMEPAGE.EMD_JOBS_STATS
    ADD CONSTRAINT "FK_JOB_ID" FOREIGN KEY ("JOB_ID")
	REFERENCES HOMEPAGE.EMD_JOBS ("JOB_ID");

ALTER TABLE HOMEPAGE.EMD_JOBS
	ADD CONSTRAINT UNIQUE_JOB_FREQ UNIQUE("JOB_FREQUENCY");		

----------------------------------------------------------------------------
-- NEWS REPOSITORY -  CREATE THE INDEXES
----------------------------------------------------------------------------
CREATE UNIQUE INDEX HOMEPAGE.NR_SUBSCRIPTION_IX_UNIQUE
	ON HOMEPAGE.NR_SUBSCRIPTION("PERSON_ID" ASC, "SOURCE_ID" ASC);

CREATE INDEX HOMEPAGE.NR_SUBSCRIPTION_SOURCE_IDX  
    ON HOMEPAGE.NR_SUBSCRIPTION(SOURCE_ID);	
	
CREATE UNIQUE INDEX HOMEPAGE.NR_SOURCE_IX_UNIQUE
	ON HOMEPAGE.NR_SOURCE("SOURCE" ASC, "CONTAINER_ID" ASC, "ENTRY_ID" ASC, "IS_ACL" ASC);

CREATE INDEX HOMEPAGE.NR_SOURCE_CONTAINER_NAME_IDX
    ON HOMEPAGE.NR_SOURCE(SOURCE ASC, CONTAINER_NAME ASC, ENTRY_ID ASC, IS_ACL ASC);	

CREATE INDEX HOMEPAGE.NR_NEWS_RECORDS_READER_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS(READER_ID);

CREATE INDEX HOMEPAGE.NR_NEWS_RECORDS_ACTOR_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS(ACTOR_UUID);

CREATE INDEX HOMEPAGE.NR_NEWS_RECORDS_SOURCE_IDX 
	ON HOMEPAGE.NR_NEWS_RECORDS (CREATION_DATE DESC, NEWS_RECORDS_ID, READER_ID, IS_CONTAINER, IS_PUBLIC, SOURCE);

CREATE INDEX HOMEPAGE.NR_NEWS_RECORDS_CONTAINER_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS(CONTAINER_ID);
	
CREATE INDEX HOMEPAGE.NR_NEWS_RECORDS_DATE_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS(CREATION_DATE DESC);

CREATE INDEX HOMEPAGE.NR_NEWS_RECORDS_EVENT_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS(EVENT_RECORD_UUID);

CREATE INDEX HOMEPAGE.NR_NEWS_RECORDS_IX1 
	ON HOMEPAGE.NR_NEWS_RECORDS (CREATION_DATE DESC, NEWS_RECORDS_ID, READER_ID, IS_CONTAINER,  IS_PUBLIC );	

CREATE INDEX HOMEPAGE.NR_READ_SOUR_ACTR_IS_PUB_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS (READER_ID, SOURCE, ACTOR_UUID, IS_PUBLIC);

CREATE INDEX HOMEPAGE.NR_READER_ER_UUID_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS (READER_ID, EVENT_RECORD_UUID);
	
CREATE INDEX HOMEPAGE.NR_READER_IS_TOP_STORY_IDX 
	ON HOMEPAGE.NR_NEWS_RECORDS (CREATION_DATE DESC, NEWS_RECORDS_ID, READER_ID, IS_TOP_STORY);

CREATE INDEX HOMEPAGE.NR_READER_IS_SAVED_IDX 
	ON HOMEPAGE.NR_NEWS_RECORDS(CREATION_DATE DESC, READER_ID, IS_SAVED);

CREATE INDEX HOMEPAGE.NR_READER_TOPSTORY_SRC_IDX 
	ON HOMEPAGE.NR_NEWS_RECORDS (CREATION_DATE DESC, NEWS_RECORDS_ID, READER_ID, IS_TOP_STORY, SOURCE);		

CREATE UNIQUE INDEX HOMEPAGE.NR_NEWS_RECORDS_COMM_UUID_IDX
    ON HOMEPAGE.NR_NEWS_RECORDS (CREATION_DATE DESC, NEWS_RECORDS_ID, SOURCE, RELATED_COMM_UUID ) INCLUDE (READER_ID, IS_CONTAINER, IS_PUBLIC);

CREATE INDEX HOMEPAGE.NR_NEWS_WATCHLIST_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS (CONTAINER_ID,SOURCE,IS_CONTAINER,READER_ID);
	        
-- EMAIL DIGEST INDEXES
CREATE INDEX HOMEPAGE.EMD_RECIPIENTS_SENT_UPDATE_IDX
	ON HOMEPAGE.EMD_RECIPIENTS(LAST_SENT_UPDATE DESC);

CREATE INDEX HOMEPAGE.EMD_RECIPIENTS_MAIL_DOMAIN_IDX
	ON HOMEPAGE.EMD_RECIPIENTS(MAIL_DOMAIN DESC);		


-------------------------------------------------------------------
-- START ADDING SCHEDULER TABLES
-------------------------------------------------------------------

CREATE TABLE HOMEPAGE.NR_SCHEDULER_TASK (
	TASKID BIGINT NOT NULL,
	VERSION VARCHAR(5) NOT NULL,
	ROW_VERSION INTEGER NOT NULL,
	TASKTYPE INTEGER NOT NULL,
	TASKSUSPENDED SMALLINT NOT NULL,
	CANCELLED SMALLINT NOT NULL,
	NEXTFIRETIME BIGINT NOT NULL,
	STARTBYINTERVAL VARCHAR(254),
	STARTBYTIME BIGINT,
	VALIDFROMTIME BIGINT,
	VALIDTOTIME BIGINT,
	REPEATINTERVAL VARCHAR(254),
	MAXREPEATS INTEGER NOT NULL,
	REPEATSLEFT INTEGER NOT NULL,
	TASKINFO BLOB(102400) LOGGED NOT COMPACT,
	NAME VARCHAR(254) NOT NULL,
	AUTOPURGE INTEGER NOT NULL,
	FAILUREACTION INTEGER,
	MAXATTEMPTS INTEGER,
	QOS INTEGER,
	PARTITIONID INTEGER,
	OWNERTOKEN VARCHAR(200) NOT NULL,
	CREATETIME BIGINT NOT NULL
) 
IN NEWSTABSPACE;

ALTER TABLE HOMEPAGE.NR_SCHEDULER_TASK 
	ADD PRIMARY KEY (TASKID);

CREATE INDEX HOMEPAGE.NR_SCHEDULER_TASK_IDX1 
	ON HOMEPAGE.NR_SCHEDULER_TASK (TASKID, OWNERTOKEN);

CREATE INDEX HOMEPAGE.NR_SCHEDULER_TASK_IDX2 
	ON HOMEPAGE.NR_SCHEDULER_TASK (NEXTFIRETIME ASC, REPEATSLEFT, PARTITIONID) CLUSTER;

CREATE TABLE HOMEPAGE.NR_SCHEDULER_TREG (
	REGKEY VARCHAR(254) NOT NULL,
	REGVALUE VARCHAR(254) 
) 
IN NEWSTABSPACE;

ALTER TABLE HOMEPAGE.NR_SCHEDULER_TREG 
	ADD PRIMARY KEY (REGKEY);

CREATE TABLE HOMEPAGE.NR_SCHEDULER_LMGR (
	LEASENAME VARCHAR(254) NOT NULL,
	LEASEOWNER VARCHAR(254) NOT NULL,
	LEASE_EXPIRE_TIME  BIGINT,
	DISABLED VARCHAR(5)
)
IN NEWSTABSPACE;

ALTER TABLE HOMEPAGE.NR_SCHEDULER_LMGR 
	ADD PRIMARY KEY (LEASENAME);

CREATE TABLE HOMEPAGE.NR_SCHEDULER_LMPR (
	LEASENAME VARCHAR(254) NOT NULL,
	NAME VARCHAR(254) NOT NULL,
	VALUE VARCHAR(254) NOT NULL
)
IN NEWSTABSPACE;

CREATE INDEX HOMEPAGE.NR_SCHEDULER_LMPR_IDX1 
	ON HOMEPAGE.NR_SCHEDULER_LMPR (LEASENAME, NAME);
	
-------------------------------------------------------------------
-- END ADDING SCHEDULER TABLES
-------------------------------------------------------------------
	
-----------------------------------------------------------------------------
-- NEWS REPOSITORY -  RUN STATS
-----------------------------------------------------------------------------
RUNSTATS ON TABLE "HOMEPAGE"."NR_SOURCE" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."NR_SUBSCRIPTION" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."NR_NEWS_RECORDS" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."NR_TEMPLATE" FOR INDEXES ALL;

RUNSTATS ON TABLE "HOMEPAGE"."NR_SOURCE" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."NR_SUBSCRIPTION" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."NR_NEWS_RECORDS" FOR INDEXES ALL;
RUNSTATS ON TABLE "HOMEPAGE"."NR_TEMPLATE" FOR INDEXES ALL;



COMMIT;
	
--------------------------------------
-- FLUSH
--------------------------------------
FLUSH PACKAGE CACHE DYNAMIC;

------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
-- END OF THE DEFINITION FOR THE NEWS REPOSITORY DATABASE
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
-- START THE DEFINITION FOR THE SEARCH DATABASE
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------
-- SEARCH -  CREATE THE TABLES
----------------------------------------------------------------------------

CREATE TABLE HOMEPAGE.SR_TASKDEF (
	TASK_ID VARCHAR(36) NOT NULL,
	TASK_NAME VARCHAR(256) NOT NULL,
	STARTBY VARCHAR(256),
	INTERVAL VARCHAR(256),
	TASK_TYPE VARCHAR(36) NOT NULL,
	ENABLED SMALLINT NOT NULL DEFAULT 1
)
IN HOMEPAGETABSPACE;

CREATE TABLE HOMEPAGE.SR_INDEXINGTASKDEF (
	INDEXING_TASK_ID VARCHAR(36) NOT NULL,
	TASK_ID VARCHAR(36) NOT NULL,
	INDEXING_TASK_SERVICES VARCHAR(256) NOT NULL,
	INDEXING_TASK_OPTIMIZE SMALLINT NOT NULL	
)
IN HOMEPAGETABSPACE;

CREATE TABLE HOMEPAGE.SR_OPTIMIZETASKDEF (
	OPTIMIZE_TASK_ID VARCHAR(36) NOT NULL,	
	TASK_ID VARCHAR(36) NOT NULL	
)
IN HOMEPAGETABSPACE;

CREATE TABLE HOMEPAGE.SR_FILESCONTENT (
	FILESCONTENT_ID VARCHAR(36) NOT NULL,
	URL VARCHAR(256) NOT NULL,
	COMPONENT_UUID VARCHAR(36) NOT NULL,
	COMPONENT VARCHAR(36) NOT NULL,
	CREATION_DATE TIMESTAMP NOT NULL,
	LAST_MODIFIED_DATE TIMESTAMP NOT NULL,
	LAST_ACCESSED_DATE TIMESTAMP NOT NULL,
	IS_CURRENT SMALLINT NOT NULL,
	CONTENT CLOB(200 K) NOT NULL,
	FILE_SIZE BIGINT NOT NULL,
	CONTENT_SIZE BIGINT NOT NULL,
	INPUT_MIME_TYPE VARCHAR(256) NOT NULL,
	CLAIMED SMALLINT NOT NULL DEFAULT 0,
	CLAIMED_TIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
)
IN HOMEPAGETABSPACE;

CREATE TABLE HOMEPAGE.SR_MIGTASKDEFINFO (
	MIGTASKDEFINFO_ID VARCHAR(36) NOT NULL,
	NUM_TASKS_MIG INTEGER NOT NULL DEFAULT 1  
)
IN HOMEPAGETABSPACE;

CREATE TABLE HOMEPAGE.SR_FILECONTENTTASKDEF (
	FILECONTENT_TASK_ID VARCHAR(36) NOT NULL,	
	TASK_ID VARCHAR(36) NOT NULL,
	FILE_CONTENT_TASK_SERVICES VARCHAR(256) NOT NULL,
	CONTENT_FAILURES_ONLY SMALLINT NOT NULL	
)
IN HOMEPAGETABSPACE;

CREATE VIEW HOMEPAGE.SR_ALLTASKSDEF 	AS
(
	SELECT 	T1.TASK_ID  			AS	PARENT_TASK_ID,
	T1.TASK_NAME 					AS	PARENT_TASK_NAME,
	T1.INTERVAL 					AS	PARENT_TASK_INTERVAL,
	T1.STARTBY	 					AS	PARENT_TASK_STARTBY,
	T1.TASK_TYPE 					AS	PARENT_TASK_TYPE,
    T1.ENABLED 						AS  PARENT_TASK_ENABLED,
	T2.INDEXING_TASK_SERVICES		AS	INDEXING_TASK_SERVICES,
	T2.INDEXING_TASK_OPTIMIZE		AS	INDEXING_TASK_OPTIMIZE,
	T2.INDEXING_TASK_ID				AS	INDEXING_TASK_ID,
	''								AS	OPTIMIZE_TASK_ID,
	'' 								AS 	FILECONTENT_TASK_ID,
	''								AS	FILE_CONTENT_TASK_SERVICES,
	0								AS 	CONTENT_FAILURES_ONLY,
	T2.INDEXING_TASK_ID				AS	CHILDTASK_PK
	FROM    HOMEPAGE.SR_TASKDEF T1,
			HOMEPAGE.SR_INDEXINGTASKDEF T2 
	WHERE T1.TASK_ID=T2.TASK_ID
) 
UNION 
(
	SELECT T3.TASK_ID				AS 	PARENT_TASK_ID,
	T3.TASK_NAME 					AS 	PARENT_TASK_NAME,
	T3.INTERVAL						AS 	PARENT_TASK_INTERVAL,
	T3.STARTBY 						AS	PARENT_TASK_STARTBY,
	T3.TASK_TYPE 					AS 	PARENT_TASK_TYPE,
 	T3.ENABLED 						AS  PARENT_TASK_ENABLED,
	''								AS 	INDEXING_TASK_SERVICES,
	0								AS	INDEXING_TASK_OPTIMIZE,
	''								AS	INDEXING_TASK_ID,
	T4.OPTIMIZE_TASK_ID 			AS	OPTIMIZE_TASK_ID,
	'' 								AS 	FILECONTENT_TASK_ID,
	''								AS	FILE_CONTENT_TASK_SERVICES,
	0								AS 	CONTENT_FAILURES_ONLY,
	T4.OPTIMIZE_TASK_ID				AS	CHILDTASK_PK
	FROM   	HOMEPAGE.SR_TASKDEF T3,
			HOMEPAGE.SR_OPTIMIZETASKDEF T4
	WHERE  T3.TASK_ID=T4.TASK_ID
)
UNION 
(
	SELECT T5.TASK_ID				AS 	PARENT_TASK_ID,
	T5.TASK_NAME 					AS 	PARENT_TASK_NAME,
	T5.INTERVAL						AS 	PARENT_TASK_INTERVAL,
	T5.STARTBY 						AS	PARENT_TASK_STARTBY,
	T5.TASK_TYPE 					AS 	PARENT_TASK_TYPE,
 	T5.ENABLED 						AS  PARENT_TASK_ENABLED,
	''								AS 	INDEXING_TASK_SERVICES,
	0								AS	INDEXING_TASK_OPTIMIZE,
	''								AS	INDEXING_TASK_ID,
	''								AS	OPTIMIZE_TASK_ID,
	T6.FILECONTENT_TASK_ID 			AS 	FILECONTENT_TASK_ID,
	T6.FILE_CONTENT_TASK_SERVICES	AS	FILE_CONTENT_TASK_SERVICES,
	T6.CONTENT_FAILURES_ONLY		AS 	CONTENT_FAILURES_ONLY,
	T6.FILECONTENT_TASK_ID			AS	CHILDTASK_PK
	FROM   	HOMEPAGE.SR_TASKDEF T5,
			HOMEPAGE.SR_FILECONTENTTASKDEF T6
	WHERE  T5.TASK_ID=T6.TASK_ID
);

----------------------------------------------------------------------------
-- SEARCH -  CREATE THE CONSTRAINTS
----------------------------------------------------------------------------
ALTER TABLE HOMEPAGE.SR_TASKDEF
	 ADD CONSTRAINT "PK_TASK_ID" PRIMARY KEY ("TASK_ID");

ALTER TABLE HOMEPAGE.SR_INDEXINGTASKDEF
	ADD CONSTRAINT "PK_INDEX_TASK_ID" PRIMARY KEY ("INDEXING_TASK_ID");

ALTER TABLE HOMEPAGE.SR_OPTIMIZETASKDEF
	ADD CONSTRAINT "PK_OPT_TASK_ID" PRIMARY KEY ("OPTIMIZE_TASK_ID");

ALTER TABLE HOMEPAGE.SR_FILESCONTENT
	ADD CONSTRAINT "PK_FILESCONTENT_ID" PRIMARY KEY ("FILESCONTENT_ID");

ALTER TABLE HOMEPAGE.SR_MIGTASKDEFINFO
	ADD CONSTRAINT "PK_MIGTASKDEF_ID" PRIMARY KEY("MIGTASKDEFINFO_ID");

ALTER TABLE HOMEPAGE.SR_FILECONTENTTASKDEF
	ADD CONSTRAINT "PK_FC_TASK_ID" PRIMARY KEY ("FILECONTENT_TASK_ID");	

ALTER TABLE HOMEPAGE.SR_INDEXINGTASKDEF
	ADD CONSTRAINT "FK_INDEX_TASK_ID" FOREIGN KEY ("TASK_ID") 
	REFERENCES HOMEPAGE.SR_TASKDEF("TASK_ID") ON DELETE CASCADE;

ALTER TABLE HOMEPAGE.SR_OPTIMIZETASKDEF
	ADD CONSTRAINT "FK_OPT_TASK_ID" FOREIGN KEY ("TASK_ID") 
	REFERENCES  HOMEPAGE.SR_TASKDEF("TASK_ID") ON DELETE CASCADE;

ALTER TABLE HOMEPAGE.SR_TASKDEF
    	ADD CONSTRAINT UNIQUE_TASK_NAME UNIQUE ("TASK_NAME");
    
ALTER TABLE HOMEPAGE.SR_INDEXINGTASKDEF
	ADD CONSTRAINT UNIQUE_TASK_ID_IND UNIQUE ("TASK_ID");

ALTER TABLE HOMEPAGE.SR_OPTIMIZETASKDEF
	ADD CONSTRAINT UNIQUE_TASK_ID_OPT UNIQUE ("TASK_ID");

ALTER TABLE HOMEPAGE.SR_FILESCONTENT
	ADD CONSTRAINT UNIQUE_COMP_UUID UNIQUE ("COMPONENT_UUID","COMPONENT");

ALTER TABLE HOMEPAGE.SR_TASKDEF
    	ADD CONSTRAINT "CHECK_SR_TASKDEF"
    	CHECK ( (STARTBY IS NOT NULL AND INTERVAL IS NOT NULL) OR (STARTBY IS NULL AND INTERVAL IS NULL) );

ALTER TABLE HOMEPAGE.SR_FILECONTENTTASKDEF
	ADD CONSTRAINT "UNIQUE_TASK_ID_FC" UNIQUE ("TASK_ID");
	
ALTER TABLE HOMEPAGE.SR_FILECONTENTTASKDEF
	ADD CONSTRAINT "FK_FC_TASK_ID" FOREIGN KEY ("TASK_ID") 
	REFERENCES  HOMEPAGE.SR_TASKDEF("TASK_ID") ON DELETE CASCADE;

CREATE INDEX HOMEPAGE.SR_FILESCONTENT_IS_CURRENT_IDX 
	ON HOMEPAGE.SR_FILESCONTENT (IS_CURRENT);
	

-------------------------------------------------------------------
-- START SEARCH SCHEDULER TABLES
-------------------------------------------------------------------

CREATE TABLE HOMEPAGE.LOTUSCONNECTIONSTASK ("TASKID" BIGINT NOT NULL ,
              "VERSION" VARCHAR(5) NOT NULL ,
              "ROW_VERSION" INTEGER NOT NULL ,
              "TASKTYPE" INTEGER NOT NULL ,
              "TASKSUSPENDED" SMALLINT NOT NULL ,
              "CANCELLED" SMALLINT NOT NULL ,
              "NEXTFIRETIME" BIGINT NOT NULL ,
              "STARTBYINTERVAL" VARCHAR(254) ,
              "STARTBYTIME" BIGINT ,
              "VALIDFROMTIME" BIGINT ,
              "VALIDTOTIME" BIGINT ,
              "REPEATINTERVAL" VARCHAR(254) ,
              "MAXREPEATS" INTEGER NOT NULL ,
              "REPEATSLEFT" INTEGER NOT NULL ,
              "TASKINFO" BLOB(102400) LOGGED NOT COMPACT ,
              "NAME" VARCHAR(254) NOT NULL ,
              "AUTOPURGE" INTEGER NOT NULL ,
              "FAILUREACTION" INTEGER ,
              "MAXATTEMPTS" INTEGER ,
              "QOS" INTEGER ,
              "PARTITIONID" INTEGER ,
              "OWNERTOKEN" VARCHAR(200) NOT NULL ,
              "CREATETIME" BIGINT NOT NULL )  IN "HOMEPAGETABSPACE";

ALTER TABLE HOMEPAGE.LOTUSCONNECTIONSTASK ADD PRIMARY KEY ("TASKID");

CREATE INDEX HOMEPAGE.LOTUSCONNECTIONSTASK_IDX1 ON HOMEPAGE.LOTUSCONNECTIONSTASK ("TASKID",
              "OWNERTOKEN") ;

CREATE INDEX HOMEPAGE.LOTUSCONNECTIONSTASK_IDX2 ON HOMEPAGE.LOTUSCONNECTIONSTASK ("NEXTFIRETIME" ASC,
               "REPEATSLEFT",
               "PARTITIONID") CLUSTER;

CREATE TABLE HOMEPAGE.LOTUSCONNECTIONSTREG ("REGKEY" VARCHAR(254) NOT NULL ,
              "REGVALUE" VARCHAR(254) ) IN "HOMEPAGETABSPACE";

ALTER TABLE HOMEPAGE.LOTUSCONNECTIONSTREG ADD PRIMARY KEY ("REGKEY");

CREATE TABLE HOMEPAGE.LOTUSCONNECTIONSLMGR (LEASENAME VARCHAR(254) NOT NULL,
               LEASEOWNER VARCHAR(254) NOT NULL,
               LEASE_EXPIRE_TIME  BIGINT,
              DISABLED VARCHAR(5))IN "HOMEPAGETABSPACE";

ALTER TABLE HOMEPAGE.LOTUSCONNECTIONSLMGR ADD PRIMARY KEY ("LEASENAME");

CREATE TABLE HOMEPAGE.LOTUSCONNECTIONSLMPR (LEASENAME VARCHAR(254) NOT NULL,
              NAME VARCHAR(254) NOT NULL,
              VALUE VARCHAR(254) NOT NULL)IN "HOMEPAGETABSPACE";

CREATE INDEX HOMEPAGE.LOTUSCONNECTIONSLMPR_IDX1 ON HOMEPAGE.LOTUSCONNECTIONSLMPR (LEASENAME,
               NAME);

-------------------------------------------------------------------
-- END SEARCH SCHEDULER TABLES
-------------------------------------------------------------------


--------------------------------------
-- POPULATE VERSION TABLE 
--------------------------------------

 INSERT INTO HOMEPAGE.HOMEPAGE_SCHEMA
	( COMPKEY, DBSCHEMAVER, RELEASEVER) 
 VALUES 
	( 'HOMEPAGE', 23, '3.0.0');

COMMIT;
	
--------------------------------------
-- FLUSH
--------------------------------------
FLUSH PACKAGE CACHE DYNAMIC;

------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
-- END THE DEFINITION FOR THE SEARCH DATABASE
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------


--------------------------------------
-- TERMINATE
--------------------------------------
connect reset;
terminate;
