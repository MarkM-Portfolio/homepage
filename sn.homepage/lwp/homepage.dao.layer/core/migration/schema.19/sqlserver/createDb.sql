-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                    
-- Copyright IBM Corp. 2008, 2015                                    
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 
    
--------------------------------------
-- CREATE THE DATABASE
--------------------------------------
CREATE DATABASE HOMEPAGE ON PRIMARY
	( NAME = 'HOMEPAGE', FILENAME = '$(filepath)\HOMEPAGE.mdf', SIZE = 100MB, FILEGROWTH = 20MB )
	LOG ON
	( NAME = 'HOMEPAGE_log', FILENAME = '$(filepath)\HOMEPAGE_log.ldf', SIZE = 20MB, FILEGROWTH = 2MB ) COLLATE LATIN1_GENERAL_BIN
GO

USE HOMEPAGE;
GO 
ALTER DATABASE HOMEPAGE SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
ALTER DATABASE HOMEPAGE SET READ_COMMITTED_SNAPSHOT ON;
ALTER DATABASE HOMEPAGE SET ALLOW_SNAPSHOT_ISOLATION ON;
ALTER DATABASE HOMEPAGE SET MULTI_USER;
GO 
 
--------------------------------------
-- CONNECT TO HOMEPAGE
--------------------------------------
USE HOMEPAGE
GO

--------------------------------------
-- CREATE THE SCHEMA
-- The CREATE SCHEMA command must be the first statement in a query batch, that is, must right after GO command
--------------------------------------
CREATE SCHEMA HOMEPAGE
GO

--------------------------------------
-- CREATE HOMEPAGE USER
--------------------------------------
USE HOMEPAGE
GO
CREATE ROLE HOMEPAGE_ROLE
CREATE LOGIN HOMEPAGEUSER WITH PASSWORD = '$(password)', DEFAULT_DATABASE = HOMEPAGE

CREATE USER HOMEPAGEUSER FOR LOGIN HOMEPAGEUSER WITH DEFAULT_SCHEMA = HOMEPAGE
GO

--------------------------------------
-- CREATE THE TABLES
--------------------------------------
BEGIN TRANSACTION
GO

CREATE TABLE HOMEPAGE.HOMEPAGE_SCHEMA (
	COMPKEY nvarchar(36) NOT NULL,
	DBSCHEMAVER NUMERIC(5,0) NOT NULL,
	RELEASEVER nvarchar(32) NOT NULL DEFAULT ''
)  ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.PERSON  (
	PERSON_ID nvarchar(36) NOT NULL,
	DISPLAYNAME nvarchar(256) NOT NULL,
	EXID nvarchar(256) NOT NULL,
	USER_MAIL nvarchar(256)	
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.LOGINNAME (
	PERSON_ID nvarchar(36) NOT NULL,
	LOGINNAME nvarchar(256) NOT NULL,
) ON [PRIMARY]

GO

CREATE TABLE HOMEPAGE.HP_UI  (
	UI_ID nvarchar(36) NOT NULL,
	PERSON_ID nvarchar(36) NOT NULL,
	PERSON_LANG nvarchar(5) NOT NULL,
	LAST_VISIT DATETIME NOT NULL,
	WELCOME_MODE NUMERIC(5,0) NOT NULL DEFAULT 1,
	SHOW_DISABLED_WIDGETS NUMERIC(5,0) NOT NULL DEFAULT 0 
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.HP_TAB  (
	TAB_ID nvarchar(36) NOT NULL,
	DEFAULT_NAME nvarchar(36) NOT NULL,
	DEFAULT_N_COLUMNS NUMERIC(5, 0) NOT NULL DEFAULT 0,
	IS_NAME_CHANGEABLE NUMERIC(5,0) NOT NULL DEFAULT 0	
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.HP_TAB_INST  (
	TAB_INST_ID nvarchar(36) NOT NULL,
	TAB_ID nvarchar(36) NOT NULL,
	UI_ID nvarchar(36) NOT NULL,
	TAB_NAME nvarchar(36),
	N_COLUMNS NUMERIC(5, 0) NOT NULL DEFAULT 0,
	LAST_MODIFIED DATETIME NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.HP_WIDGET_INST  (
	WIDGET_INST_ID nvarchar(36) NOT NULL,
	WIDGET_ID nvarchar(36) NOT NULL,
	TAB_INST_ID nvarchar(36) NOT NULL,
	WIDGET_SETTING nvarchar(2048),
	CONTAINER nvarchar(36),
	ORDER_SEQUENCE NUMERIC(5, 0),
	IS_FIXED NUMERIC(5,0),
	IS_TOGGLED NUMERIC(5,0),
	LAST_MODIFIED DATETIME NOT NULL,
	LAST_UPDATED DATETIME
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.WIDGET (
	WIDGET_ID nvarchar(36) NOT NULL,
	WIDGET_TITLE nvarchar(256) NOT NULL,
	WIDGET_TEXT nvarchar(256),
	WIDGET_URL nvarchar(256) NOT NULL,
	WIDGET_ICON nvarchar(256),
	WIDGET_ENABLED NUMERIC(5,0) NOT NULL DEFAULT 0,
	WIDGET_SYSTEM NUMERIC(5,0) NOT NULL DEFAULT 0,
	WIDGET_HOMEPAGE_SPECIFIC NUMERIC(5,0) NOT NULL DEFAULT 0,
	WIDGET_PREVIEW_IMAGE nvarchar(256),
	WIDGET_CATEGORY nvarchar(36) DEFAULT ' ' NOT NULL,
	WIDGET_IS_DEFAULT_OPENED NUMERIC(5,0) NOT NULL DEFAULT 0,
	WIDGET_MULTIPLE_INSTANCES NUMERIC(5,0) NOT NULL DEFAULT 0,
	WIDGET_MARKED_CACHABLE NUMERIC(5,0) NOT NULL DEFAULT 0,
	WIDGET_SECURE_URL nvarchar(256) DEFAULT '',
	WIDGET_SECURE_ICON nvarchar(256) DEFAULT ''
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.HP_WIDGET_TAB (
	WIDGET_TAB_ID nvarchar(36) NOT NULL,
	WIDGET_ID nvarchar(36) NOT NULL,
	TAB_ID nvarchar(36) NOT NULL,
	TYPE nvarchar(36) NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.PREREQ (
	PREREQ_ID nvarchar(36) NOT NULL,
	APP_ID nvarchar(36) NOT NULL,
	WIDGET_ID nvarchar(36) NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.NT_NOTIFICATION  (
	  NOTIFICATION_ID nvarchar(36) NOT NULL,
	  NOTIFICATION_SOURCE nvarchar(36) NOT NULL,
	  NOTIFICATION_TYPE nvarchar(256) NOT NULL,
	  DATETIME_STAMP DATETIME NOT NULL,
	  SENDER_EXID nvarchar(36) NOT NULL,
	  SUBJECT nvarchar(256),
	  MESSAGE nvarchar(2048),
	  CONTAINER_NAME nvarchar(256),
	  CONTAINER_URL nvarchar(2048),
	  ITEM_NAME nvarchar(256),
	  ITEM_URL nvarchar(2048)
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.NT_NOTIFICATION_RECIPIENT (
		  ID nvarchar(36) NOT NULL,
		  NOTIFICATION_ID nvarchar(36) NOT NULL,
		  RECIPIENT_EXID nvarchar(36) NOT NULL		  
) ON [PRIMARY]
GO

--------------------------------------
-- CREATE THE CONSTRAINTS
--------------------------------------
ALTER TABLE HOMEPAGE.PERSON
   ADD CONSTRAINT PK_PERSON_ID PRIMARY KEY (PERSON_ID)
GO

ALTER TABLE HOMEPAGE.HP_UI
    ADD CONSTRAINT PK_HP_UI PRIMARY KEY (UI_ID)  
GO

ALTER TABLE HOMEPAGE.HP_TAB
    ADD CONSTRAINT PK_HP_TAB PRIMARY KEY (TAB_ID)
GO

ALTER TABLE HOMEPAGE.HP_TAB_INST
    ADD CONSTRAINT PK_HP_TAB_INST PRIMARY KEY (TAB_INST_ID)    
GO

ALTER TABLE HOMEPAGE.WIDGET 
	ADD CONSTRAINT PK_WIDGET PRIMARY KEY (WIDGET_ID)
GO

ALTER TABLE HOMEPAGE.HP_WIDGET_TAB 
	ADD CONSTRAINT PK_WIDGET_TAB PRIMARY KEY (WIDGET_TAB_ID)
GO

ALTER TABLE HOMEPAGE.PREREQ 
	ADD CONSTRAINT PK_PREREQ PRIMARY KEY (PREREQ_ID)
GO

ALTER TABLE HOMEPAGE.HP_WIDGET_INST
	ADD CONSTRAINT PK_HP_WIDGET_INST PRIMARY KEY (WIDGET_INST_ID)
GO

ALTER TABLE HOMEPAGE.LOGINNAME
	ADD CONSTRAINT PK_LOGINNAME_ID PRIMARY KEY (PERSON_ID,LOGINNAME)
GO

ALTER TABLE HOMEPAGE.NT_NOTIFICATION
	ADD CONSTRAINT PK_NOTIFICATION PRIMARY KEY (NOTIFICATION_ID)
	
ALTER TABLE HOMEPAGE.NT_NOTIFICATION_RECIPIENT
	ADD CONSTRAINT PK_NOTIF_RECIP PRIMARY KEY (ID)
GO

ALTER TABLE HOMEPAGE.LOGINNAME
	ADD CONSTRAINT FK_LN_PERSON_ID FOREIGN KEY (PERSON_ID)
	REFERENCES HOMEPAGE.PERSON (PERSON_ID)
GO

ALTER TABLE HOMEPAGE.HP_UI
    ADD CONSTRAINT FK_UI_PERSON_ID FOREIGN KEY (PERSON_ID)
	REFERENCES HOMEPAGE.PERSON (PERSON_ID)	
GO
	
ALTER TABLE HOMEPAGE.HP_TAB_INST
    ADD CONSTRAINT FK_UI_ID FOREIGN KEY (UI_ID)
	REFERENCES HOMEPAGE.HP_UI(UI_ID)
GO

ALTER TABLE HOMEPAGE.HP_TAB_INST
    ADD CONSTRAINT FK_TAB_INST_TAB_ID FOREIGN KEY (TAB_ID)
	REFERENCES HOMEPAGE.HP_TAB(TAB_ID)
GO

ALTER TABLE HOMEPAGE.HP_WIDGET_INST
    ADD CONSTRAINT FK_WIDGET_ID FOREIGN KEY (WIDGET_ID)
	REFERENCES HOMEPAGE.WIDGET (WIDGET_ID)
GO

ALTER TABLE HOMEPAGE.HP_WIDGET_INST
    ADD CONSTRAINT FK_TAB_INST_ID FOREIGN KEY (TAB_INST_ID)
	REFERENCES HOMEPAGE.HP_TAB_INST (TAB_INST_ID)
GO

ALTER TABLE HOMEPAGE.HP_WIDGET_TAB	
    ADD CONSTRAINT FK_WID_TAB_WID_ID FOREIGN KEY (WIDGET_ID)
	REFERENCES HOMEPAGE.WIDGET (WIDGET_ID)
GO

ALTER TABLE HOMEPAGE.HP_WIDGET_TAB	
    ADD CONSTRAINT FK_WID_TAB_TAB_ID FOREIGN KEY (TAB_ID)
	REFERENCES HOMEPAGE.HP_TAB (TAB_ID)
GO	

ALTER TABLE HOMEPAGE.PREREQ 
	ADD CONSTRAINT FK_PREREQ_WIDGET FOREIGN KEY (WIDGET_ID)
	REFERENCES HOMEPAGE.WIDGET (WIDGET_ID)
	ON DELETE CASCADE
GO

ALTER TABLE HOMEPAGE.NT_NOTIFICATION_RECIPIENT 
	ADD CONSTRAINT FK_RECIP_NOTIF FOREIGN KEY (NOTIFICATION_ID)
	REFERENCES HOMEPAGE.NT_NOTIFICATION (NOTIFICATION_ID)
	ON DELETE CASCADE
GO

ALTER TABLE HOMEPAGE.LOGINNAME
	ADD CONSTRAINT LOGINNAME_UNIQUE UNIQUE (LOGINNAME)
GO

--------------------------------------
-- CREATE THE INDEXES
--------------------------------------
CREATE INDEX WIDGET_INST
	ON HOMEPAGE.HP_WIDGET_INST (TAB_INST_ID ASC, WIDGET_ID ASC)
GO

CREATE UNIQUE INDEX PERSON_EXID
	ON HOMEPAGE.PERSON (EXID)
GO

CREATE INDEX PERSON_USER_MAIL
    ON HOMEPAGE.PERSON(USER_MAIL)
GO

CREATE INDEX HP_UI_PERSON_ID_INDEX
	ON HOMEPAGE.HP_UI (PERSON_ID)
GO

CREATE INDEX NT_NOTIFICATION_EXID_INDEX
	ON HOMEPAGE.NT_NOTIFICATION(SENDER_EXID)
GO
	
CREATE INDEX NT_NOTIF_RECT_EXID_INDEX
	ON HOMEPAGE.NT_NOTIFICATION_RECIPIENT(RECIPIENT_EXID)
GO	
	
CREATE INDEX NT_NOTIF_RECT_NID_INDEX
	ON HOMEPAGE.NT_NOTIFICATION_RECIPIENT(NOTIFICATION_ID)
GO	

CREATE INDEX TAB_INST_UI_ID_IDX 
	ON HOMEPAGE.HP_TAB_INST(UI_ID)
GO

CREATE INDEX HP_WIDGET_INST_TAB_INST_ID_IDX
	ON HOMEPAGE.HP_WIDGET_INST(TAB_INST_ID)
GO	
--------------------------------------
-- POPULATE THE TABLES
--------------------------------------
INSERT INTO HOMEPAGE.HOMEPAGE_SCHEMA ( COMPKEY, DBSCHEMAVER, RELEASEVER) VALUES ('HOMEPAGE', 19, '2.5.0.0')
GO

------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
-- STARTING OF THE DEFINITION FOR THE NEWS REPOSITORY DATABASE
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------
-- NEWS REPOSITORY - CREATE THE TABLES
----------------------------------------------------------------------------
CREATE TABLE HOMEPAGE.NR_SOURCE (
	SOURCE_ID nvarchar(36) NOT NULL,
	SOURCE nvarchar(36) NOT NULL,
	CONTAINER_ID nvarchar(36) NOT NULL,
	CONTAINER_NAME nvarchar(256),
	CONTAINER_URL nvarchar(2048),
	ENTRY_ID  nvarchar(36),
	ENTRY_NAME nvarchar(256),
	ENTRY_URL nvarchar(2048),
	ENTRY_ATOM_URL nvarchar(2048),
	IS_ACL NUMERIC(5,0) NOT NULL,
	IS_PRIVATE NUMERIC(5,0),
	LAST_UPDATE DATETIME,
	IS_CNAME_RTL NUMERIC(5,0) DEFAULT 0 NOT NULL,
	IS_ENAME_RTL NUMERIC(5,0) DEFAULT 0 NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.NR_SUBSCRIPTION  (
	SUBSCRIPTION_ID nvarchar(36) NOT NULL,
	PERSON_ID nvarchar(36) NOT NULL,
	SOURCE_ID nvarchar(36) NOT NULL,
	IS_EXPLICIT NUMERIC(5,0) NOT NULL,
	IS_ACTIVE NUMERIC(5,0) DEFAULT 1 NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.NR_NEWS_RECORDS (
	NEWS_RECORDS_ID nvarchar(36) NOT NULL,
	EVENT_NAME nvarchar(256) NOT NULL,
    READER_ID nvarchar(36),
    SOURCE nvarchar(36),
    CONTAINER_ID nvarchar(36),
    CONTAINER_NAME nvarchar(256),
    CONTAINER_URL nvarchar(2048),
    ENTRY_ID nvarchar(36),
    ENTRY_NAME nvarchar(256),
    ENTRY_URL nvarchar(2048),
    ENTRY_ATOM_URL nvarchar(2048),
    CREATION_DATE DATETIME NOT NULL,
    IS_INBOX NUMERIC(5,0) NOT NULL,
    IS_SAVED NUMERIC(5,0) NOT NULL,
    IS_TOP_STORY NUMERIC(5,0) NOT NULL,
    IS_PUBLIC NUMERIC(5,0) NOT NULL,
    IS_MAILED NUMERIC(5,0) NOT NULL,
    TIME_STAMP DATETIME NOT NULL,
    BRIEF_DESC nvarchar(512),
    IS_BRIEF_DESC_RTL NUMERIC(5,0) NOT NULL,
    ACTOR_UUID nvarchar(36),
    EVENT_RECORD_UUID nvarchar(36) NOT NULL,
    RELATED_COMM_UUID nvarchar(36),
    RELATED_COMM_NAME nvarchar(256),
    TAGS nvarchar(1024),
    META_TEMPLATE nvarchar(4000) DEFAULT '' NOT NULL,
    TEXT_META_TEMPLATE nvarchar(1024),
    IS_CONTAINER NUMERIC(5,0) DEFAULT 0 NOT NULL
) ON [PRIMARY]
GO


CREATE TABLE HOMEPAGE.NR_TEMPLATE (
	TEMPLATE_ID nvarchar(36) NOT NULL,
 	NAME nvarchar(256) NOT NULL,
 	FORMAT nvarchar(256) NOT NULL,
 	DATA_SOURCE_STRING nvarchar(256) NOT NULL,
 	NO_VALUES NUMERIC(5,0) NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.NR_EVENT_RECORDS  (
	EVENT_RECORD_ID nvarchar(36) NOT NULL,
	EVENT_RECORD_CONTENT varbinary (MAX),
	IS_ACL NUMERIC(5,0) NOT NULL
) ON [PRIMARY]
GO

-- EMAIL DIGEST
CREATE TABLE HOMEPAGE.EMD_RECIPIENTS (
	RECIPIENT_ID nvarchar(36) NOT NULL,
	PERSON_ID nvarchar(36) NOT NULL,
	FREQUENCY_UPDATE NUMERIC(5,0) NOT NULL,
	LAST_SENT_UPDATE DATETIME NOT NULL,
	MAIL_DOMAIN nvarchar(256) NOT NULL,
	MAIL_ADDRESS  nvarchar(256) NOT NULL,
	LOCALE nvarchar(5),
	DISPLAYNAME nvarchar(256)
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.EMD_JOBS  (
	JOB_ID nvarchar(36) NOT NULL,
	JOB_FREQUENCY NUMERIC(5,0) NOT NULL,
	NEXT_EXEC_TIME DATETIME,
	DUE_DATE_EXEC_TIME DATETIME,
	START_JOB DATETIME,
	END_JOB DATETIME,
	STATUS nvarchar(36),
	N_PERSONS_TO_UPDATE NUMERIC(10,0),
	AVG_EXEC_TIME_SECONDS NUMERIC(10,0),
	JOB_FREQUENCY_SCALE nvarchar(36) NOT NULL DEFAULT ''
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.EMD_JOBS_STATS (
	STAT_ID nvarchar(36) NOT NULL,
	JOB_ID nvarchar(36) NOT NULL,
	START_TIME DATETIME NOT NULL,
    END_TIME DATETIME NOT NULL,
    EXEC_TIME_SECONDS NUMERIC(10,0),
    N_PERSONS_UPDATED NUMERIC(10,0),
    STATUS nvarchar(36) DEFAULT 'COMPLETED' NOT NULL
) ON [PRIMARY]
GO
----------------------------------------------------------------------------
-- NEWS REPOSITORY -  CREATE THE CONSTRAINTS
----------------------------------------------------------------------------
ALTER TABLE HOMEPAGE.NR_SOURCE
    ADD CONSTRAINT PK_SOURCE_ID PRIMARY KEY(SOURCE_ID)    
GO

ALTER TABLE HOMEPAGE.NR_SUBSCRIPTION
    ADD CONSTRAINT PK_SUBSCRIPTION_ID PRIMARY KEY(SUBSCRIPTION_ID)
GO

ALTER TABLE HOMEPAGE.NR_NEWS_RECORDS
    ADD CONSTRAINT PK_NR_NEWS_RECORDS PRIMARY KEY(NEWS_RECORDS_ID)
GO

ALTER TABLE HOMEPAGE.NR_TEMPLATE 
    ADD CONSTRAINT PK_TEMPLATE_ID PRIMARY KEY(TEMPLATE_ID)
GO
    
ALTER TABLE HOMEPAGE.NR_SUBSCRIPTION
    ADD CONSTRAINT FK_PERSON_ID FOREIGN KEY (PERSON_ID)
	REFERENCES HOMEPAGE.PERSON (PERSON_ID);
GO

ALTER TABLE HOMEPAGE.NR_SUBSCRIPTION
    ADD CONSTRAINT FK_SOURCE_ID FOREIGN KEY (SOURCE_ID)
	REFERENCES HOMEPAGE.NR_SOURCE (SOURCE_ID)	
GO

ALTER TABLE HOMEPAGE.NR_EVENT_RECORDS
    ADD CONSTRAINT PK_EVENT_RECORD_ID PRIMARY KEY(EVENT_RECORD_ID)
GO 

-- EMAIL DIGEST CONSTRAINTS
ALTER TABLE HOMEPAGE.EMD_RECIPIENTS
    ADD CONSTRAINT PK_RECIPIENT_ID PRIMARY KEY(RECIPIENT_ID)
GO    

ALTER TABLE HOMEPAGE.EMD_JOBS
    ADD CONSTRAINT PK_JOB_ID PRIMARY KEY(JOB_ID)
GO

ALTER TABLE HOMEPAGE.EMD_JOBS_STATS
    ADD CONSTRAINT PK_STAT_ID PRIMARY KEY(STAT_ID)
GO

ALTER TABLE HOMEPAGE.EMD_RECIPIENTS
    ADD CONSTRAINT FK_REC_PERSON_ID FOREIGN KEY (PERSON_ID)
	REFERENCES HOMEPAGE.PERSON (PERSON_ID)
GO
	
ALTER TABLE HOMEPAGE.EMD_JOBS_STATS
    ADD CONSTRAINT FK_JOB_ID FOREIGN KEY (JOB_ID)
	REFERENCES HOMEPAGE.EMD_JOBS (JOB_ID) 
GO

ALTER TABLE HOMEPAGE.EMD_JOBS
	ADD CONSTRAINT UNIQUE_JOB_FREQ UNIQUE(JOB_FREQUENCY)
GO

----------------------------------------------------------------------------
-- NEWS REPOSITORY -  CREATE THE INDEXES
----------------------------------------------------------------------------
CREATE UNIQUE INDEX NR_SUBSCRIPTION_IX_UNIQUE
	ON HOMEPAGE.NR_SUBSCRIPTION(PERSON_ID ASC, SOURCE_ID ASC)
GO

CREATE UNIQUE INDEX NR_SOURCE_IX_UNIQUE
	ON HOMEPAGE.NR_SOURCE(SOURCE ASC, CONTAINER_ID ASC, ENTRY_ID ASC, IS_ACL ASC)
GO

CREATE INDEX NR_NEWS_RECORDS_READER_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS(READER_ID)
GO	

CREATE INDEX NR_NEWS_RECORDS_ACTOR_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS(ACTOR_UUID)
GO	

CREATE INDEX NR_NEWS_RECORDS_SOURCE_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS(SOURCE)
GO	

CREATE INDEX NR_NEWS_RECORDS_CONTAINER_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS(CONTAINER_ID)
GO
	
CREATE INDEX NR_NEWS_RECORDS_DATE_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS(CREATION_DATE DESC)
GO

CREATE INDEX NR_NEWS_RECORDS_EVENT_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS(EVENT_RECORD_UUID)
GO

CREATE INDEX NR_NEWS_RECORDS_IX1 
	ON HOMEPAGE.NR_NEWS_RECORDS (CREATION_DATE DESC, NEWS_RECORDS_ID, READER_ID, IS_CONTAINER, IS_PUBLIC)
GO

CREATE INDEX NR_READ_SOUR_ACTR_IS_PUB_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS (READER_ID, SOURCE, ACTOR_UUID, IS_PUBLIC)
GO	

CREATE INDEX NR_READER_ER_UUID_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS (READER_ID, EVENT_RECORD_UUID)
GO
	
CREATE INDEX NR_READER_IS_TOP_STORY_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS (READER_ID, IS_TOP_STORY)
GO

CREATE INDEX NR_READER_IS_SAVED_IDX
	ON HOMEPAGE.NR_NEWS_RECORDS (READER_ID, IS_SAVED)
GO

-- EMAIL DIGEST INDEXES
CREATE INDEX EMD_RECIPIENTS_SENT_UPDATE_IDX
	ON HOMEPAGE.EMD_RECIPIENTS(LAST_SENT_UPDATE DESC)
GO	

CREATE INDEX EMD_RECIPIENTS_MAIL_DOMAIN_IDX
	ON HOMEPAGE.EMD_RECIPIENTS(MAIL_DOMAIN DESC)
GO

-------------------------------------------------------------------
-- START ADDING SCHEDULER TABLES
-------------------------------------------------------------------

CREATE TABLE HOMEPAGE.NR_SCHEDULER_TASK (
	[TASKID] BIGINT NOT NULL ,
	[VERSION] NVARCHAR(5) NOT NULL ,
	[ROW_VERSION] INT NOT NULL ,
	[TASKTYPE] INT NOT NULL ,
	[TASKSUSPENDED] TINYINT NOT NULL ,
	[CANCELLED] TINYINT NOT NULL ,
	[NEXTFIRETIME] BIGINT NOT NULL ,
	[STARTBYINTERVAL] NVARCHAR(254) NULL ,
	[STARTBYTIME] BIGINT NULL ,
	[VALIDFROMTIME] BIGINT NULL ,
    [VALIDTOTIME] BIGINT NULL ,
    [REPEATINTERVAL] NVARCHAR(254) NULL ,
    [MAXREPEATS] INT NOT NULL ,
    [REPEATSLEFT] INT NOT NULL ,
    [TASKINFO] IMAGE NULL ,
    [NAME] NVARCHAR(254) NOT NULL ,
    [AUTOPURGE] INT NOT NULL ,
    [FAILUREACTION] INT NULL ,
    [MAXATTEMPTS] INT NULL ,
    [QOS] INT NULL ,
    [PARTITIONID] INT NULL ,
    [OWNERTOKEN] NVARCHAR(200) NOT NULL ,
    [CREATETIME] BIGINT NOT NULL
) 
GO

ALTER TABLE HOMEPAGE.NR_SCHEDULER_TASK WITH NOCHECK 
	ADD CONSTRAINT NR_SCHEDULER_TASK_PK PRIMARY KEY  NONCLUSTERED ( [TASKID] ) 
GO

CREATE INDEX NR_SCHEDULER_TASK_IDX1 
	ON HOMEPAGE.NR_SCHEDULER_TASK ( [TASKID], [OWNERTOKEN] ) 
GO

CREATE CLUSTERED INDEX NR_SCHEDULER_TASK_IDX2 
	ON HOMEPAGE.NR_SCHEDULER_TASK ( [NEXTFIRETIME] ASC, [REPEATSLEFT], [PARTITIONID] )
GO

CREATE TABLE HOMEPAGE.NR_SCHEDULER_TREG ( 
	[REGKEY] NVARCHAR(254) NOT NULL ,
	[REGVALUE] NVARCHAR(254) NULL ,
	PRIMARY KEY ( [REGKEY] ) )
GO

CREATE TABLE HOMEPAGE.NR_SCHEDULER_LMGR ( 
	[LEASENAME] NVARCHAR(254) NOT NULL,
	[LEASEOWNER] NVARCHAR(254) NOT NULL,
	[LEASE_EXPIRE_TIME] BIGINT,
	[DISABLED] NVARCHAR(5) )
GO

ALTER TABLE HOMEPAGE.NR_SCHEDULER_LMGR WITH NOCHECK 
	ADD CONSTRAINT NR_SCHEDULER_LMGR_PK PRIMARY KEY  NONCLUSTERED ( [LEASENAME] ) 
GO

CREATE TABLE HOMEPAGE.NR_SCHEDULER_LMPR ( 
	[LEASENAME] NVARCHAR(224) NOT NULL,
	[NAME] NVARCHAR(224) NOT NULL,
    [VALUE] NVARCHAR(254) NOT NULL )
GO

CREATE INDEX NR_SCHEDULER_LMPR_IDX1 
	ON HOMEPAGE.NR_SCHEDULER_LMPR ( [LEASENAME], [NAME] ) 
GO
	
-------------------------------------------------------------------
-- END ADDING SCHEDULER TABLES
-------------------------------------------------------------------	
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
-- END OF THE DEFINITION FOR THE NEWS REPOSITORY DATABASE
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
-- START THE DEFINITION FOR THE SEARCH DATABASE
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------
-- SEARCH -  CREATE THE TABLES
----------------------------------------------------------------------------
CREATE TABLE HOMEPAGE.SR_TASKDEF (
	TASK_ID nvarchar(36) NOT NULL,
	TASK_NAME nvarchar(256) NOT NULL,
	STARTBY nvarchar(256),
	INTERVAL nvarchar(256),
	TASK_TYPE nvarchar(36) NOT NULL,
	ENABLED NUMERIC(5,0) DEFAULT 1 NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.SR_INDEXINGTASKDEF (
	INDEXING_TASK_ID nvarchar(36) NOT NULL,
	TASK_ID nvarchar(36) NOT NULL,
	INDEXING_TASK_SERVICES nvarchar(256) NOT NULL,
	INDEXING_TASK_OPTIMIZE NUMERIC(5,0) NOT NULL	
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.SR_FILESCONTENT (
	FILESCONTENT_ID nvarchar(36) NOT NULL,
	URL nvarchar(256) NOT NULL,
	COMPONENT_UUID nvarchar(36) NOT NULL,
	COMPONENT nvarchar(36) NOT NULL,
	CREATION_DATE DATETIME NOT NULL,
	LAST_MODIFIED_DATE DATETIME NOT NULL,
	LAST_ACCESSED_DATE DATETIME NOT NULL,
	IS_CURRENT NUMERIC(5,0) NOT NULL,
	CONTENT nvarchar(MAX) NOT NULL,
	FILE_SIZE NUMERIC(19,0) NOT NULL,
	CONTENT_SIZE NUMERIC(19,0) NOT NULL,
	INPUT_MIME_TYPE nvarchar(256) NOT NULL,
	CLAIMED NUMERIC(5,0) DEFAULT 0 NOT NULL,
	CLAIMED_TIME DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL
)  ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.SR_OPTIMIZETASKDEF (
	OPTIMIZE_TASK_ID nvarchar(36) NOT NULL,	
	TASK_ID nvarchar(36) NOT NULL	
) ON [PRIMARY]
GO

CREATE TABLE HOMEPAGE.SR_MIGTASKDEFINFO (
	MIGTASKDEFINFO_ID nvarchar(36) NOT NULL,
	NUM_TASKS_MIG NUMERIC(10,0) DEFAULT 1 NOT NULL  
)  ON [PRIMARY]
GO

CREATE VIEW HOMEPAGE.SR_ALLTASKSDEF AS
(
	SELECT 	T1.TASK_ID  		AS	PARENT_TASK_ID,
	T1.TASK_NAME 				AS	PARENT_TASK_NAME,
	T1.INTERVAL 				AS	PARENT_TASK_INTERVAL,
	T1.STARTBY	 				AS	PARENT_TASK_STARTBY,
	T1.TASK_TYPE 				AS	PARENT_TASK_TYPE, 
    T1.ENABLED 					AS  PARENT_TASK_ENABLED,
	T2.INDEXING_TASK_SERVICES	AS	INDEXING_TASK_SERVICES,
	T2.INDEXING_TASK_OPTIMIZE	AS	INDEXING_TASK_OPTIMIZE,
	T2.INDEXING_TASK_ID			AS	INDEXING_TASK_ID,
	''							AS	OPTIMIZE_TASK_ID,
	T2.INDEXING_TASK_ID			AS	CHILDTASK_PK
	FROM    HOMEPAGE.SR_TASKDEF T1,HOMEPAGE.SR_INDEXINGTASKDEF T2 
	WHERE T1.TASK_ID=T2.TASK_ID
) 
UNION 
(
	SELECT T3.TASK_ID			AS 	PARENT_TASK_ID,
	T3.TASK_NAME 				AS 	PARENT_TASK_NAME,
	T3.INTERVAL					AS 	PARENT_TASK_INTERVAL,
	T3.STARTBY 					AS	PARENT_TASK_STARTBY,
	T3.TASK_TYPE 				AS 	PARENT_TASK_TYPE, 
 	T3.ENABLED 			AS  PARENT_TASK_ENABLED,
	''							AS 	INDEXING_TASK_SERVICES,
	0							AS	INDEXING_TASK_OPTIMIZE,
	''							AS	INDEXING_TASK_ID,
	T4.OPTIMIZE_TASK_ID 		AS	OPTIMIZE_TASK_ID,
	T4.OPTIMIZE_TASK_ID			AS	CHILDTASK_PK
	FROM   HOMEPAGE.SR_TASKDEF T3,HOMEPAGE.SR_OPTIMIZETASKDEF T4
	WHERE  T3.TASK_ID=T4.TASK_ID
)
GO

----------------------------------------------------------------------------
-- SEARCH -  CREATE THE CONSTRAINTS
----------------------------------------------------------------------------
ALTER TABLE HOMEPAGE.SR_TASKDEF
	 ADD CONSTRAINT PK_TASK_ID PRIMARY KEY (TASK_ID)
GO	 

ALTER TABLE HOMEPAGE.SR_INDEXINGTASKDEF
	ADD CONSTRAINT PK_INDEX_TASK_ID PRIMARY KEY (INDEXING_TASK_ID)
GO	

ALTER TABLE HOMEPAGE.SR_OPTIMIZETASKDEF
	ADD CONSTRAINT PK_OPT_TASK_ID PRIMARY KEY (OPTIMIZE_TASK_ID)
GO

ALTER TABLE HOMEPAGE.SR_FILESCONTENT
	ADD CONSTRAINT PK_FILESCONTENT_ID PRIMARY KEY (FILESCONTENT_ID)
GO

ALTER TABLE HOMEPAGE.SR_MIGTASKDEFINFO
	ADD CONSTRAINT PK_MIGTASKDEF_ID PRIMARY KEY(MIGTASKDEFINFO_ID)
GO

ALTER TABLE HOMEPAGE.SR_INDEXINGTASKDEF
	ADD CONSTRAINT FK_INDEX_TASK_ID FOREIGN KEY (TASK_ID) 
	REFERENCES HOMEPAGE.SR_TASKDEF(TASK_ID) ON DELETE CASCADE
GO	

ALTER TABLE HOMEPAGE.SR_OPTIMIZETASKDEF
	ADD CONSTRAINT FK_OPT_TASK_ID FOREIGN KEY (TASK_ID) 
	REFERENCES  HOMEPAGE.SR_TASKDEF(TASK_ID) ON DELETE CASCADE
GO	

ALTER TABLE HOMEPAGE.SR_TASKDEF
    ADD CONSTRAINT UNIQUE_TASK_NAME UNIQUE (TASK_NAME)
GO    
    
ALTER TABLE HOMEPAGE.SR_INDEXINGTASKDEF
	ADD CONSTRAINT UNIQUE_TASK_ID_IND UNIQUE (TASK_ID)
GO	

ALTER TABLE HOMEPAGE.SR_OPTIMIZETASKDEF
	ADD CONSTRAINT UNIQUE_TASK_ID_OPT UNIQUE (TASK_ID)
GO

ALTER TABLE HOMEPAGE.SR_FILESCONTENT
	ADD CONSTRAINT UNIQUE_COMP_UUID UNIQUE (COMPONENT_UUID,COMPONENT)
GO

ALTER TABLE HOMEPAGE.SR_TASKDEF
    ADD CONSTRAINT CHECK_SR_TASKDEF
    CHECK ( (STARTBY IS NOT NULL AND INTERVAL IS NOT NULL) OR (STARTBY IS NULL AND INTERVAL IS NULL) );
GO

-------------------------------------------------------------------
-- START SEARCH SCHEDULER TABLES
-------------------------------------------------------------------

CREATE TABLE HOMEPAGE.LOTUSCONNECTIONSTASK ( [TASKID] BIGINT NOT NULL ,
               [VERSION] NVARCHAR(5) NOT NULL ,
               [ROW_VERSION] INT NOT NULL ,
               [TASKTYPE] INT NOT NULL ,
               [TASKSUSPENDED] TINYINT NOT NULL ,
               [CANCELLED] TINYINT NOT NULL ,
               [NEXTFIRETIME] BIGINT NOT NULL ,
               [STARTBYINTERVAL] NVARCHAR(254) NULL ,
               [STARTBYTIME] BIGINT NULL ,
               [VALIDFROMTIME] BIGINT NULL ,
               [VALIDTOTIME] BIGINT NULL ,
               [REPEATINTERVAL] NVARCHAR(254) NULL ,
               [MAXREPEATS] INT NOT NULL ,
               [REPEATSLEFT] INT NOT NULL ,
               [TASKINFO] IMAGE NULL ,
               [NAME] NVARCHAR(254) NOT NULL ,
               [AUTOPURGE] INT NOT NULL ,
               [FAILUREACTION] INT NULL ,
               [MAXATTEMPTS] INT NULL ,
               [QOS] INT NULL ,
               [PARTITIONID] INT NULL ,
               [OWNERTOKEN] NVARCHAR(200) NOT NULL ,
               [CREATETIME] BIGINT NOT NULL ) 
GO

ALTER TABLE HOMEPAGE.LOTUSCONNECTIONSTASK WITH NOCHECK ADD CONSTRAINT LOTUSCONNECTIONSTASK_PK PRIMARY KEY  NONCLUSTERED ( [TASKID] ) 
GO

CREATE INDEX LOTUSCONNECTIONSTASK_IDX1 ON HOMEPAGE.LOTUSCONNECTIONSTASK ( [TASKID],
               [OWNERTOKEN] ) 
GO

CREATE CLUSTERED INDEX LOTUSCONNECTIONSTASK_IDX2 ON HOMEPAGE.LOTUSCONNECTIONSTASK ( [NEXTFIRETIME] ASC,
               [REPEATSLEFT],
               [PARTITIONID] )
GO

CREATE TABLE HOMEPAGE.LOTUSCONNECTIONSTREG ( [REGKEY] NVARCHAR(254) NOT NULL ,
               [REGVALUE] NVARCHAR(254) NULL ,
               PRIMARY KEY ( [REGKEY] ) )
GO

CREATE TABLE HOMEPAGE.LOTUSCONNECTIONSLMGR ( [LEASENAME] NVARCHAR(254) NOT NULL,
               [LEASEOWNER] NVARCHAR(254) NOT NULL,
               [LEASE_EXPIRE_TIME] BIGINT,
               [DISABLED] NVARCHAR(5) )
GO

ALTER TABLE HOMEPAGE.LOTUSCONNECTIONSLMGR WITH NOCHECK ADD CONSTRAINT LOTUSCONNECTIONSLMGR_PK PRIMARY KEY  NONCLUSTERED ( [LEASENAME] ) 
GO

CREATE TABLE HOMEPAGE.LOTUSCONNECTIONSLMPR ( [LEASENAME] NVARCHAR(224) NOT NULL,
               [NAME] NVARCHAR(224) NOT NULL,
               [VALUE] NVARCHAR(254) NOT NULL )
GO

CREATE INDEX LOTUSCONNECTIONSLMPR_IDX1 ON HOMEPAGE.LOTUSCONNECTIONSLMPR ( [LEASENAME],
               [NAME] ) 
GO
-------------------------------------------------------------------
-- END SEARCH SCHEDULER TABLES
-------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
-- END THE DEFINITION FOR THE SEARCH DATABASE
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------





--------------------------------------
-- DISCONNECT
--------------------------------------
COMMIT
