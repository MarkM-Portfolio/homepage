-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                   
-- Copyright IBM Corp. 2007, 2015                                    
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 

-- {COPYRIGHT}

-----------------------------------------------------------------------------------------------------------------
--Update "profiles-wall-message" to "profiles-message-wall" in NR_BOARD table in a fixup (BOARD_TYPE column).
-----------------------------------------------------------------------------------------------------------------
UPDATE HOMEPAGE.BOARD SET BOARD_TYPE = 'profiles-message-wall' WHERE BOARD_TYPE = 'profiles-wall-message';
GO

-----------------------------------------------------------------------------------------------------------------
-- [start] Add an unique constraint on NR_NETWORK table
-----------------------------------------------------------------------------------------------------------------
DELETE FROM HOMEPAGE.NR_NETWORK WHERE NETWORK_ID IN (
	select NR_NETWORK.NETWORK_ID
	from (
		SELECT MAX(NETWORK_ID) NETWORK_ID, PERSON_ID, COLLEAGUE_ID 
		FROM HOMEPAGE.NR_NETWORK
		GROUP BY 	PERSON_ID, COLLEAGUE_ID
		) T,
		 HOMEPAGE.NR_NETWORK NR_NETWORK
	where 	NR_NETWORK.NETWORK_ID < T.NETWORK_ID AND 
			NR_NETWORK.PERSON_ID = T.PERSON_ID AND
			NR_NETWORK.COLLEAGUE_ID = T.COLLEAGUE_ID		
);

GO

DROP INDEX COLL_PERSON_IDX ON HOMEPAGE.NR_NETWORK;
GO

CREATE UNIQUE INDEX COLL_PERSON_IDX 
	ON HOMEPAGE.NR_NETWORK (COLLEAGUE_ID, PERSON_ID);
GO

-----------------------------------------------------------------------------------------------------------------
-- [end] Add an unique constraint on NR_NETWORK table
-----------------------------------------------------------------------------------------------------------------

------------------------------------------------------------
-- [start] NEWS dropping existing indexes
------------------------------------------------------------
DROP INDEX NR_AGGREGATED_READERS_IDX  ON HOMEPAGE.NR_AGGREGATED_READERS;
DROP INDEX NR_AGGREGATED_READERS_STORY_ID ON HOMEPAGE.NR_AGGREGATED_READERS;
DROP INDEX NR_AGGREGATED_READERS_ITEM_ID ON HOMEPAGE.NR_AGGREGATED_READERS;
DROP INDEX NR_AGGREGATED_READERS_DATE ON HOMEPAGE.NR_AGGREGATED_READERS;
DROP INDEX NR_AGG_READERS_UNQ ON HOMEPAGE.NR_AGGREGATED_READERS;
DROP INDEX NR_AGG_READERS  ON HOMEPAGE.NR_AGGREGATED_READERS;
DROP INDEX NR_AGGREGATED_READERS_ROLL ON HOMEPAGE.NR_AGGREGATED_READERS;
GO

DROP INDEX RESPONSES_STORIES_IDX ON HOMEPAGE.NR_RESPONSES_READERS;
DROP INDEX RESPONSES_STORIES_SIDX ON HOMEPAGE.NR_RESPONSES_READERS;
DROP INDEX RESPONSES_STORIES_ITEM_ID ON HOMEPAGE.NR_RESPONSES_READERS;
DROP INDEX NR_RESPONSES_STORIES_DATE  ON HOMEPAGE.NR_RESPONSES_READERS;
DROP INDEX NR_RESP_READER_STORY ON HOMEPAGE.NR_RESPONSES_READERS;
DROP INDEX RESPONSES_STORIES_SRC_IDX ON HOMEPAGE.NR_RESPONSES_READERS;
DROP INDEX NR_RESPONSES_READERS_ROLL ON HOMEPAGE.NR_RESPONSES_READERS;
GO

DROP INDEX PROFILES_STORIES_IDX ON HOMEPAGE.NR_PROFILES_READERS;
DROP INDEX PROFILES_STORIES_SIDX ON HOMEPAGE.NR_PROFILES_READERS;
DROP INDEX PROFILES_STORIES_ITEM_ID ON HOMEPAGE.NR_PROFILES_READERS;
DROP INDEX NR_PROFILES_STORIES_DATE ON HOMEPAGE.NR_PROFILES_READERS;
DROP INDEX PROFILES_STORIES_SRC_IDX ON HOMEPAGE.NR_PROFILES_READERS;
DROP INDEX NR_PRO_READER_STORY ON HOMEPAGE.NR_PROFILES_READERS;
DROP INDEX NR_PROFILES_READERS_ROLL ON HOMEPAGE.NR_PROFILES_READERS;
GO

DROP INDEX COMMUNITIES_STORIES_IDX  ON HOMEPAGE.NR_COMMUNITIES_READERS;
DROP INDEX COMMUNITIES_STORIES_SIDX  ON HOMEPAGE.NR_COMMUNITIES_READERS;
DROP INDEX COMMUNITIES_STORIES_ITEM_ID  ON HOMEPAGE.NR_COMMUNITIES_READERS;
DROP INDEX NR_COMMUNITIES_STORIES_DATE   ON HOMEPAGE.NR_COMMUNITIES_READERS;
DROP INDEX NR_COM_READER_STORY  ON HOMEPAGE.NR_COMMUNITIES_READERS;
DROP INDEX COMMUNITIES_STORIES_SRC_IDX   ON HOMEPAGE.NR_COMMUNITIES_READERS;
DROP INDEX NR_COMMUNITIES_READERS_ROLL  ON HOMEPAGE.NR_COMMUNITIES_READERS;
GO

DROP INDEX ACTIVITIES_STORIES_IDX ON HOMEPAGE.NR_ACTIVITIES_READERS;
DROP INDEX ACTIVITIES_STORIES_SIDX ON HOMEPAGE.NR_ACTIVITIES_READERS;
DROP INDEX ACTIVITIES_STORIES_ITEM_ID ON HOMEPAGE.NR_ACTIVITIES_READERS;
DROP INDEX NR_ACTIVITIES_STORIES_DATE ON HOMEPAGE.NR_ACTIVITIES_READERS;
DROP INDEX NR_ACT_READER_STORY ON HOMEPAGE.NR_ACTIVITIES_READERS;
DROP INDEX ACTIVITIES_STORIES_SRC_IDX  ON HOMEPAGE.NR_ACTIVITIES_READERS;
DROP INDEX NR_ACTIVITIES_READERS_ROLL ON HOMEPAGE.NR_ACTIVITIES_READERS;
GO

DROP INDEX BLOGS_STORIES_IDX ON HOMEPAGE.NR_BLOGS_READERS;
DROP INDEX BLOGS_STORIES_SIDX ON HOMEPAGE.NR_BLOGS_READERS;
DROP INDEX BLOGS_STORIES_ITEM_ID ON HOMEPAGE.NR_BLOGS_READERS;
DROP INDEX NR_BLOGS_STORIES_DATE ON HOMEPAGE.NR_BLOGS_READERS;
DROP INDEX NR_BLG_READER_STORY ON HOMEPAGE.NR_BLOGS_READERS;
DROP INDEX BLOGS_STORIES_SRC_IDX  ON HOMEPAGE.NR_BLOGS_READERS;
DROP INDEX NR_BLOGS_READERS_ROLL ON HOMEPAGE.NR_BLOGS_READERS;
GO

DROP INDEX BOOKMARKS_STORIES_IDX  ON HOMEPAGE.NR_BOOKMARKS_READERS;
DROP INDEX BOOKMARKS_STORIES_SIDX  ON HOMEPAGE.NR_BOOKMARKS_READERS;
DROP INDEX BOOKMARKS_STORIES_ITEM_ID  ON HOMEPAGE.NR_BOOKMARKS_READERS;
DROP INDEX NR_BOOKMARKS_STORIES_DATE  ON HOMEPAGE.NR_BOOKMARKS_READERS;
DROP INDEX NR_BOOK_READER_STORY  ON HOMEPAGE.NR_BOOKMARKS_READERS;
DROP INDEX BOOKMARKS_STORIES_SRC_IDX   ON HOMEPAGE.NR_BOOKMARKS_READERS;
DROP INDEX NR_BOOKMARKS_READERS_ROLL  ON HOMEPAGE.NR_BOOKMARKS_READERS;
GO

DROP INDEX FILES_STORIES_IDX  ON HOMEPAGE.NR_FILES_READERS;
DROP INDEX FILES_STORIES_SIDX  ON HOMEPAGE.NR_FILES_READERS;
DROP INDEX FILES_STORIES_ITEM_ID  ON HOMEPAGE.NR_FILES_READERS;
DROP INDEX NR_FILES_STORIES_DATE  ON HOMEPAGE.NR_FILES_READERS;
DROP INDEX NR_FILES_READER_STORY  ON HOMEPAGE.NR_FILES_READERS;
DROP INDEX FILES_STORIES_SRC_IDX   ON HOMEPAGE.NR_FILES_READERS;
DROP INDEX NR_FILES_READERS_ROLL  ON HOMEPAGE.NR_FILES_READERS;
GO

DROP INDEX FORUMS_STORIES_IDX ON HOMEPAGE.NR_FORUMS_READERS;
DROP INDEX FORUMS_STORIES_SIDX ON HOMEPAGE.NR_FORUMS_READERS;
DROP INDEX FORUMS_STORIES_ITEM_ID ON HOMEPAGE.NR_FORUMS_READERS;
DROP INDEX NR_FORUMS_STORIES_DATE ON HOMEPAGE.NR_FORUMS_READERS;
DROP INDEX NR_FORUMS_READER_STORY ON HOMEPAGE.NR_FORUMS_READERS;
DROP INDEX FORUMS_STORIES_SRC_IDX  ON HOMEPAGE.NR_FORUMS_READERS;
DROP INDEX NR_FORUMS_READERS_ROLL ON HOMEPAGE.NR_FORUMS_READERS;
GO

DROP INDEX WIKIS_STORIES_IDX ON HOMEPAGE.NR_WIKIS_READERS;
DROP INDEX WIKIS_STORIES_SIDX ON HOMEPAGE.NR_WIKIS_READERS;
DROP INDEX WIKIS_STORIES_ITEM_ID ON HOMEPAGE.NR_WIKIS_READERS;
DROP INDEX NR_WIKIS_STORIES_DATE ON HOMEPAGE.NR_WIKIS_READERS;
DROP INDEX NR_WIKIS_READER_STORY ON HOMEPAGE.NR_WIKIS_READERS;
DROP INDEX WIKIS_STORIES_SRC_IDX ON HOMEPAGE.NR_WIKIS_READERS;
DROP INDEX NR_WIKIS_READERS_ROLL ON HOMEPAGE.NR_WIKIS_READERS;
GO

DROP INDEX TAGS_STORIES_IDX ON HOMEPAGE.NR_TAGS_READERS;
DROP INDEX TAGS_STORIES_SIDX ON HOMEPAGE.NR_TAGS_READERS;
DROP INDEX TAGS_STORIES_ITEM_ID ON HOMEPAGE.NR_TAGS_READERS;
DROP INDEX NR_TAGS_STORIES_DATE ON HOMEPAGE.NR_TAGS_READERS;
DROP INDEX NR_TAGS_READER_STORY  ON HOMEPAGE.NR_TAGS_READERS;		
DROP INDEX TAGS_STORIES_SRC_IDX ON HOMEPAGE.NR_TAGS_READERS;
DROP INDEX NR_TAGS_READERS_ROLL ON HOMEPAGE.NR_TAGS_READERS;
GO

DROP INDEX SU_STORIES_IDX  ON HOMEPAGE.NR_STATUS_UPDATE_READERS;
DROP INDEX SU_STORIES_SIDX  ON HOMEPAGE.NR_STATUS_UPDATE_READERS;
DROP INDEX SU_STORIES_ITEM_ID  ON HOMEPAGE.NR_STATUS_UPDATE_READERS;
DROP INDEX SU_STORIES_SRC_IDX  ON HOMEPAGE.NR_STATUS_UPDATE_READERS;
DROP INDEX SU_STORIES_READER_STORY  ON HOMEPAGE.NR_STATUS_UPDATE_READERS;
DROP INDEX NR_STATUS_UPDATE_READERS_ROLL  ON HOMEPAGE.NR_STATUS_UPDATE_READERS;
GO

DROP INDEX EXT_STORIES_IDX ON HOMEPAGE.NR_EXTERNAL_READERS;
DROP INDEX EXT_STORIES_SIDX ON HOMEPAGE.NR_EXTERNAL_READERS;
DROP INDEX EXT_STORIES_ITEM_ID ON HOMEPAGE.NR_EXTERNAL_READERS; 
DROP INDEX EXT_STORIES_SRC_IDX ON HOMEPAGE.NR_EXTERNAL_READERS;
DROP INDEX EXT_STORIES_READER_STORY ON HOMEPAGE.NR_EXTERNAL_READERS;
DROP INDEX NR_EXTERNAL_READERS_ROLL ON HOMEPAGE.NR_EXTERNAL_READERS;
GO

DROP INDEX ACTION_READER_STORIES_IDX  ON HOMEPAGE.NR_ACTIONABLE_READERS;
DROP INDEX ACTION_READER_SIDX  ON HOMEPAGE.NR_ACTIONABLE_READERS;
DROP INDEX ACTION_READER_ITEM_ID  ON HOMEPAGE.NR_ACTIONABLE_READERS;
DROP INDEX ACTION_STORIES_SRC_IDX  ON HOMEPAGE.NR_ACTIONABLE_READERS;
DROP INDEX ACTION_READER_STORY  ON HOMEPAGE.NR_ACTIONABLE_READERS;
DROP INDEX NR_ACTIONABLE_READERS_ROLL  ON HOMEPAGE.NR_ACTIONABLE_READERS;
GO

DROP INDEX DISCOVERY_STORIES_IDX  ON HOMEPAGE.NR_DISCOVERY_VIEW;
DROP INDEX DISCOVERY_SIDX  ON HOMEPAGE.NR_DISCOVERY_VIEW;
DROP INDEX DISCOVERY_ITEM  ON HOMEPAGE.NR_DISCOVERY_VIEW;
DROP INDEX DISCOVERY_STORIES_DATE  ON HOMEPAGE.NR_DISCOVERY_VIEW;
DROP INDEX DISCOVERY_READER_STORY  ON HOMEPAGE.NR_DISCOVERY_VIEW;
DROP INDEX DISCOVERY_STORIES_SRC_IDX  ON HOMEPAGE.NR_DISCOVERY_VIEW;
DROP INDEX DISCOVERY_STORIES_COM_IDX  ON HOMEPAGE.NR_DISCOVERY_VIEW;
DROP INDEX NR_DISCOVERY_VIEW_ROLL   ON HOMEPAGE.NR_DISCOVERY_VIEW;
GO

DROP INDEX PROFILES_VIEW_IDX ON HOMEPAGE.NR_PROFILES_VIEW;
DROP INDEX PROFILES_SIDX ON HOMEPAGE.NR_PROFILES_VIEW;
DROP INDEX PROFILES_ITEM ON HOMEPAGE.NR_PROFILES_VIEW;
DROP INDEX PROFILES_STORIES_DATE ON HOMEPAGE.NR_PROFILES_VIEW;
DROP INDEX PROFILES_READER_STORY ON HOMEPAGE.NR_PROFILES_VIEW;
DROP INDEX NR_PROFILES_VIEW_ROLL  ON HOMEPAGE.NR_PROFILES_VIEW;
GO

DROP INDEX NOT_SENT_STORIES_IDX ON HOMEPAGE.NR_NOTIFICATION_SENT_READERS;
DROP INDEX NOT_SENT_STORIES_SIDX ON HOMEPAGE.NR_NOTIFICATION_SENT_READERS;
DROP INDEX NOT_SENT_STORIES_ITEM_ID ON HOMEPAGE.NR_NOTIFICATION_SENT_READERS;
DROP INDEX NOT_SENT_STORIES_DATE ON HOMEPAGE.NR_NOTIFICATION_SENT_READERS;
DROP INDEX NR_NOT_SENT_READER_STORY ON HOMEPAGE.NR_NOTIFICATION_SENT_READERS;
DROP INDEX NOT_SENT_STORIES_SRC_IDX ON HOMEPAGE.NR_NOTIFICATION_SENT_READERS;
DROP INDEX NOT_SENT_ROLL  ON HOMEPAGE.NR_NOTIFICATION_SENT_READERS;
GO

DROP INDEX SAVED_READERS_STORIES_IDX ON HOMEPAGE.NR_SAVED_READERS;
DROP INDEX SAVED_READERS_SIDX ON HOMEPAGE.NR_SAVED_READERS;
DROP INDEX SAVED_READERS_ITEM_ID ON HOMEPAGE.NR_SAVED_READERS;
DROP INDEX SAVED_READERS_IDX ON HOMEPAGE.NR_SAVED_READERS;
DROP INDEX SAVED_READERS_STORY ON HOMEPAGE.NR_SAVED_READERS;
DROP INDEX SAVED_READERS_ROLL ON HOMEPAGE.NR_SAVED_READERS;
GO



------------------------------------------------------------
-- [end] NEWS dropping existing indexes
------------------------------------------------------------

------------------------------------------------------------
-- [start] NEWS replacing existing indexes
------------------------------------------------------------

--  [start indexes] NR_AGGREGATED_READERS
CREATE  INDEX AGGREGATED_READERS_STR_IX 
 	ON HOMEPAGE.NR_AGGREGATED_READERS (STORY_ID); 
GO

CREATE  INDEX AGGREGATED_READERS_ITM_IX 
 	ON HOMEPAGE.NR_AGGREGATED_READERS (ITEM_ID); 
GO

CREATE  INDEX AGGREGATED_READERS_CD_IX 
 	ON HOMEPAGE.NR_AGGREGATED_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX AGGREGATED_READERS_SRC_IX 
 	ON HOMEPAGE.NR_AGGREGATED_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX AGGREGATED_READERS_ACT_IX 
 	ON HOMEPAGE.NR_AGGREGATED_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX AGGREGATED_READERS_RLL_IX 
 	ON HOMEPAGE.NR_AGGREGATED_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX AGGREGATED_READERS_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_AGGREGATED_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_AGGREGATED_READERS

--  [start indexes] NR_RESPONSES_READERS
CREATE  INDEX RESPONSES_READERS_STR_IX 
 	ON HOMEPAGE.NR_RESPONSES_READERS (STORY_ID); 
GO

CREATE  INDEX RESPONSES_READERS_ITM_IX 
 	ON HOMEPAGE.NR_RESPONSES_READERS (ITEM_ID); 
GO

CREATE  INDEX RESPONSES_READERS_CD_IX 
 	ON HOMEPAGE.NR_RESPONSES_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX RESPONSES_READERS_SRC_IX 
 	ON HOMEPAGE.NR_RESPONSES_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX RESPONSES_READERS_ACT_IX 
 	ON HOMEPAGE.NR_RESPONSES_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX RESPONSES_READERS_RLL_IX 
 	ON HOMEPAGE.NR_RESPONSES_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX RESPONSES_READERS_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_RESPONSES_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_RESPONSES_READERS

--  [start indexes] NR_PROFILES_READERS
CREATE  INDEX PROFILES_READERS_STR_IX 
 	ON HOMEPAGE.NR_PROFILES_READERS (STORY_ID); 
GO

CREATE  INDEX PROFILES_READERS_ITM_IX 
 	ON HOMEPAGE.NR_PROFILES_READERS (ITEM_ID); 
GO

CREATE  INDEX PROFILES_READERS_CD_IX 
 	ON HOMEPAGE.NR_PROFILES_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX PROFILES_READERS_SRC_IX 
 	ON HOMEPAGE.NR_PROFILES_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX PROFILES_READERS_ACT_IX 
 	ON HOMEPAGE.NR_PROFILES_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX PROFILES_READERS_RLL_IX 
 	ON HOMEPAGE.NR_PROFILES_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX PROFILES_READERS_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_PROFILES_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_PROFILES_READERS

--  [start indexes] NR_COMMUNITIES_READERS
CREATE  INDEX COMM_READERS_STR_IX 
 	ON HOMEPAGE.NR_COMMUNITIES_READERS (STORY_ID); 
GO

CREATE  INDEX COMM_READERS_ITM_IX 
 	ON HOMEPAGE.NR_COMMUNITIES_READERS (ITEM_ID); 
GO

CREATE  INDEX COMM_READERS_CD_IX 
 	ON HOMEPAGE.NR_COMMUNITIES_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX COMM_READERS_SRC_IX 
 	ON HOMEPAGE.NR_COMMUNITIES_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX COMM_READERS_ACT_IX 
 	ON HOMEPAGE.NR_COMMUNITIES_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX COMM_READERS_RLL_IX 
 	ON HOMEPAGE.NR_COMMUNITIES_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX COMM_READERS_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_COMMUNITIES_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_COMMUNITIES_READERS

--  [start indexes] NR_ACTIVITIES_READERS
CREATE  INDEX ACTIVITIES_READERS_STR_IX 
 	ON HOMEPAGE.NR_ACTIVITIES_READERS (STORY_ID); 
GO

CREATE  INDEX ACTIVITIES_READERS_ITM_IX 
 	ON HOMEPAGE.NR_ACTIVITIES_READERS (ITEM_ID); 
GO

CREATE  INDEX ACTIVITIES_READERS_CD_IX 
 	ON HOMEPAGE.NR_ACTIVITIES_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX ACTIVITIES_READERS_SRC_IX 
 	ON HOMEPAGE.NR_ACTIVITIES_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX ACTIVITIES_READERS_ACT_IX 
 	ON HOMEPAGE.NR_ACTIVITIES_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX ACTIVITIES_READERS_RLL_IX 
 	ON HOMEPAGE.NR_ACTIVITIES_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX ACTIVITIES_READERS_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_ACTIVITIES_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_ACTIVITIES_READERS

--  [start indexes] NR_BLOGS_READERS
CREATE  INDEX BLOGS_READERS_STR_IX 
 	ON HOMEPAGE.NR_BLOGS_READERS (STORY_ID); 
GO

CREATE  INDEX BLOGS_READERS_ITM_IX 
 	ON HOMEPAGE.NR_BLOGS_READERS (ITEM_ID); 
GO

CREATE  INDEX BLOGS_READERS_CD_IX 
 	ON HOMEPAGE.NR_BLOGS_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX BLOGS_READERS_SRC_IX 
 	ON HOMEPAGE.NR_BLOGS_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX BLOGS_READERS_ACT_IX 
 	ON HOMEPAGE.NR_BLOGS_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX BLOGS_READERS_RLL_IX 
 	ON HOMEPAGE.NR_BLOGS_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX BLOGS_READERS_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_BLOGS_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_BLOGS_READERS

--  [start indexes] NR_BOOKMARKS_READERS
CREATE  INDEX BOOKMARKS_READERS_STR_IX 
 	ON HOMEPAGE.NR_BOOKMARKS_READERS (STORY_ID); 
GO

CREATE  INDEX BOOKMARKS_READERS_ITM_IX 
 	ON HOMEPAGE.NR_BOOKMARKS_READERS (ITEM_ID); 
GO

CREATE  INDEX BOOKMARKS_READERS_CD_IX 
 	ON HOMEPAGE.NR_BOOKMARKS_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX BOOKMARKS_READERS_SRC_IX 
 	ON HOMEPAGE.NR_BOOKMARKS_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX BOOKMARKS_READERS_ACT_IX 
 	ON HOMEPAGE.NR_BOOKMARKS_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX BOOKMARKS_READERS_RLL_IX 
 	ON HOMEPAGE.NR_BOOKMARKS_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX BOOKMARKS_READERS_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_BOOKMARKS_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_BOOKMARKS_READERS

--  [start indexes] NR_FILES_READERS
CREATE  INDEX FILES_READERS_STR_IX 
 	ON HOMEPAGE.NR_FILES_READERS (STORY_ID); 
GO

CREATE  INDEX FILES_READERS_ITM_IX 
 	ON HOMEPAGE.NR_FILES_READERS (ITEM_ID); 
GO

CREATE  INDEX FILES_READERS_CD_IX 
 	ON HOMEPAGE.NR_FILES_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX FILES_READERS_SRC_IX 
 	ON HOMEPAGE.NR_FILES_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX FILES_READERS_ACT_IX 
 	ON HOMEPAGE.NR_FILES_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX FILES_READERS_RLL_IX 
 	ON HOMEPAGE.NR_FILES_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX FILES_READERS_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_FILES_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_FILES_READERS

--  [start indexes] NR_FORUMS_READERS
CREATE  INDEX FORUMS_READERS_STR_IX 
 	ON HOMEPAGE.NR_FORUMS_READERS (STORY_ID); 
GO

CREATE  INDEX FORUMS_READERS_ITM_IX 
 	ON HOMEPAGE.NR_FORUMS_READERS (ITEM_ID); 
GO

CREATE  INDEX FORUMS_READERS_CD_IX 
 	ON HOMEPAGE.NR_FORUMS_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX FORUMS_READERS_SRC_IX 
 	ON HOMEPAGE.NR_FORUMS_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX FORUMS_READERS_ACT_IX 
 	ON HOMEPAGE.NR_FORUMS_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX FORUMS_READERS_RLL_IX 
 	ON HOMEPAGE.NR_FORUMS_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX FORUMS_READERS_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_FORUMS_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_FORUMS_READERS

--  [start indexes] NR_WIKIS_READERS
CREATE  INDEX WIKIS_READERS_STR_IX 
 	ON HOMEPAGE.NR_WIKIS_READERS (STORY_ID); 
GO

CREATE  INDEX WIKIS_READERS_ITM_IX 
 	ON HOMEPAGE.NR_WIKIS_READERS (ITEM_ID); 
GO

CREATE  INDEX WIKIS_READERS_CD_IX 
 	ON HOMEPAGE.NR_WIKIS_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX WIKIS_READERS_SRC_IX 
 	ON HOMEPAGE.NR_WIKIS_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX WIKIS_READERS_ACT_IX 
 	ON HOMEPAGE.NR_WIKIS_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX WIKIS_READERS_RLL_IX 
 	ON HOMEPAGE.NR_WIKIS_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX WIKIS_READERS_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_WIKIS_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_WIKIS_READERS

--  [start indexes] NR_TAGS_READERS
CREATE  INDEX TAGS_READERS_STR_IX 
 	ON HOMEPAGE.NR_TAGS_READERS (STORY_ID); 
GO

CREATE  INDEX TAGS_READERS_ITM_IX 
 	ON HOMEPAGE.NR_TAGS_READERS (ITEM_ID); 
GO

CREATE  INDEX TAGS_READERS_CD_IX 
 	ON HOMEPAGE.NR_TAGS_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX TAGS_READERS_SRC_IX 
 	ON HOMEPAGE.NR_TAGS_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX TAGS_READERS_ACT_IX 
 	ON HOMEPAGE.NR_TAGS_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX TAGS_READERS_RLL_IX 
 	ON HOMEPAGE.NR_TAGS_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE INDEX TAGS_READERS_RDR_STR 
 	ON HOMEPAGE.NR_TAGS_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_TAGS_READERS

--  [start indexes] NR_STATUS_UPDATE_READERS
CREATE  INDEX STATUS_READERS_STR_IX 
 	ON HOMEPAGE.NR_STATUS_UPDATE_READERS (STORY_ID); 
GO

CREATE  INDEX STATUS_READERS_ITM_IX 
 	ON HOMEPAGE.NR_STATUS_UPDATE_READERS (ITEM_ID); 
GO

CREATE  INDEX STATUS_READERS_CD_IX 
 	ON HOMEPAGE.NR_STATUS_UPDATE_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX STATUS_READERS_SRC_IX 
 	ON HOMEPAGE.NR_STATUS_UPDATE_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX STATUS_READERS_ACT_IX 
 	ON HOMEPAGE.NR_STATUS_UPDATE_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX STATUS_READERS_RLL_IX 
 	ON HOMEPAGE.NR_STATUS_UPDATE_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX STATUS_READERS_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_STATUS_UPDATE_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_STATUS_UPDATE_READERS

--  [start indexes] NR_EXTERNAL_READERS
CREATE  INDEX EXTERNAL_READERS_STR_IX 
 	ON HOMEPAGE.NR_EXTERNAL_READERS (STORY_ID); 
GO

CREATE  INDEX EXTERNAL_READERS_ITM_IX 
 	ON HOMEPAGE.NR_EXTERNAL_READERS (ITEM_ID); 
GO

CREATE  INDEX EXTERNAL_READERS_CD_IX 
 	ON HOMEPAGE.NR_EXTERNAL_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX EXTERNAL_READERS_SRC_IX 
 	ON HOMEPAGE.NR_EXTERNAL_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX EXTERNAL_READERS_ACT_IX 
 	ON HOMEPAGE.NR_EXTERNAL_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX EXTERNAL_READERS_RLL_IX 
 	ON HOMEPAGE.NR_EXTERNAL_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX EXTERNAL_READERS_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_EXTERNAL_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_EXTERNAL_READERS

--  [start indexes] NR_ACTIONABLE_READERS
CREATE  INDEX ACTIONABLE_READERS_STR_IX 
 	ON HOMEPAGE.NR_ACTIONABLE_READERS (STORY_ID); 
GO

CREATE  INDEX ACTIONABLE_READERS_ITM_IX 
 	ON HOMEPAGE.NR_ACTIONABLE_READERS (ITEM_ID); 
GO

CREATE  INDEX ACTIONABLE_READERS_CD_IX 
 	ON HOMEPAGE.NR_ACTIONABLE_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX ACTIONABLE_READERS_SRC_IX 
 	ON HOMEPAGE.NR_ACTIONABLE_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX ACTIONABLE_READERS_ACT_IX 
 	ON HOMEPAGE.NR_ACTIONABLE_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX ACTIONABLE_READERS_RLL_IX 
 	ON HOMEPAGE.NR_ACTIONABLE_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX ACTIONABLE_READERS_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_ACTIONABLE_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_ACTIONABLE_READERS

--  [start indexes] NR_DISCOVERY_VIEW
CREATE  INDEX DISCOVERY_VIEW_STR_IX 
 	ON HOMEPAGE.NR_DISCOVERY_VIEW (STORY_ID); 
GO

CREATE  INDEX DISCOVERY_VIEW_ITM_IX 
 	ON HOMEPAGE.NR_DISCOVERY_VIEW (ITEM_ID); 
GO

CREATE  INDEX DISCOVERY_VIEW_CD_IX 
 	ON HOMEPAGE.NR_DISCOVERY_VIEW (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX DISCOVERY_VIEW_SRC_IX 
 	ON HOMEPAGE.NR_DISCOVERY_VIEW (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX DISCOVERY_VIEW_ACT_IX 
 	ON HOMEPAGE.NR_DISCOVERY_VIEW (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX DISCOVERY_VIEW_RLL_IX 
 	ON HOMEPAGE.NR_DISCOVERY_VIEW (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX DISCOVERY_VIEW_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_DISCOVERY_VIEW (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_DISCOVERY_VIEW

--  [start indexes] NR_PROFILES_VIEW
CREATE  INDEX PROFILES_VIEW_STR_IX 
 	ON HOMEPAGE.NR_PROFILES_VIEW (STORY_ID); 
GO

CREATE  INDEX PROFILES_VIEW_ITM_IX 
 	ON HOMEPAGE.NR_PROFILES_VIEW (ITEM_ID); 
GO

CREATE  INDEX PROFILES_VIEW_CD_IX 
 	ON HOMEPAGE.NR_PROFILES_VIEW (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX PROFILES_VIEW_SRC_IX 
 	ON HOMEPAGE.NR_PROFILES_VIEW (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX PROFILES_VIEW_ACT_IX 
 	ON HOMEPAGE.NR_PROFILES_VIEW (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX PROFILES_VIEW_RLL_IX 
 	ON HOMEPAGE.NR_PROFILES_VIEW (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX PROFILES_VIEW_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_PROFILES_VIEW (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_PROFILES_VIEW

--  [start indexes] NR_NOTIFICATION_SENT_READERS
CREATE  INDEX NOTIFICA_READERS_STR_IX 
 	ON HOMEPAGE.NR_NOTIFICATION_SENT_READERS (STORY_ID); 
GO

CREATE  INDEX NOTIFICA_READERS_ITM_IX 
 	ON HOMEPAGE.NR_NOTIFICATION_SENT_READERS (ITEM_ID); 
GO

CREATE  INDEX NOTIFICA_READERS_CD_IX 
 	ON HOMEPAGE.NR_NOTIFICATION_SENT_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX NOTIFICA_READERS_SRC_IX 
 	ON HOMEPAGE.NR_NOTIFICATION_SENT_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX NOTIFICA_READERS_ACT_IX 
 	ON HOMEPAGE.NR_NOTIFICATION_SENT_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX NOTIFICA_READERS_RLL_IX 
 	ON HOMEPAGE.NR_NOTIFICATION_SENT_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX NOTIFICA_READERS_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_NOTIFICATION_SENT_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_NOTIFICATION_SENT_READERS

--  [start indexes] NR_SAVED_READERS
CREATE  INDEX SAVED_READERS_STR_IX 
 	ON HOMEPAGE.NR_SAVED_READERS (STORY_ID); 
GO

CREATE  INDEX SAVED_READERS_ITM_IX 
 	ON HOMEPAGE.NR_SAVED_READERS (ITEM_ID); 
GO

CREATE  INDEX SAVED_READERS_CD_IX 
 	ON HOMEPAGE.NR_SAVED_READERS (STORY_ID, CREATION_DATE DESC); 
GO

CREATE  INDEX SAVED_READERS_SRC_IX 
 	ON HOMEPAGE.NR_SAVED_READERS (READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX SAVED_READERS_ACT_IX 
 	ON HOMEPAGE.NR_SAVED_READERS (READER_ID, CREATION_DATE DESC, ACTOR_UUID, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE  INDEX SAVED_READERS_RLL_IX 
 	ON HOMEPAGE.NR_SAVED_READERS (USE_IN_ROLLUP, READER_ID, CREATION_DATE DESC, STORY_ID, IS_BROADCAST, ROLLUP_ENTRY_ID, SOURCE_TYPE); 
GO

CREATE UNIQUE INDEX SAVED_READERS_UNQ_RDR_STR 
 	ON HOMEPAGE.NR_SAVED_READERS (READER_ID, STORY_ID); 
GO

--  [end indexes] NR_SAVED_READERS

------------------------------------------------------------
-- [end] NEWS replacing existing indexes
------------------------------------------------------------

----------------------------------------------------------------
-- HOMEPAGE.NR_ENTRIES
----------------------------------------------------------------
CREATE TABLE HOMEPAGE.NR_ENTRIES (
	ENTRY_ID nvarchar(36) NOT NULL,
	SOURCE nvarchar(36) NOT NULL,
	SOURCE_TYPE NUMERIC(5,0),
	CONTAINER_ID nvarchar(256),
	CONTAINER_NAME nvarchar(256),
	CONTAINER_URL nvarchar(2048),
	ITEM_ID nvarchar(36),
	ITEM_NAME nvarchar(256),
	ITEM_URL nvarchar(2048),
	ITEM_CREATION_DATE DATETIME NOT NULL,
	ITEM_UPDATE_DATE DATETIME NOT NULL,
	ITEM_TAGS nvarchar(1024),
	N_COMMENTS NUMERIC(5,0) DEFAULT 0 NOT NULL,
	N_RECOMMANDATIONS NUMERIC(5,0) DEFAULT 0 NOT NULL,
	LAST_COMMENT_ID nvarchar(36),
	LAST_DATE_COMMENT DATETIME,
	LAST_AUTHOR_COMMENT nvarchar(36),
	PREV_COMMENT_ID nvarchar(36),
	PREV_DATE_COMMENT DATETIME,
	PREV_AUTHOR_COMMENT nvarchar(36),
	TARGET_SUBJECT_ID nvarchar(36),
	ITEM_ATOM_URL nvarchar(2048),
	PREVIEW_IMAGE_URL nvarchar(2048),
	JSON_META_DATA nvarchar(4000),
	ITEM_SCOPE NUMERIC(5,0),
	IS_LAST_COMMENT_PUBLIC NUMERIC(5,0),
	IS_PREV_COMMENT_PUBLIC NUMERIC(5,0),
	ITEM_CORRELATION_ID nvarchar(36),
	ITEM_CORRELATION_NAME nvarchar(256),
	LAST_DESC_COMMENT nvarchar(4000),
	PREV_DESC_COMMENT nvarchar(4000),
	LAST_UPDATE_DATE_COMMENT DATETIME, 
	PREV_UPDATE_DATE_COMMENT DATETIME,
	ITEM_AUTHOR_UUID nvarchar (36),
	ITEM_AUTHOR_DISPLAYNAME nvarchar (256),
	ITEM_CORRELATION_AUTHOR_UUID nvarchar (36),
	ITEM_CORRELATION_AUTHOR_NAME nvarchar (256),
	BRIEF_DESC nvarchar (4000)
) ON [PRIMARY]
GO

ALTER TABLE HOMEPAGE.NR_ENTRIES
    ADD CONSTRAINT PK_ENTRY_ID PRIMARY KEY(ENTRY_ID);

CREATE INDEX NR_ENTRIES_CONT
    ON HOMEPAGE.NR_ENTRIES (CONTAINER_ID);

CREATE UNIQUE INDEX NR_ENTRIES_ITEM
    ON HOMEPAGE.NR_ENTRIES (ITEM_ID);

GO

----------------------------------------------------------------
-- HOMEPAGE.NR_STORIES
----------------------------------------------------------------
CREATE TABLE HOMEPAGE.NR_STORIES (
	STORY_ID nvarchar(36) NOT NULL,
	EVENT_NAME nvarchar(256) NOT NULL,
	SOURCE nvarchar(36),
	CONTAINER_ID nvarchar(256),	
	CONTAINER_NAME nvarchar(256),
	CONTAINER_URL nvarchar(2048),
	ITEM_NAME nvarchar(256),
	ITEM_URL nvarchar(2048),
	ITEM_ATOM_URL nvarchar(2048),
	ITEM_ID nvarchar(36),
	ITEM_CORRELATION_ID nvarchar(36),
	ITEM_TAGS nvarchar(1024),
	CREATION_DATE DATETIME NOT NULL,
	BRIEF_DESC nvarchar(4000),
	ACTOR_UUID nvarchar(36),
	EVENT_RECORD_UUID nvarchar(36) NOT NULL,
	TAGS nvarchar(1024),
	META_TEMPLATE nvarchar(3328) DEFAULT '' NOT NULL,
	TEXT_META_TEMPLATE nvarchar(1024),
	R_META_TEMPLATE nvarchar(3328),
	R_TEXT_META_TEMPLATE nvarchar(1024),
	IS_COMMUNITY_STORY NUMERIC(5,0) DEFAULT 0,
	ITEM_CORRELATION_NAME nvarchar(256),
	HAS_ATTACHMENT NUMERIC(5,0) DEFAULT 0,
	SOURCE_TYPE NUMERIC(5,0),
	ENTRY_ID nvarchar(36),
	EVENT_TIME DATETIME,
	VERB nvarchar (128),
	ACTIVITY_META_DATA_1 nvarchar(3584),
	ACTIVITY_META_DATA_2 nvarchar(3584),
	IS_META_DATA_TRUNCATED  NUMERIC(5,0),
	ITEM_SCOPE NUMERIC(5,0),
	ITEM_UPDATE_DATE DATETIME,
	FIRST_RECIPIENT_ID nvarchar(36),
	NUM_RECIPIENTS NUMERIC(5,0), 
	PRIMARY_ACTION_URL nvarchar(768), 
	SECONDARY_ACTION_URL nvarchar(768),
	ITEM_AUTHOR_UUID nvarchar (36),
	ITEM_AUTHOR_DISPLAYNAME nvarchar (256),
	ITEM_CORRELATION_AUTHOR_UUID nvarchar (36),
	ITEM_CORRELATION_AUTHOR_NAME nvarchar (256)
) ON [PRIMARY]
GO

ALTER TABLE HOMEPAGE.NR_STORIES
    ADD CONSTRAINT PK_STORY_ID PRIMARY KEY(STORY_ID);

ALTER TABLE HOMEPAGE.NR_STORIES
  	ADD CONSTRAINT FK_ENTRY_ID FOREIGN KEY (ENTRY_ID)
	REFERENCES HOMEPAGE.NR_ENTRIES (ENTRY_ID);    

CREATE INDEX NR_STORIES_DATE
	ON HOMEPAGE.NR_STORIES (CREATION_DATE DESC);

CREATE INDEX STORY_CONTAINED_ID
    ON HOMEPAGE.NR_STORIES (CONTAINER_ID);

CREATE INDEX STORIES_ITEM_CORR_ID
    ON HOMEPAGE.NR_STORIES (ITEM_CORRELATION_ID);

CREATE INDEX NR_STORIES_EIDX
    ON HOMEPAGE.NR_STORIES (ENTRY_ID);

CREATE INDEX NR_STORIES_ER_UUID
    ON HOMEPAGE.NR_STORIES (EVENT_RECORD_UUID, ENTRY_ID);
    
CREATE INDEX NR_STORY_CD_IDX 
	ON HOMEPAGE.NR_STORIES (CREATION_DATE ASC, STORY_ID);    

GO




------------------------------------------------------------
-- HOMEPAGE.NR_SRC_STORIES_ACT
------------------------------------------------------------
------------------------------
-- i) COMMIT all the work
-- ii) enable xp_cmdshell
-----------------------------
COMMIT;


EXEC master.dbo.sp_configure 'show advanced options', 1
RECONFIGURE
EXEC master.dbo.sp_configure 'xp_cmdshell', 1
RECONFIGURE

---------------------------------
-- Move the data
---------------------------------


-----------------------------------------------------------------------
-- [start] ************ HOMEPAGE.NR_SRC_STORIES_ACT *********************
-----------------------------------------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
 	ENTRY_ID, SOURCE, SOURCE_TYPE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_ID, ITEM_NAME, ITEM_URL, ITEM_CREATION_DATE,
	ITEM_UPDATE_DATE, ITEM_TAGS, N_COMMENTS, N_RECOMMANDATIONS, LAST_COMMENT_ID, LAST_DATE_COMMENT, LAST_AUTHOR_COMMENT,
	PREV_COMMENT_ID, PREV_DATE_COMMENT, PREV_AUTHOR_COMMENT, TARGET_SUBJECT_ID, ITEM_ATOM_URL, PREVIEW_IMAGE_URL,
	JSON_META_DATA, ITEM_SCOPE, IS_LAST_COMMENT_PUBLIC, IS_PREV_COMMENT_PUBLIC, ITEM_CORRELATION_ID, ITEM_CORRELATION_NAME,
	LAST_DESC_COMMENT, PREV_DESC_COMMENT, LAST_UPDATE_DATE_COMMENT, PREV_UPDATE_DATE_COMMENT, ITEM_AUTHOR_UUID,
	ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME, BRIEF_DESC 
  FROM HOMEPAGE.NR_ENTRIES_ACT   E
  WHERE  E.ENTRY_ID NOT IN (SELECT ENTRY_ID FROM HOMEPAGE.NR_ENTRIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_ENTRIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;

-------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
  	 STORY_ID, EVENT_NAME, SOURCE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_NAME, ITEM_URL, ITEM_ATOM_URL,
  	 ITEM_ID, ITEM_CORRELATION_ID, ITEM_TAGS, CREATION_DATE, BRIEF_DESC, ACTOR_UUID, EVENT_RECORD_UUID, TAGS, META_TEMPLATE, 
 	 TEXT_META_TEMPLATE, R_META_TEMPLATE, R_TEXT_META_TEMPLATE, IS_COMMUNITY_STORY, ITEM_CORRELATION_NAME, HAS_ATTACHMENT, 
 	 SOURCE_TYPE, ENTRY_ID, EVENT_TIME, VERB, ACTIVITY_META_DATA_1, ACTIVITY_META_DATA_2, IS_META_DATA_TRUNCATED, 
 	 ITEM_SCOPE, ITEM_UPDATE_DATE, FIRST_RECIPIENT_ID, NUM_RECIPIENTS, PRIMARY_ACTION_URL, SECONDARY_ACTION_URL, 
 	 ITEM_AUTHOR_UUID, ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME
  FROM HOMEPAGE.NR_SRC_STORIES_ACT S
  WHERE S.STORY_ID NOT IN (SELECT STORY_ID FROM HOMEPAGE.NR_STORIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_STORIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;
--------- [end] stories

------------------------------------------------------------
-- HOMEPAGE.NR_SRC_STORIES_BLG
------------------------------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
 	ENTRY_ID, SOURCE, SOURCE_TYPE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_ID, ITEM_NAME, ITEM_URL, ITEM_CREATION_DATE,
	ITEM_UPDATE_DATE, ITEM_TAGS, N_COMMENTS, N_RECOMMANDATIONS, LAST_COMMENT_ID, LAST_DATE_COMMENT, LAST_AUTHOR_COMMENT,
	PREV_COMMENT_ID, PREV_DATE_COMMENT, PREV_AUTHOR_COMMENT, TARGET_SUBJECT_ID, ITEM_ATOM_URL, PREVIEW_IMAGE_URL,
	JSON_META_DATA, ITEM_SCOPE, IS_LAST_COMMENT_PUBLIC, IS_PREV_COMMENT_PUBLIC, ITEM_CORRELATION_ID, ITEM_CORRELATION_NAME,
	LAST_DESC_COMMENT, PREV_DESC_COMMENT, LAST_UPDATE_DATE_COMMENT, PREV_UPDATE_DATE_COMMENT, ITEM_AUTHOR_UUID,
	ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME, BRIEF_DESC 
  FROM HOMEPAGE.NR_ENTRIES_BLG   E
  WHERE  E.ENTRY_ID NOT IN (SELECT ENTRY_ID FROM HOMEPAGE.NR_ENTRIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_ENTRIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;

-------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
  	 STORY_ID, EVENT_NAME, SOURCE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_NAME, ITEM_URL, ITEM_ATOM_URL,
  	 ITEM_ID, ITEM_CORRELATION_ID, ITEM_TAGS, CREATION_DATE, BRIEF_DESC, ACTOR_UUID, EVENT_RECORD_UUID, TAGS, META_TEMPLATE, 
 	 TEXT_META_TEMPLATE, R_META_TEMPLATE, R_TEXT_META_TEMPLATE, IS_COMMUNITY_STORY, ITEM_CORRELATION_NAME, HAS_ATTACHMENT, 
 	 SOURCE_TYPE, ENTRY_ID, EVENT_TIME, VERB, ACTIVITY_META_DATA_1, ACTIVITY_META_DATA_2, IS_META_DATA_TRUNCATED, 
 	 ITEM_SCOPE, ITEM_UPDATE_DATE, FIRST_RECIPIENT_ID, NUM_RECIPIENTS, PRIMARY_ACTION_URL, SECONDARY_ACTION_URL, 
 	 ITEM_AUTHOR_UUID, ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME 
  FROM HOMEPAGE.NR_SRC_STORIES_BLG S
  WHERE S.STORY_ID NOT IN (SELECT STORY_ID FROM HOMEPAGE.NR_STORIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_STORIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;
--------- [end] stories
------------------------------------------------------------
-- HOMEPAGE.NR_SRC_STORIES_COM
------------------------------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
 	ENTRY_ID, SOURCE, SOURCE_TYPE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_ID, ITEM_NAME, ITEM_URL, ITEM_CREATION_DATE,
	ITEM_UPDATE_DATE, ITEM_TAGS, N_COMMENTS, N_RECOMMANDATIONS, LAST_COMMENT_ID, LAST_DATE_COMMENT, LAST_AUTHOR_COMMENT,
	PREV_COMMENT_ID, PREV_DATE_COMMENT, PREV_AUTHOR_COMMENT, TARGET_SUBJECT_ID, ITEM_ATOM_URL, PREVIEW_IMAGE_URL,
	JSON_META_DATA, ITEM_SCOPE, IS_LAST_COMMENT_PUBLIC, IS_PREV_COMMENT_PUBLIC, ITEM_CORRELATION_ID, ITEM_CORRELATION_NAME,
	LAST_DESC_COMMENT, PREV_DESC_COMMENT, LAST_UPDATE_DATE_COMMENT, PREV_UPDATE_DATE_COMMENT, ITEM_AUTHOR_UUID,
	ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME, BRIEF_DESC 
  FROM HOMEPAGE.NR_ENTRIES_COM   E
  WHERE  E.ENTRY_ID NOT IN (SELECT ENTRY_ID FROM HOMEPAGE.NR_ENTRIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_ENTRIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;

-------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
  	 STORY_ID, EVENT_NAME, SOURCE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_NAME, ITEM_URL, ITEM_ATOM_URL,
  	 ITEM_ID, ITEM_CORRELATION_ID, ITEM_TAGS, CREATION_DATE, BRIEF_DESC, ACTOR_UUID, EVENT_RECORD_UUID, TAGS, META_TEMPLATE, 
 	 TEXT_META_TEMPLATE, R_META_TEMPLATE, R_TEXT_META_TEMPLATE, IS_COMMUNITY_STORY, ITEM_CORRELATION_NAME, HAS_ATTACHMENT, 
 	 SOURCE_TYPE, ENTRY_ID, EVENT_TIME, VERB, ACTIVITY_META_DATA_1, ACTIVITY_META_DATA_2, IS_META_DATA_TRUNCATED, 
 	 ITEM_SCOPE, ITEM_UPDATE_DATE, FIRST_RECIPIENT_ID, NUM_RECIPIENTS, PRIMARY_ACTION_URL, SECONDARY_ACTION_URL, 
 	 ITEM_AUTHOR_UUID, ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME 
  FROM HOMEPAGE.NR_SRC_STORIES_COM S
  WHERE S.STORY_ID NOT IN (SELECT STORY_ID FROM HOMEPAGE.NR_STORIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_STORIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;
--------- [end] stories
------------------------------------------------------------
-- HOMEPAGE.NR_SRC_STORIES_WIK
------------------------------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
 	ENTRY_ID, SOURCE, SOURCE_TYPE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_ID, ITEM_NAME, ITEM_URL, ITEM_CREATION_DATE,
	ITEM_UPDATE_DATE, ITEM_TAGS, N_COMMENTS, N_RECOMMANDATIONS, LAST_COMMENT_ID, LAST_DATE_COMMENT, LAST_AUTHOR_COMMENT,
	PREV_COMMENT_ID, PREV_DATE_COMMENT, PREV_AUTHOR_COMMENT, TARGET_SUBJECT_ID, ITEM_ATOM_URL, PREVIEW_IMAGE_URL,
	JSON_META_DATA, ITEM_SCOPE, IS_LAST_COMMENT_PUBLIC, IS_PREV_COMMENT_PUBLIC, ITEM_CORRELATION_ID, ITEM_CORRELATION_NAME,
	LAST_DESC_COMMENT, PREV_DESC_COMMENT, LAST_UPDATE_DATE_COMMENT, PREV_UPDATE_DATE_COMMENT, ITEM_AUTHOR_UUID,
	ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME, BRIEF_DESC 
  FROM HOMEPAGE.NR_ENTRIES_WIK   E
  WHERE  E.ENTRY_ID NOT IN (SELECT ENTRY_ID FROM HOMEPAGE.NR_ENTRIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_ENTRIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;

-------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
  	 STORY_ID, EVENT_NAME, SOURCE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_NAME, ITEM_URL, ITEM_ATOM_URL,
  	 ITEM_ID, ITEM_CORRELATION_ID, ITEM_TAGS, CREATION_DATE, BRIEF_DESC, ACTOR_UUID, EVENT_RECORD_UUID, TAGS, META_TEMPLATE, 
 	 TEXT_META_TEMPLATE, R_META_TEMPLATE, R_TEXT_META_TEMPLATE, IS_COMMUNITY_STORY, ITEM_CORRELATION_NAME, HAS_ATTACHMENT, 
 	 SOURCE_TYPE, ENTRY_ID, EVENT_TIME, VERB, ACTIVITY_META_DATA_1, ACTIVITY_META_DATA_2, IS_META_DATA_TRUNCATED, 
 	 ITEM_SCOPE, ITEM_UPDATE_DATE, FIRST_RECIPIENT_ID, NUM_RECIPIENTS, PRIMARY_ACTION_URL, SECONDARY_ACTION_URL, 
 	 ITEM_AUTHOR_UUID, ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME 
  FROM HOMEPAGE.NR_SRC_STORIES_WIK S
  WHERE S.STORY_ID NOT IN (SELECT STORY_ID FROM HOMEPAGE.NR_STORIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_STORIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;
--------- [end] stories
------------------------------------------------------------
-- HOMEPAGE.NR_SRC_STORIES_PRF
------------------------------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
 	ENTRY_ID, SOURCE, SOURCE_TYPE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_ID, ITEM_NAME, ITEM_URL, ITEM_CREATION_DATE,
	ITEM_UPDATE_DATE, ITEM_TAGS, N_COMMENTS, N_RECOMMANDATIONS, LAST_COMMENT_ID, LAST_DATE_COMMENT, LAST_AUTHOR_COMMENT,
	PREV_COMMENT_ID, PREV_DATE_COMMENT, PREV_AUTHOR_COMMENT, TARGET_SUBJECT_ID, ITEM_ATOM_URL, PREVIEW_IMAGE_URL,
	JSON_META_DATA, ITEM_SCOPE, IS_LAST_COMMENT_PUBLIC, IS_PREV_COMMENT_PUBLIC, ITEM_CORRELATION_ID, ITEM_CORRELATION_NAME,
	LAST_DESC_COMMENT, PREV_DESC_COMMENT, LAST_UPDATE_DATE_COMMENT, PREV_UPDATE_DATE_COMMENT, ITEM_AUTHOR_UUID,
	ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME, BRIEF_DESC 
  FROM HOMEPAGE.NR_ENTRIES_PRF   E
  WHERE  E.ENTRY_ID NOT IN (SELECT ENTRY_ID FROM HOMEPAGE.NR_ENTRIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_ENTRIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;

-------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
  	 STORY_ID, EVENT_NAME, SOURCE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_NAME, ITEM_URL, ITEM_ATOM_URL,
  	 ITEM_ID, ITEM_CORRELATION_ID, ITEM_TAGS, CREATION_DATE, BRIEF_DESC, ACTOR_UUID, EVENT_RECORD_UUID, TAGS, META_TEMPLATE, 
 	 TEXT_META_TEMPLATE, R_META_TEMPLATE, R_TEXT_META_TEMPLATE, IS_COMMUNITY_STORY, ITEM_CORRELATION_NAME, HAS_ATTACHMENT, 
 	 SOURCE_TYPE, ENTRY_ID, EVENT_TIME, VERB, ACTIVITY_META_DATA_1, ACTIVITY_META_DATA_2, IS_META_DATA_TRUNCATED, 
 	 ITEM_SCOPE, ITEM_UPDATE_DATE, FIRST_RECIPIENT_ID, NUM_RECIPIENTS, PRIMARY_ACTION_URL, SECONDARY_ACTION_URL, 
 	 ITEM_AUTHOR_UUID, ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME 
  FROM HOMEPAGE.NR_SRC_STORIES_PRF S
  WHERE S.STORY_ID NOT IN (SELECT STORY_ID FROM HOMEPAGE.NR_STORIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_STORIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;
--------- [end] stories
------------------------------------------------------------
-- HOMEPAGE.NR_SRC_STORIES_HP
------------------------------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
 	ENTRY_ID, SOURCE, SOURCE_TYPE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_ID, ITEM_NAME, ITEM_URL, ITEM_CREATION_DATE,
	ITEM_UPDATE_DATE, ITEM_TAGS, N_COMMENTS, N_RECOMMANDATIONS, LAST_COMMENT_ID, LAST_DATE_COMMENT, LAST_AUTHOR_COMMENT,
	PREV_COMMENT_ID, PREV_DATE_COMMENT, PREV_AUTHOR_COMMENT, TARGET_SUBJECT_ID, ITEM_ATOM_URL, PREVIEW_IMAGE_URL,
	JSON_META_DATA, ITEM_SCOPE, IS_LAST_COMMENT_PUBLIC, IS_PREV_COMMENT_PUBLIC, ITEM_CORRELATION_ID, ITEM_CORRELATION_NAME,
	LAST_DESC_COMMENT, PREV_DESC_COMMENT, LAST_UPDATE_DATE_COMMENT, PREV_UPDATE_DATE_COMMENT, ITEM_AUTHOR_UUID,
	ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME, BRIEF_DESC 
  FROM HOMEPAGE.NR_ENTRIES_HP   E
  WHERE  E.ENTRY_ID NOT IN (SELECT ENTRY_ID FROM HOMEPAGE.NR_ENTRIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_ENTRIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;

-------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
  	 STORY_ID, EVENT_NAME, SOURCE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_NAME, ITEM_URL, ITEM_ATOM_URL,
  	 ITEM_ID, ITEM_CORRELATION_ID, ITEM_TAGS, CREATION_DATE, BRIEF_DESC, ACTOR_UUID, EVENT_RECORD_UUID, TAGS, META_TEMPLATE, 
 	 TEXT_META_TEMPLATE, R_META_TEMPLATE, R_TEXT_META_TEMPLATE, IS_COMMUNITY_STORY, ITEM_CORRELATION_NAME, HAS_ATTACHMENT, 
 	 SOURCE_TYPE, ENTRY_ID, EVENT_TIME, VERB, ACTIVITY_META_DATA_1, ACTIVITY_META_DATA_2, IS_META_DATA_TRUNCATED, 
 	 ITEM_SCOPE, ITEM_UPDATE_DATE, FIRST_RECIPIENT_ID, NUM_RECIPIENTS, PRIMARY_ACTION_URL, SECONDARY_ACTION_URL, 
 	 ITEM_AUTHOR_UUID, ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME 
  FROM HOMEPAGE.NR_SRC_STORIES_HP S
  WHERE S.STORY_ID NOT IN (SELECT STORY_ID FROM HOMEPAGE.NR_STORIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_STORIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;
--------- [end] stories
------------------------------------------------------------
-- HOMEPAGE.NR_SRC_STORIES_DGR
------------------------------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
 	E.ENTRY_ID, E.SOURCE, E.SOURCE_TYPE, E.CONTAINER_ID, E.CONTAINER_NAME, E.CONTAINER_URL, E.ITEM_ID, E.ITEM_NAME, E.ITEM_URL, E.ITEM_CREATION_DATE,
	E.ITEM_UPDATE_DATE, E.ITEM_TAGS, E.N_COMMENTS, E.N_RECOMMANDATIONS, E.LAST_COMMENT_ID, E.LAST_DATE_COMMENT, E.LAST_AUTHOR_COMMENT,
	E.PREV_COMMENT_ID, E.PREV_DATE_COMMENT, E.PREV_AUTHOR_COMMENT, E.TARGET_SUBJECT_ID, E.ITEM_ATOM_URL, E.PREVIEW_IMAGE_URL,
	E.JSON_META_DATA, E.ITEM_SCOPE, E.IS_LAST_COMMENT_PUBLIC, E.IS_PREV_COMMENT_PUBLIC, E.ITEM_CORRELATION_ID, E.ITEM_CORRELATION_NAME,
	E.LAST_DESC_COMMENT, E.PREV_DESC_COMMENT, E.LAST_UPDATE_DATE_COMMENT, E.PREV_UPDATE_DATE_COMMENT, E.ITEM_AUTHOR_UUID,
	E.ITEM_AUTHOR_DISPLAYNAME, E.ITEM_CORRELATION_AUTHOR_UUID, E.ITEM_CORRELATION_AUTHOR_NAME, E.BRIEF_DESC 
  FROM HOMEPAGE.NR_ENTRIES_DGR  E
  WHERE  E.ENTRY_ID NOT IN (SELECT ENTRY_ID FROM HOMEPAGE.NR_ENTRIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_ENTRIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;

-------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
   SELECT 
  	 S.STORY_ID, S.EVENT_NAME, S.SOURCE, S.CONTAINER_ID, S.CONTAINER_NAME, S.CONTAINER_URL, S.ITEM_NAME, S.ITEM_URL, S.ITEM_ATOM_URL,
  	 S.ITEM_ID, S.ITEM_CORRELATION_ID, S.ITEM_TAGS, S.CREATION_DATE, S.BRIEF_DESC, S.ACTOR_UUID, S.EVENT_RECORD_UUID, S.TAGS, S.META_TEMPLATE, 
 	 S.TEXT_META_TEMPLATE, S.R_META_TEMPLATE, S.R_TEXT_META_TEMPLATE, S.IS_COMMUNITY_STORY, S.ITEM_CORRELATION_NAME, S.HAS_ATTACHMENT, 
 	 S.SOURCE_TYPE, S.ENTRY_ID, S.EVENT_TIME, S.VERB, S.ACTIVITY_META_DATA_1, S.ACTIVITY_META_DATA_2, S.IS_META_DATA_TRUNCATED, 
 	 S.ITEM_SCOPE, S.ITEM_UPDATE_DATE, S.FIRST_RECIPIENT_ID, S.NUM_RECIPIENTS, S.PRIMARY_ACTION_URL, S.SECONDARY_ACTION_URL, 
 	 S.ITEM_AUTHOR_UUID, S.ITEM_AUTHOR_DISPLAYNAME, S.ITEM_CORRELATION_AUTHOR_UUID, S.ITEM_CORRELATION_AUTHOR_NAME 
  FROM HOMEPAGE.NR_SRC_STORIES_DGR S
  WHERE S.STORY_ID NOT IN (SELECT STORY_ID FROM HOMEPAGE.NR_STORIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_STORIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;
--------- [end] stories
------------------------------------------------------------
-- HOMEPAGE.NR_SRC_STORIES_FILE
------------------------------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
 	ENTRY_ID, SOURCE, SOURCE_TYPE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_ID, ITEM_NAME, ITEM_URL, ITEM_CREATION_DATE,
	ITEM_UPDATE_DATE, ITEM_TAGS, N_COMMENTS, N_RECOMMANDATIONS, LAST_COMMENT_ID, LAST_DATE_COMMENT, LAST_AUTHOR_COMMENT,
	PREV_COMMENT_ID, PREV_DATE_COMMENT, PREV_AUTHOR_COMMENT, TARGET_SUBJECT_ID, ITEM_ATOM_URL, PREVIEW_IMAGE_URL,
	JSON_META_DATA, ITEM_SCOPE, IS_LAST_COMMENT_PUBLIC, IS_PREV_COMMENT_PUBLIC, ITEM_CORRELATION_ID, ITEM_CORRELATION_NAME,
	LAST_DESC_COMMENT, PREV_DESC_COMMENT, LAST_UPDATE_DATE_COMMENT, PREV_UPDATE_DATE_COMMENT, ITEM_AUTHOR_UUID,
	ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME, BRIEF_DESC 
  FROM HOMEPAGE.NR_ENTRIES_FILE   E
  WHERE  E.ENTRY_ID NOT IN (SELECT ENTRY_ID FROM HOMEPAGE.NR_ENTRIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_ENTRIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;

-------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
  	 STORY_ID, EVENT_NAME, SOURCE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_NAME, ITEM_URL, ITEM_ATOM_URL,
  	 ITEM_ID, ITEM_CORRELATION_ID, ITEM_TAGS, CREATION_DATE, BRIEF_DESC, ACTOR_UUID, EVENT_RECORD_UUID, TAGS, META_TEMPLATE, 
 	 TEXT_META_TEMPLATE, R_META_TEMPLATE, R_TEXT_META_TEMPLATE, IS_COMMUNITY_STORY, ITEM_CORRELATION_NAME, HAS_ATTACHMENT, 
 	 SOURCE_TYPE, ENTRY_ID, EVENT_TIME, VERB, ACTIVITY_META_DATA_1, ACTIVITY_META_DATA_2, IS_META_DATA_TRUNCATED, 
 	 ITEM_SCOPE, ITEM_UPDATE_DATE, FIRST_RECIPIENT_ID, NUM_RECIPIENTS, PRIMARY_ACTION_URL, SECONDARY_ACTION_URL, 
 	 ITEM_AUTHOR_UUID, ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME 
  FROM HOMEPAGE.NR_SRC_STORIES_FILE S
  WHERE S.STORY_ID NOT IN (SELECT STORY_ID FROM HOMEPAGE.NR_STORIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_STORIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;
--------- [end] stories
------------------------------------------------------------
-- HOMEPAGE.NR_SRC_STORIES_FRM
------------------------------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
 	ENTRY_ID, SOURCE, SOURCE_TYPE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_ID, ITEM_NAME, ITEM_URL, ITEM_CREATION_DATE,
	ITEM_UPDATE_DATE, ITEM_TAGS, N_COMMENTS, N_RECOMMANDATIONS, LAST_COMMENT_ID, LAST_DATE_COMMENT, LAST_AUTHOR_COMMENT,
	PREV_COMMENT_ID, PREV_DATE_COMMENT, PREV_AUTHOR_COMMENT, TARGET_SUBJECT_ID, ITEM_ATOM_URL, PREVIEW_IMAGE_URL,
	JSON_META_DATA, ITEM_SCOPE, IS_LAST_COMMENT_PUBLIC, IS_PREV_COMMENT_PUBLIC, ITEM_CORRELATION_ID, ITEM_CORRELATION_NAME,
	LAST_DESC_COMMENT, PREV_DESC_COMMENT, LAST_UPDATE_DATE_COMMENT, PREV_UPDATE_DATE_COMMENT, ITEM_AUTHOR_UUID,
	ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME, BRIEF_DESC 
  FROM HOMEPAGE.NR_ENTRIES_FRM   E
  WHERE  E.ENTRY_ID NOT IN (SELECT ENTRY_ID FROM HOMEPAGE.NR_ENTRIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_ENTRIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;

-------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
  	 STORY_ID, EVENT_NAME, SOURCE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_NAME, ITEM_URL, ITEM_ATOM_URL,
  	 ITEM_ID, ITEM_CORRELATION_ID, ITEM_TAGS, CREATION_DATE, BRIEF_DESC, ACTOR_UUID, EVENT_RECORD_UUID, TAGS, META_TEMPLATE, 
 	 TEXT_META_TEMPLATE, R_META_TEMPLATE, R_TEXT_META_TEMPLATE, IS_COMMUNITY_STORY, ITEM_CORRELATION_NAME, HAS_ATTACHMENT, 
 	 SOURCE_TYPE, ENTRY_ID, EVENT_TIME, VERB, ACTIVITY_META_DATA_1, ACTIVITY_META_DATA_2, IS_META_DATA_TRUNCATED, 
 	 ITEM_SCOPE, ITEM_UPDATE_DATE, FIRST_RECIPIENT_ID, NUM_RECIPIENTS, PRIMARY_ACTION_URL, SECONDARY_ACTION_URL, 
 	 ITEM_AUTHOR_UUID, ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME 
  FROM HOMEPAGE.NR_SRC_STORIES_FRM S
  WHERE S.STORY_ID NOT IN (SELECT STORY_ID FROM HOMEPAGE.NR_STORIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_STORIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;
--------- [end] stories
------------------------------------------------------------
-- HOMEPAGE.NR_SRC_STORIES_EXTERNAL
------------------------------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
 	ENTRY_ID, SOURCE, SOURCE_TYPE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_ID, ITEM_NAME, ITEM_URL, ITEM_CREATION_DATE,
	ITEM_UPDATE_DATE, ITEM_TAGS, N_COMMENTS, N_RECOMMANDATIONS, LAST_COMMENT_ID, LAST_DATE_COMMENT, LAST_AUTHOR_COMMENT,
	PREV_COMMENT_ID, PREV_DATE_COMMENT, PREV_AUTHOR_COMMENT, TARGET_SUBJECT_ID, ITEM_ATOM_URL, PREVIEW_IMAGE_URL,
	JSON_META_DATA, ITEM_SCOPE, IS_LAST_COMMENT_PUBLIC, IS_PREV_COMMENT_PUBLIC, ITEM_CORRELATION_ID, ITEM_CORRELATION_NAME,
	LAST_DESC_COMMENT, PREV_DESC_COMMENT, LAST_UPDATE_DATE_COMMENT, PREV_UPDATE_DATE_COMMENT, ITEM_AUTHOR_UUID,
	ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME, BRIEF_DESC 
  FROM HOMEPAGE.NR_ENTRIES_EXTERNAL   E
  WHERE  E.ENTRY_ID NOT IN (SELECT ENTRY_ID FROM HOMEPAGE.NR_ENTRIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_ENTRIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;

-------------------------------------
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
 SELECT 
  	 STORY_ID, EVENT_NAME, SOURCE, CONTAINER_ID, CONTAINER_NAME, CONTAINER_URL, ITEM_NAME, ITEM_URL, ITEM_ATOM_URL,
  	 ITEM_ID, ITEM_CORRELATION_ID, ITEM_TAGS, CREATION_DATE, BRIEF_DESC, ACTOR_UUID, EVENT_RECORD_UUID, TAGS, META_TEMPLATE, 
 	 TEXT_META_TEMPLATE, R_META_TEMPLATE, R_TEXT_META_TEMPLATE, IS_COMMUNITY_STORY, ITEM_CORRELATION_NAME, HAS_ATTACHMENT, 
 	 SOURCE_TYPE, ENTRY_ID, EVENT_TIME, VERB, ACTIVITY_META_DATA_1, ACTIVITY_META_DATA_2, IS_META_DATA_TRUNCATED, 
 	 ITEM_SCOPE, ITEM_UPDATE_DATE, FIRST_RECIPIENT_ID, NUM_RECIPIENTS, PRIMARY_ACTION_URL, SECONDARY_ACTION_URL, 
 	 ITEM_AUTHOR_UUID, ITEM_AUTHOR_DISPLAYNAME, ITEM_CORRELATION_AUTHOR_UUID, ITEM_CORRELATION_AUTHOR_NAME 
  FROM HOMEPAGE.NR_SRC_STORIES_EXTERNAL S
  WHERE S.STORY_ID NOT IN (SELECT STORY_ID FROM HOMEPAGE.NR_STORIES)
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_STORIES' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;
--------- [end] stories










---------------------------------------------------------------------------------
BEGIN TRANSACTION
GO
-------------------------------------------
-- [START] Migrating them from STORIES table (BRIEF_DESC)
--------------------------------------------

--  HOMEPAGE.NR_ENTRIES
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID < '0..f'
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= '0..f' AND HOMEPAGE.NR_ENTRIES.ENTRY_ID < '1..f' 
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= '1..f' AND HOMEPAGE.NR_ENTRIES.ENTRY_ID < '2..f' 
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= '2..f' AND HOMEPAGE.NR_ENTRIES.ENTRY_ID < '3..f'
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= '3..f' AND HOMEPAGE.NR_ENTRIES.ENTRY_ID < '4..f'
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= '4..f' AND HOMEPAGE.NR_ENTRIES.ENTRY_ID < '5..f'
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= '5..f' AND HOMEPAGE.NR_ENTRIES.ENTRY_ID < '6..f'
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= '6..f' AND HOMEPAGE.NR_ENTRIES.ENTRY_ID < '7..f'
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= '7..f' AND HOMEPAGE.NR_ENTRIES.ENTRY_ID < '8..f'
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= '8..f' AND HOMEPAGE.NR_ENTRIES.ENTRY_ID < '9..f'
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= '9..f' AND HOMEPAGE.NR_ENTRIES.ENTRY_ID < 'a..f'
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= 'a..f' AND HOMEPAGE.NR_ENTRIES.ENTRY_ID < 'b..f'
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= 'b..f' AND HOMEPAGE.NR_ENTRIES.ENTRY_ID < 'c..f'
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= 'c..f' AND HOMEPAGE.NR_ENTRIES.ENTRY_ID < 'd..f'
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= 'd..f' AND HOMEPAGE.NR_ENTRIES.ENTRY_ID < 'e..f'
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= 'e..f' AND HOMEPAGE.NR_ENTRIES.ENTRY_ID < 'f..f'
); 
GO
UPDATE HOMEPAGE.NR_ENTRIES  SET BRIEF_DESC = ( 
  			SELECT MAX (BRIEF_DESC) 
  			FROM HOMEPAGE.NR_STORIES STORIES 
  			WHERE HOMEPAGE.NR_ENTRIES.ENTRY_ID = STORIES.ENTRY_ID   AND    HOMEPAGE.NR_ENTRIES.ENTRY_ID >= 'f..f' 
); 
GO

-------------------------------------------
-- [END Migrating them from STORIES table (BRIEF_DESC)
--------------------------------------------


-------------------------------------------------------------------
-- [START] ADDING INDEX FROM TAPSTAGE RALLY
-------------------------------------------------------------------
CREATE INDEX TAB_INST_TAB_ID 
	ON HOMEPAGE.HP_TAB_INST (TAB_ID);
GO	
	
CREATE INDEX BRD_ENTRIES_ITEM
	ON HOMEPAGE.BOARD_ENTRIES (ITEM_ID, SL_IS_DELETED);
GO	
	
CREATE INDEX HP_UI 
	ON HOMEPAGE.HP_UI (LAST_VISIT ASC);
GO
-------------------------------------------------------------------
-- [END] ADDING INDEX FROM TAPSTAGE RALLY
-------------------------------------------------------------------	

-----------------------------------------------------------------------------------------
-- [START] MOVING DATA FROM NR_COMM_STORIES TO NR_COMMUNITIES_READERS
-----------------------------------------------------------------------------------------
--------- [start]  MOVING DATA FROM NR_COMM_STORIES TO NR_COMMUNITIES_READERS
COMMIT;

--------- [end] stories
BEGIN TRANSACTION
GO

CREATE VIEW HOMEPAGE.TMP_VIEW AS (
	SELECT
		COMMUNITY_ID READER_ID, 3 CATEGORY_TYPE, ' ' SOURCE, CONTAINER_ID, ITEM_ID, 
		RESOURCE_TYPE, CREATION_DATE, STORY_ID, SOURCE_TYPE, 0 USE_IN_ROLLUP, 
		0 IS_NETWORK, 0 IS_FOLLOWER, CREATION_DATE EVENT_TIME,
		' ' ROLLUP_ENTRY_ID, COMM_STORY_ID CATEGORY_READER_ID, 1 IS_STORY_COMM, 
		0 IS_BROADCAST, ' ' ORGANIZATION_ID, ' ' ACTOR_UUID	
	FROM HOMEPAGE.NR_COMM_STORIES
);
GO

GRANT DELETE,INSERT,SELECT,UPDATE ON HOMEPAGE.TMP_VIEW TO HOMEPAGEUSER;
GO

COMMIT;

BEGIN TRANSACTION
GO

declare @backup_command varchar(8000), @format_command varchar(8000), @bulk_insert_command varchar(8000) 
declare @format_file varchar(8000), @data_file varchar(8000)
set @format_file = 'C:\format.fmt'
set @data_file = 'C:\data.dat'

declare @in_view varchar(8000), @out_table varchar(8000)
set @in_view = 'HOMEPAGE.HOMEPAGE.TMP_VIEW' -- The view name need also to be specified with the database name and the schema name
set @out_table = 'HOMEPAGE.NR_COMMUNITIES_READERS' -- Schema name and table name

-- create the format file
set @format_command = 'bcp '+@in_view+' format nul -S '+@@servername+' -T -n -f "'+@format_file+'"'
EXEC master..xp_cmdshell @format_command
-- backup the data
set @backup_command = 'bcp '+@in_view+' out "'+@data_file+'" -n -S '+@@servername+' -U HOMEPAGEUSER -P $(password)'
EXEC master..xp_cmdshell @backup_command
--insert back the record
set @bulk_insert_command = 'BULK INSERT '+@out_table+' FROM "'+@data_file+'" WITH (DATAFILETYPE="native", FORMATFILE="'+@format_file+'")'
EXEC (@bulk_insert_command) 
GO

COMMIT;

BEGIN TRANSACTION
GO

DROP VIEW HOMEPAGE.TMP_VIEW;
GO

COMMIT;
--------- [end] MOVING DATA FROM NR_COMM_STORIES TO NR_COMMUNITIES_READERS

---------------------------------------------------------------------------------
BEGIN TRANSACTION
GO

----------------------------------------------------------------------
-- [END] MOVING DATA FROM NR_COMM_STORIES TO NR_COMMUNITIES_READERS
----------------------------------------------------------------------

-----------------------------------------------
--  Recommendations widget is editable  [Work Item 52621]
-----------------------------------------------
UPDATE HOMEPAGE.WIDGET SET WIDGET_SYSTEM = 1 WHERE WIDGET_TITLE = '%widget.sand.recommend.name';
GO

---------------------------------------------------
-- [start] Dropping old STORIES and ENTRIES tables
---------------------------------------------------
DROP TABLE HOMEPAGE.NR_SRC_STORIES_ACT;
GO
DROP TABLE HOMEPAGE.NR_SRC_STORIES_BLG;
GO
DROP TABLE HOMEPAGE.NR_SRC_STORIES_COM;
GO
DROP TABLE HOMEPAGE.NR_SRC_STORIES_WIK;
GO
DROP TABLE HOMEPAGE.NR_SRC_STORIES_PRF;
GO
DROP TABLE HOMEPAGE.NR_SRC_STORIES_HP;
GO
DROP TABLE HOMEPAGE.NR_SRC_STORIES_DGR;
GO
DROP TABLE HOMEPAGE.NR_SRC_STORIES_FILE;
GO
DROP TABLE HOMEPAGE.NR_SRC_STORIES_FRM;
GO
DROP TABLE HOMEPAGE.NR_SRC_STORIES_EXTERNAL;
GO

DROP TABLE HOMEPAGE.NR_ENTRIES_ACT;
GO
DROP TABLE HOMEPAGE.NR_ENTRIES_BLG;
GO
DROP TABLE HOMEPAGE.NR_ENTRIES_COM;
GO
DROP TABLE HOMEPAGE.NR_ENTRIES_WIK;
GO
DROP TABLE HOMEPAGE.NR_ENTRIES_PRF;
GO
DROP TABLE HOMEPAGE.NR_ENTRIES_HP;
GO
DROP TABLE HOMEPAGE.NR_ENTRIES_DGR;
GO
DROP TABLE HOMEPAGE.NR_ENTRIES_FILE;
GO
DROP TABLE HOMEPAGE.NR_ENTRIES_FRM;
GO
DROP TABLE HOMEPAGE.NR_ENTRIES_EXTERNAL;
GO
---------------------------------------------------
-- [end] Dropping old STORIES and ENTRIES tables
---------------------------------------------------