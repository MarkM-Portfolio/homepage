-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                   
-- Copyright IBM Corp. 2007, 2015                                    
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 

-- {COPYRIGHT}

-----------------------------------------------------------------------------------------------
-- START [1\2] BUG: During fixup84.sql we lose data. We need to fix 84 as there is no way to recover the data after
-----------------------------------------------------------------------------------------------

-- Dropping the constraints
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_ACT 	DROP CONSTRAINT FK_ENTRY_ID_ACT;
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_BLG 	DROP CONSTRAINT FK_ENTRY_ID_BLG;
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_COM 	DROP CONSTRAINT FK_ENTRY_ID_COM;
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_WIK 	DROP CONSTRAINT FK_ENTRY_ID_WIK;
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_PRF 	DROP CONSTRAINT FK_ENTRY_ID_PRF;
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_HP 		DROP CONSTRAINT FK_ENTRY_ID_HP;
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_DGR 	DROP CONSTRAINT FK_ENTRY_ID_DGR;
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_FILE 	DROP CONSTRAINT FK_ENTRY_ID_FILE;
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_FRM 	DROP CONSTRAINT FK_ENTRY_ID_FRM;

COMMIT;

UPDATE HOMEPAGE.NR_SRC_STORIES_ACT SET ENTRY_ID = ITEM_ID WHERE ITEM_ID IS NOT NULL;
COMMIT;

UPDATE HOMEPAGE.NR_SRC_STORIES_BLG SET ENTRY_ID = ITEM_ID WHERE ITEM_ID IS NOT NULL;
COMMIT;

UPDATE HOMEPAGE.NR_SRC_STORIES_COM SET ENTRY_ID = ITEM_ID WHERE ITEM_ID IS NOT NULL;
COMMIT;

UPDATE HOMEPAGE.NR_SRC_STORIES_WIK SET ENTRY_ID = ITEM_ID WHERE ITEM_ID IS NOT NULL;
COMMIT;

UPDATE HOMEPAGE.NR_SRC_STORIES_PRF SET ENTRY_ID = ITEM_ID WHERE ITEM_ID IS NOT NULL;
COMMIT;

UPDATE HOMEPAGE.NR_SRC_STORIES_HP SET ENTRY_ID = ITEM_ID WHERE ITEM_ID IS NOT NULL;
COMMIT;

UPDATE HOMEPAGE.NR_SRC_STORIES_DGR SET ENTRY_ID = ITEM_ID WHERE ITEM_ID IS NOT NULL;
COMMIT;

UPDATE HOMEPAGE.NR_SRC_STORIES_FILE SET ENTRY_ID = ITEM_ID WHERE ITEM_ID IS NOT NULL;
COMMIT;

UPDATE HOMEPAGE.NR_SRC_STORIES_FRM SET ENTRY_ID = ITEM_ID WHERE ITEM_ID IS NOT NULL;
COMMIT;

-----------------------------------------------------------------------------------------------
-- END [1\2] BUG: During fixup84.sql we lose data. We need to fix 84 as there is no way to recover the data after
-----------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
-- STARTING DATA MIGRATION FROM THE NR_STORIES TABLE TO THE NR_ENTRIES TABLE
-----------------------------------------------------------------------------------------------
-- 1 NR_ENTRIES_ACT
ALTER TABLE HOMEPAGE.NR_ENTRIES_ACT ADD ITEM_ATOM_URL VARCHAR2(2048);
COMMIT;

INSERT INTO HOMEPAGE.NR_ENTRIES_ACT (
	ENTRY_ID,
	SOURCE,
	SOURCE_TYPE,
	CONTAINER_ID,
	CONTAINER_NAME,
	CONTAINER_URL,
	ITEM_ID,
	ITEM_NAME,
	ITEM_URL,
	CREATION_DATE,
	UPDATE_DATE,
	TAGS,
	N_COMMENTS,
	N_RECCOMANDATIONS,
	N_ATTACHMENTS,
	BRIEF_DESC,
	ITEM_ATOM_URL
)
	SELECT *
	FROM (
		SELECT 	NR_SRC_STORIES_ACT.ITEM_ID ENTRY_ID,
				NR_SRC_STORIES_ACT.SOURCE,
				NR_SRC_STORIES_ACT.SOURCE_TYPE,
				NR_SRC_STORIES_ACT.CONTAINER_ID,
				NR_SRC_STORIES_ACT.CONTAINER_NAME,
				NR_SRC_STORIES_ACT.CONTAINER_URL,
				NR_SRC_STORIES_ACT.ITEM_ID,
				NR_SRC_STORIES_ACT.ITEM_NAME,
				NR_SRC_STORIES_ACT.ITEM_URL,			
				NR_SRC_STORIES_ACT.CREATION_DATE,
				NR_SRC_STORIES_ACT.CREATION_DATE UPDATE_DATE,
				NR_SRC_STORIES_ACT.TAGS,
				NR_SRC_STORIES_ACT.N_COMMENTS,
				NR_SRC_STORIES_ACT.N_RECOMMANDATIONS,
				0 N_ATTACHMENTS, -- N_ATTACHMENTS
				NR_SRC_STORIES_ACT.BRIEF_DESC,
				NR_SRC_STORIES_ACT.ITEM_ATOM_URL
		FROM 	HOMEPAGE.NR_SRC_STORIES_ACT NR_SRC_STORIES_ACT,
			(
				SELECT 	ITEM_ID, MAX(STORY_ID) STORY_ID
				FROM 	HOMEPAGE.NR_SRC_STORIES_ACT
				WHERE 	ENTRY_ID IS NOT NULL
				GROUP	BY ITEM_ID
			) TEMP
		WHERE NR_SRC_STORIES_ACT.STORY_ID = TEMP.STORY_ID
		) TEMP_STORIES 
	WHERE TEMP_STORIES.ENTRY_ID NOT IN (	
									SELECT 	ENTRY_ID
									FROM 	HOMEPAGE.NR_ENTRIES_ACT
								);
COMMIT;


-- 2 NR_ENTRIES_BLG
ALTER TABLE HOMEPAGE.NR_ENTRIES_BLG ADD ITEM_ATOM_URL VARCHAR2(2048);
COMMIT;

INSERT INTO HOMEPAGE.NR_ENTRIES_BLG (
	ENTRY_ID,
	SOURCE,
	SOURCE_TYPE,
	CONTAINER_ID,
	CONTAINER_NAME,
	CONTAINER_URL,
	ITEM_ID,
	ITEM_NAME,
	ITEM_URL,
	CREATION_DATE,
	UPDATE_DATE,
	TAGS,
	N_COMMENTS,
	N_RECCOMANDATIONS,
	N_ATTACHMENTS,
	BRIEF_DESC,
	ITEM_ATOM_URL
)
	SELECT *
	FROM (
		SELECT 	NR_SRC_STORIES_BLG.ITEM_ID ENTRY_ID,
				NR_SRC_STORIES_BLG.SOURCE,
				NR_SRC_STORIES_BLG.SOURCE_TYPE,
				NR_SRC_STORIES_BLG.CONTAINER_ID,
				NR_SRC_STORIES_BLG.CONTAINER_NAME,
				NR_SRC_STORIES_BLG.CONTAINER_URL,
				NR_SRC_STORIES_BLG.ITEM_ID,
				NR_SRC_STORIES_BLG.ITEM_NAME,
				NR_SRC_STORIES_BLG.ITEM_URL,			
				NR_SRC_STORIES_BLG.CREATION_DATE,
				NR_SRC_STORIES_BLG.CREATION_DATE UPDATE_DATE,
				NR_SRC_STORIES_BLG.TAGS,
				NR_SRC_STORIES_BLG.N_COMMENTS,
				NR_SRC_STORIES_BLG.N_RECOMMANDATIONS,
				0 N_ATTACHMENTS, -- N_ATTACHMENTS
				NR_SRC_STORIES_BLG.BRIEF_DESC,
				NR_SRC_STORIES_BLG.ITEM_ATOM_URL
		FROM 	HOMEPAGE.NR_SRC_STORIES_BLG NR_SRC_STORIES_BLG,
			(
				SELECT 	ITEM_ID, MAX(STORY_ID) STORY_ID
				FROM 	HOMEPAGE.NR_SRC_STORIES_BLG
				WHERE 	ENTRY_ID IS NOT NULL
				GROUP	BY ITEM_ID
			) TEMP
		WHERE NR_SRC_STORIES_BLG.STORY_ID = TEMP.STORY_ID
		) TEMP_STORIES 
	WHERE TEMP_STORIES.ENTRY_ID NOT IN (	
									SELECT 	ENTRY_ID
									FROM 	HOMEPAGE.NR_ENTRIES_BLG
								);
COMMIT;

-- 3 HOMEPAGE.NR_ENTRIES_COM
ALTER TABLE HOMEPAGE.NR_ENTRIES_COM ADD ITEM_ATOM_URL VARCHAR2(2048);
COMMIT;

INSERT INTO HOMEPAGE.NR_ENTRIES_COM (
	ENTRY_ID,
	SOURCE,
	SOURCE_TYPE,
	CONTAINER_ID,
	CONTAINER_NAME,
	CONTAINER_URL,
	ITEM_ID,
	ITEM_NAME,
	ITEM_URL,
	CREATION_DATE,
	UPDATE_DATE,
	TAGS,
	N_COMMENTS,
	N_RECCOMANDATIONS,
	N_ATTACHMENTS,
	BRIEF_DESC,
	ITEM_ATOM_URL
)
	SELECT *
	FROM (
		SELECT 	NR_SRC_STORIES_COM.ITEM_ID ENTRY_ID,
				NR_SRC_STORIES_COM.SOURCE,
				NR_SRC_STORIES_COM.SOURCE_TYPE,
				NR_SRC_STORIES_COM.CONTAINER_ID,
				NR_SRC_STORIES_COM.CONTAINER_NAME,
				NR_SRC_STORIES_COM.CONTAINER_URL,
				NR_SRC_STORIES_COM.ITEM_ID,
				NR_SRC_STORIES_COM.ITEM_NAME,
				NR_SRC_STORIES_COM.ITEM_URL,			
				NR_SRC_STORIES_COM.CREATION_DATE,
				NR_SRC_STORIES_COM.CREATION_DATE UPDATE_DATE,
				NR_SRC_STORIES_COM.TAGS,
				NR_SRC_STORIES_COM.N_COMMENTS,
				NR_SRC_STORIES_COM.N_RECOMMANDATIONS,
				0 N_ATTACHMENTS, -- N_ATTACHMENTS
				NR_SRC_STORIES_COM.BRIEF_DESC,
				NR_SRC_STORIES_COM.ITEM_ATOM_URL
		FROM 	HOMEPAGE.NR_SRC_STORIES_COM NR_SRC_STORIES_COM,
			(
				SELECT 	ITEM_ID, MAX(STORY_ID) STORY_ID
				FROM 	HOMEPAGE.NR_SRC_STORIES_COM
				WHERE 	ENTRY_ID IS NOT NULL
				GROUP	BY ITEM_ID
			) TEMP
		WHERE NR_SRC_STORIES_COM.STORY_ID = TEMP.STORY_ID
		) TEMP_STORIES 
	WHERE TEMP_STORIES.ENTRY_ID NOT IN (	
									SELECT 	ENTRY_ID
									FROM 	HOMEPAGE.NR_ENTRIES_COM
								);
COMMIT;

-- 4 NR_ENTRIES_WIK
ALTER TABLE HOMEPAGE.NR_ENTRIES_WIK ADD ITEM_ATOM_URL VARCHAR2(2048);
COMMIT;

INSERT INTO HOMEPAGE.NR_ENTRIES_WIK (
	ENTRY_ID,
	SOURCE,
	SOURCE_TYPE,
	CONTAINER_ID,
	CONTAINER_NAME,
	CONTAINER_URL,
	ITEM_ID,
	ITEM_NAME,
	ITEM_URL,
	CREATION_DATE,
	UPDATE_DATE,
	TAGS,
	N_COMMENTS,
	N_RECCOMANDATIONS,
	N_ATTACHMENTS,
	BRIEF_DESC,
	ITEM_ATOM_URL
)
	SELECT *
	FROM (
		SELECT 	NR_SRC_STORIES_WIK.ITEM_ID ENTRY_ID,
				NR_SRC_STORIES_WIK.SOURCE,
				NR_SRC_STORIES_WIK.SOURCE_TYPE,
				NR_SRC_STORIES_WIK.CONTAINER_ID,
				NR_SRC_STORIES_WIK.CONTAINER_NAME,
				NR_SRC_STORIES_WIK.CONTAINER_URL,
				NR_SRC_STORIES_WIK.ITEM_ID,
				NR_SRC_STORIES_WIK.ITEM_NAME,
				NR_SRC_STORIES_WIK.ITEM_URL,			
				NR_SRC_STORIES_WIK.CREATION_DATE,
				NR_SRC_STORIES_WIK.CREATION_DATE UPDATE_DATE,
				NR_SRC_STORIES_WIK.TAGS,
				NR_SRC_STORIES_WIK.N_COMMENTS,
				NR_SRC_STORIES_WIK.N_RECOMMANDATIONS,
				0 N_ATTACHMENTS, -- N_ATTACHMENTS
				NR_SRC_STORIES_WIK.BRIEF_DESC,
				NR_SRC_STORIES_WIK.ITEM_ATOM_URL
		FROM 	HOMEPAGE.NR_SRC_STORIES_WIK NR_SRC_STORIES_WIK,
			(
				SELECT 	ITEM_ID, MAX(STORY_ID) STORY_ID
				FROM 	HOMEPAGE.NR_SRC_STORIES_WIK
				WHERE 	ENTRY_ID IS NOT NULL
				GROUP	BY ITEM_ID
			) TEMP
		WHERE NR_SRC_STORIES_WIK.STORY_ID = TEMP.STORY_ID
		) TEMP_STORIES 
	WHERE TEMP_STORIES.ENTRY_ID NOT IN (	
									SELECT 	ENTRY_ID
									FROM 	HOMEPAGE.NR_ENTRIES_WIK
								);
COMMIT;

-- 5 NR_ENTRIES_PRF
ALTER TABLE HOMEPAGE.NR_ENTRIES_PRF ADD ITEM_ATOM_URL VARCHAR2(2048);
COMMIT;

INSERT INTO HOMEPAGE.NR_ENTRIES_PRF (
	ENTRY_ID,
	SOURCE,
	SOURCE_TYPE,
	CONTAINER_ID,
	CONTAINER_NAME,
	CONTAINER_URL,
	ITEM_ID,
	ITEM_NAME,
	ITEM_URL,
	CREATION_DATE,
	UPDATE_DATE,
	TAGS,
	N_COMMENTS,
	N_RECCOMANDATIONS,
	N_ATTACHMENTS,
	BRIEF_DESC,
	ITEM_ATOM_URL
)
	SELECT *
	FROM (
		SELECT 	NR_SRC_STORIES_PRF.ITEM_ID ENTRY_ID,
				NR_SRC_STORIES_PRF.SOURCE,
				NR_SRC_STORIES_PRF.SOURCE_TYPE,
				NR_SRC_STORIES_PRF.CONTAINER_ID,
				NR_SRC_STORIES_PRF.CONTAINER_NAME,
				NR_SRC_STORIES_PRF.CONTAINER_URL,
				NR_SRC_STORIES_PRF.ITEM_ID,
				NR_SRC_STORIES_PRF.ITEM_NAME,
				NR_SRC_STORIES_PRF.ITEM_URL,			
				NR_SRC_STORIES_PRF.CREATION_DATE,
				NR_SRC_STORIES_PRF.CREATION_DATE UPDATE_DATE,
				NR_SRC_STORIES_PRF.TAGS,
				NR_SRC_STORIES_PRF.N_COMMENTS,
				NR_SRC_STORIES_PRF.N_RECOMMANDATIONS,
				0 N_ATTACHMENTS, -- N_ATTACHMENTS
				NR_SRC_STORIES_PRF.BRIEF_DESC,
				NR_SRC_STORIES_PRF.ITEM_ATOM_URL
		FROM 	HOMEPAGE.NR_SRC_STORIES_PRF NR_SRC_STORIES_PRF,
			(
				SELECT 	ITEM_ID, MAX(STORY_ID) STORY_ID
				FROM 	HOMEPAGE.NR_SRC_STORIES_PRF
				WHERE 	ENTRY_ID IS NOT NULL
				GROUP	BY ITEM_ID
			) TEMP
		WHERE NR_SRC_STORIES_PRF.STORY_ID = TEMP.STORY_ID
		) TEMP_STORIES 
	WHERE TEMP_STORIES.ENTRY_ID NOT IN (	
									SELECT 	ENTRY_ID
									FROM 	HOMEPAGE.NR_ENTRIES_PRF
								);
COMMIT;

-- 6 NR_ENTRIES_HP
ALTER TABLE HOMEPAGE.NR_ENTRIES_HP ADD ITEM_ATOM_URL VARCHAR2(2048);
COMMIT;

INSERT INTO HOMEPAGE.NR_ENTRIES_HP (
	ENTRY_ID,
	SOURCE,
	SOURCE_TYPE,
	CONTAINER_ID,
	CONTAINER_NAME,
	CONTAINER_URL,
	ITEM_ID,
	ITEM_NAME,
	ITEM_URL,
	CREATION_DATE,
	UPDATE_DATE,
	TAGS,
	N_COMMENTS,
	N_RECCOMANDATIONS,
	N_ATTACHMENTS,
	BRIEF_DESC,
	ITEM_ATOM_URL
)
	SELECT *
	FROM (
		SELECT 	NR_SRC_STORIES_HP.ITEM_ID ENTRY_ID,
				NR_SRC_STORIES_HP.SOURCE,
				NR_SRC_STORIES_HP.SOURCE_TYPE,
				NR_SRC_STORIES_HP.CONTAINER_ID,
				NR_SRC_STORIES_HP.CONTAINER_NAME,
				NR_SRC_STORIES_HP.CONTAINER_URL,
				NR_SRC_STORIES_HP.ITEM_ID,
				NR_SRC_STORIES_HP.ITEM_NAME,
				NR_SRC_STORIES_HP.ITEM_URL,			
				NR_SRC_STORIES_HP.CREATION_DATE,
				NR_SRC_STORIES_HP.CREATION_DATE UPDATE_DATE,
				NR_SRC_STORIES_HP.TAGS,
				NR_SRC_STORIES_HP.N_COMMENTS,
				NR_SRC_STORIES_HP.N_RECOMMANDATIONS,
				0 N_ATTACHMENTS, -- N_ATTACHMENTS
				NR_SRC_STORIES_HP.BRIEF_DESC,
				NR_SRC_STORIES_HP.ITEM_ATOM_URL
		FROM 	HOMEPAGE.NR_SRC_STORIES_HP NR_SRC_STORIES_HP,
			(
				SELECT 	ITEM_ID, MAX(STORY_ID) STORY_ID
				FROM 	HOMEPAGE.NR_SRC_STORIES_HP
				WHERE 	ENTRY_ID IS NOT NULL
				GROUP	BY ITEM_ID
			) TEMP
		WHERE NR_SRC_STORIES_HP.STORY_ID = TEMP.STORY_ID
		) TEMP_STORIES 
	WHERE TEMP_STORIES.ENTRY_ID NOT IN (	
									SELECT 	ENTRY_ID
									FROM 	HOMEPAGE.NR_ENTRIES_HP
								);
COMMIT;

-- 7 NR_ENTRIES_DGR
ALTER TABLE HOMEPAGE.NR_ENTRIES_DGR ADD ITEM_ATOM_URL VARCHAR2(2048);
COMMIT;

INSERT INTO HOMEPAGE.NR_ENTRIES_DGR (
	ENTRY_ID,
	SOURCE,
	SOURCE_TYPE,
	CONTAINER_ID,
	CONTAINER_NAME,
	CONTAINER_URL,
	ITEM_ID,
	ITEM_NAME,
	ITEM_URL,
	CREATION_DATE,
	UPDATE_DATE,
	TAGS,
	N_COMMENTS,
	N_RECCOMANDATIONS,
	N_ATTACHMENTS,
	BRIEF_DESC,
	ITEM_ATOM_URL
)
	SELECT *
	FROM (
		SELECT 	NR_SRC_STORIES_DGR.ITEM_ID ENTRY_ID,
				NR_SRC_STORIES_DGR.SOURCE,
				NR_SRC_STORIES_DGR.SOURCE_TYPE,
				NR_SRC_STORIES_DGR.CONTAINER_ID,
				NR_SRC_STORIES_DGR.CONTAINER_NAME,
				NR_SRC_STORIES_DGR.CONTAINER_URL,
				NR_SRC_STORIES_DGR.ITEM_ID,
				NR_SRC_STORIES_DGR.ITEM_NAME,
				NR_SRC_STORIES_DGR.ITEM_URL,			
				NR_SRC_STORIES_DGR.CREATION_DATE,
				NR_SRC_STORIES_DGR.CREATION_DATE UPDATE_DATE,
				NR_SRC_STORIES_DGR.TAGS,
				NR_SRC_STORIES_DGR.N_COMMENTS,
				NR_SRC_STORIES_DGR.N_RECOMMANDATIONS,
				0 N_ATTACHMENTS, -- N_ATTACHMENTS
				NR_SRC_STORIES_DGR.BRIEF_DESC,
				NR_SRC_STORIES_DGR.ITEM_ATOM_URL
		FROM 	HOMEPAGE.NR_SRC_STORIES_DGR NR_SRC_STORIES_DGR,
			(
				SELECT 	ITEM_ID, MAX(STORY_ID) STORY_ID
				FROM 	HOMEPAGE.NR_SRC_STORIES_DGR
				WHERE 	ENTRY_ID IS NOT NULL
				GROUP	BY ITEM_ID
			) TEMP
		WHERE NR_SRC_STORIES_DGR.STORY_ID = TEMP.STORY_ID
		) TEMP_STORIES 
	WHERE TEMP_STORIES.ENTRY_ID NOT IN (	
									SELECT 	ENTRY_ID
									FROM 	HOMEPAGE.NR_ENTRIES_DGR
								);
COMMIT;

-- 8 NR_ENTRIES_FILE
ALTER TABLE HOMEPAGE.NR_ENTRIES_FILE ADD ITEM_ATOM_URL VARCHAR2(2048);
COMMIT;

INSERT INTO HOMEPAGE.NR_ENTRIES_FILE (
	ENTRY_ID,
	SOURCE,
	SOURCE_TYPE,
	CONTAINER_ID,
	CONTAINER_NAME,
	CONTAINER_URL,
	ITEM_ID,
	ITEM_NAME,
	ITEM_URL,
	CREATION_DATE,
	UPDATE_DATE,
	TAGS,
	N_COMMENTS,
	N_RECCOMANDATIONS,
	N_ATTACHMENTS,
	BRIEF_DESC,
	ITEM_ATOM_URL
)
	SELECT *
	FROM (
		SELECT 	NR_SRC_STORIES_FILE.ITEM_ID ENTRY_ID,
				NR_SRC_STORIES_FILE.SOURCE,
				NR_SRC_STORIES_FILE.SOURCE_TYPE,
				NR_SRC_STORIES_FILE.CONTAINER_ID,
				NR_SRC_STORIES_FILE.CONTAINER_NAME,
				NR_SRC_STORIES_FILE.CONTAINER_URL,
				NR_SRC_STORIES_FILE.ITEM_ID,
				NR_SRC_STORIES_FILE.ITEM_NAME,
				NR_SRC_STORIES_FILE.ITEM_URL,			
				NR_SRC_STORIES_FILE.CREATION_DATE,
				NR_SRC_STORIES_FILE.CREATION_DATE UPDATE_DATE,
				NR_SRC_STORIES_FILE.TAGS,
				NR_SRC_STORIES_FILE.N_COMMENTS,
				NR_SRC_STORIES_FILE.N_RECOMMANDATIONS,
				0 N_ATTACHMENTS, -- N_ATTACHMENTS
				NR_SRC_STORIES_FILE.BRIEF_DESC,
				NR_SRC_STORIES_FILE.ITEM_ATOM_URL
		FROM 	HOMEPAGE.NR_SRC_STORIES_FILE NR_SRC_STORIES_FILE,
			(
				SELECT 	ITEM_ID, MAX(STORY_ID) STORY_ID
				FROM 	HOMEPAGE.NR_SRC_STORIES_FILE
				WHERE 	ENTRY_ID IS NOT NULL
				GROUP	BY ITEM_ID
			) TEMP
		WHERE NR_SRC_STORIES_FILE.STORY_ID = TEMP.STORY_ID
		) TEMP_STORIES 
	WHERE TEMP_STORIES.ENTRY_ID NOT IN (	
									SELECT 	ENTRY_ID
									FROM 	HOMEPAGE.NR_ENTRIES_FILE
								);
COMMIT;

-- 9 NR_ENTRIES_FRM
ALTER TABLE HOMEPAGE.NR_ENTRIES_FRM ADD ITEM_ATOM_URL VARCHAR2(2048);
COMMIT;

INSERT INTO HOMEPAGE.NR_ENTRIES_FRM (
	ENTRY_ID,
	SOURCE,
	SOURCE_TYPE,
	CONTAINER_ID,
	CONTAINER_NAME,
	CONTAINER_URL,
	ITEM_ID,
	ITEM_NAME,
	ITEM_URL,
	CREATION_DATE,
	UPDATE_DATE,
	TAGS,
	N_COMMENTS,
	N_RECCOMANDATIONS,
	N_ATTACHMENTS,
	BRIEF_DESC,
	ITEM_ATOM_URL
)
	SELECT *
	FROM (
		SELECT 	NR_SRC_STORIES_FRM.ITEM_ID ENTRY_ID,
				NR_SRC_STORIES_FRM.SOURCE,
				NR_SRC_STORIES_FRM.SOURCE_TYPE,
				NR_SRC_STORIES_FRM.CONTAINER_ID,
				NR_SRC_STORIES_FRM.CONTAINER_NAME,
				NR_SRC_STORIES_FRM.CONTAINER_URL,
				NR_SRC_STORIES_FRM.ITEM_ID,
				NR_SRC_STORIES_FRM.ITEM_NAME,
				NR_SRC_STORIES_FRM.ITEM_URL,			
				NR_SRC_STORIES_FRM.CREATION_DATE,
				NR_SRC_STORIES_FRM.CREATION_DATE UPDATE_DATE,
				NR_SRC_STORIES_FRM.TAGS,
				NR_SRC_STORIES_FRM.N_COMMENTS,
				NR_SRC_STORIES_FRM.N_RECOMMANDATIONS,
				0 N_ATTACHMENTS, -- N_ATTACHMENTS
				NR_SRC_STORIES_FRM.BRIEF_DESC,
				NR_SRC_STORIES_FRM.ITEM_ATOM_URL
		FROM 	HOMEPAGE.NR_SRC_STORIES_FRM NR_SRC_STORIES_FRM,
			(
				SELECT 	ITEM_ID, MAX(STORY_ID) STORY_ID
				FROM 	HOMEPAGE.NR_SRC_STORIES_FRM
				WHERE 	ENTRY_ID IS NOT NULL
				GROUP	BY ITEM_ID
			) TEMP
		WHERE NR_SRC_STORIES_FRM.STORY_ID = TEMP.STORY_ID
		) TEMP_STORIES 
	WHERE TEMP_STORIES.ENTRY_ID NOT IN (	
									SELECT 	ENTRY_ID
									FROM 	HOMEPAGE.NR_ENTRIES_FRM
								);
COMMIT;

-----------------------------------------------------------------------------------------------
-- START [1\2] BUG: During fixup84.sql we lose data. We need to fix 84 as there is no way to recover the data after
-----------------------------------------------------------------------------------------------
-- Putting back the constraints
-- 1
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_ACT
  	ADD CONSTRAINT FK_ENTRY_ID_ACT FOREIGN KEY (ENTRY_ID)
	REFERENCES HOMEPAGE.NR_ENTRIES_ACT (ENTRY_ID);

COMMIT;	

-- 2
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_BLG
  	ADD CONSTRAINT FK_ENTRY_ID_BLG FOREIGN KEY (ENTRY_ID)
	REFERENCES HOMEPAGE.NR_ENTRIES_BLG (ENTRY_ID);

COMMIT;

-- 3
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_COM
  	ADD CONSTRAINT FK_ENTRY_ID_COM FOREIGN KEY (ENTRY_ID)
	REFERENCES HOMEPAGE.NR_ENTRIES_COM (ENTRY_ID);

COMMIT;

-- 4
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_WIK
  	ADD CONSTRAINT FK_ENTRY_ID_WIK FOREIGN KEY (ENTRY_ID)
	REFERENCES HOMEPAGE.NR_ENTRIES_WIK (ENTRY_ID); 

COMMIT;

-- 5
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_PRF
  	ADD CONSTRAINT FK_ENTRY_ID_PRF FOREIGN KEY (ENTRY_ID)
	REFERENCES HOMEPAGE.NR_ENTRIES_PRF (ENTRY_ID); 

COMMIT;

-- 6
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_HP
  	ADD CONSTRAINT FK_ENTRY_ID_HP FOREIGN KEY (ENTRY_ID)
	REFERENCES HOMEPAGE.NR_ENTRIES_HP (ENTRY_ID);

COMMIT;

-- 7
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_DGR
  	ADD CONSTRAINT FK_ENTRY_ID_DGR FOREIGN KEY (ENTRY_ID)
	REFERENCES HOMEPAGE.NR_ENTRIES_DGR (ENTRY_ID);

COMMIT;

-- 8
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_FILE
  	ADD CONSTRAINT FK_ENTRY_ID_FILE FOREIGN KEY (ENTRY_ID)
	REFERENCES HOMEPAGE.NR_ENTRIES_FILE (ENTRY_ID);

COMMIT;

-- 9
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_FRM
  	ADD CONSTRAINT FK_ENTRY_ID_FRM FOREIGN KEY (ENTRY_ID)
	REFERENCES HOMEPAGE.NR_ENTRIES_FRM (ENTRY_ID);

COMMIT;
-----------------------------------------------------------------------------------------------
-- END [1\2] BUG: During fixup84.sql we lose data. We need to fix 84 as there is no way to recover the data after
-----------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------
-- END DATA MIGRATION
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------

-- DROPPING VIEW NR_ENTRIES 
DROP VIEW HOMEPAGE.NR_ENTRIES; 

--  DROPPING VIEW NR_STORIES
DROP VIEW HOMEPAGE.NR_STORIES;

COMMIT;

-----------------------------------------------------------------------
-- REFACTORING STORIES TABLE
-----------------------------------------------------------------------
-- DROPPING OLD COLUNNS FOR STORY TABLE: ITEM_ID, ITEM_NAME, ITEM_URL, N_COMMENTS, N_RECOMMANDATIONS
-- 1 NR_SRC_STORIES_ACT
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_ACT DROP (ITEM_ID, ITEM_NAME, ITEM_URL, N_COMMENTS, N_RECOMMANDATIONS); 
COMMIT;

--2 NR_SRC_STORIES_BLG
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_BLG DROP (ITEM_ID, ITEM_NAME, ITEM_URL, N_COMMENTS, N_RECOMMANDATIONS); 
COMMIT;

--3 NR_SRC_STORIES_COM
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_COM DROP (ITEM_ID, ITEM_NAME, ITEM_URL, N_COMMENTS, N_RECOMMANDATIONS);
COMMIT;

--4 NR_SRC_STORIES_WIK
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_WIK DROP (ITEM_ID, ITEM_NAME, ITEM_URL, N_COMMENTS, N_RECOMMANDATIONS); 
COMMIT;

--5 NR_SRC_STORIES_PRF
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_PRF DROP (ITEM_ID, ITEM_NAME, ITEM_URL, N_COMMENTS, N_RECOMMANDATIONS);
COMMIT;

--6 NR_SRC_STORIES_HP
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_HP DROP (ITEM_ID, ITEM_NAME, ITEM_URL, N_COMMENTS, N_RECOMMANDATIONS); 
COMMIT;

--7 NR_SRC_STORIES_DGR
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_DGR DROP (ITEM_ID, ITEM_NAME, ITEM_URL, N_COMMENTS, N_RECOMMANDATIONS);
COMMIT;

--8 NR_SRC_STORIES_FILE
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_FILE DROP (ITEM_ID, ITEM_NAME, ITEM_URL, N_COMMENTS, N_RECOMMANDATIONS); 
COMMIT;

--9 NR_SRC_STORIES_FRM
ALTER TABLE HOMEPAGE.NR_SRC_STORIES_FRM DROP (ITEM_ID, ITEM_NAME, ITEM_URL, N_COMMENTS, N_RECOMMANDATIONS);
COMMIT;
--------------------------------------------
--------------------------------------------
--------------------------------------------
--------------------------------------------
-- EMD FIX - ADDING UNIQUE CONSTRAINT
--------------------------------------------
--------------------------------------------
--------------------------------------------
--------------------------------------------
--------------------------------------------

---------------------------------------------------------------------------------------------------------------------------
-- TO REMOVE ALL DUPLICATED RECORDS - WE NEED TO EXECUTE THIS QUERY N_TIME IN A PARTITIONED WAY TO DON'T GET FULL THE LOG.
-- THIS IS THE NOT PARTITIONED QUERIES
---------------------------------------------------------------------------------------------------------------------------
-- Sanitize first the table:
--[old query]
--DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID NOT IN (
--	SELECT TEMP.RESOURCE_PREF_ID
--	FROM (
--		SELECT 	MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE  
--		FROM  	HOMEPAGE.EMD_RESOURCE_PREF
--		GROUP BY 	PERSON_ID, RESOURCE_TYPE
--	)  TEMP
--);
--[old query]

-- delete using 0
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		WHERE RESOURCE_PREF_ID < '0..f'
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE AND
			EMD_RESOURCE_PREF.RESOURCE_PREF_ID < '0..f'			
);

COMMIT;

-- delete using 1
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		WHERE RESOURCE_PREF_ID < '1..f'
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE AND
			EMD_RESOURCE_PREF.RESOURCE_PREF_ID < '1..f'			
);

COMMIT;

-- delete using 2
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		WHERE RESOURCE_PREF_ID < '2..f'
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE AND
			EMD_RESOURCE_PREF.RESOURCE_PREF_ID < '2..f'			
);

COMMIT;

-- delete using 3
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		WHERE RESOURCE_PREF_ID < '3..f'
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE AND
			EMD_RESOURCE_PREF.RESOURCE_PREF_ID < '3..f'			
);

COMMIT;

-- delete using 4
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		WHERE RESOURCE_PREF_ID < '4..f'
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE AND
			EMD_RESOURCE_PREF.RESOURCE_PREF_ID < '4..f'			
);

COMMIT;

-- delete using 5
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		WHERE RESOURCE_PREF_ID < '5..f'
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE AND
			EMD_RESOURCE_PREF.RESOURCE_PREF_ID < '5..f'			
);

COMMIT;

-- delete using 6
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		WHERE RESOURCE_PREF_ID < '6..f'
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE AND
			EMD_RESOURCE_PREF.RESOURCE_PREF_ID < '6..f'			
);

COMMIT;

-- delete using 7
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		WHERE RESOURCE_PREF_ID < '7..f'
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE AND
			EMD_RESOURCE_PREF.RESOURCE_PREF_ID < '7..f'			
);

COMMIT;

-- delete using 8
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		WHERE RESOURCE_PREF_ID < '8..f'
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE AND
			EMD_RESOURCE_PREF.RESOURCE_PREF_ID < '8..f'			
);

COMMIT;

-- delete using 9
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		WHERE RESOURCE_PREF_ID < '9..f'
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE AND
			EMD_RESOURCE_PREF.RESOURCE_PREF_ID < '9..f'			
);

COMMIT;

-- delete using a
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		WHERE RESOURCE_PREF_ID < 'a..f'
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE AND
			EMD_RESOURCE_PREF.RESOURCE_PREF_ID < 'a..f'			
);

COMMIT;

-- delete using b
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		WHERE RESOURCE_PREF_ID < 'b..f'
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE AND
			EMD_RESOURCE_PREF.RESOURCE_PREF_ID < 'b..f'			
);

COMMIT;

-- delete using c
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		WHERE RESOURCE_PREF_ID < 'c..f'
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE AND
			EMD_RESOURCE_PREF.RESOURCE_PREF_ID < 'c..f'			
);

COMMIT;

-- delete using d
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		WHERE RESOURCE_PREF_ID < 'd..f'
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE AND
			EMD_RESOURCE_PREF.RESOURCE_PREF_ID < 'd..f'			
);

COMMIT;

-- delete using e
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		WHERE RESOURCE_PREF_ID < 'e..f'
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE AND
			EMD_RESOURCE_PREF.RESOURCE_PREF_ID < 'e..f'			
);

COMMIT;

-- The last delete all
DELETE FROM HOMEPAGE.EMD_RESOURCE_PREF WHERE RESOURCE_PREF_ID IN (
	select EMD_RESOURCE_PREF.RESOURCE_PREF_ID
	from (
		SELECT MAX(RESOURCE_PREF_ID) RESOURCE_PREF_ID, PERSON_ID, RESOURCE_TYPE 
		FROM HOMEPAGE.EMD_RESOURCE_PREF
		GROUP BY 	PERSON_ID, RESOURCE_TYPE
		) T,
		 HOMEPAGE.EMD_RESOURCE_PREF EMD_RESOURCE_PREF
	where 	EMD_RESOURCE_PREF.RESOURCE_PREF_ID < T.RESOURCE_PREF_ID AND 
			EMD_RESOURCE_PREF.PERSON_ID = T.PERSON_ID AND
			EMD_RESOURCE_PREF.RESOURCE_TYPE = T.RESOURCE_TYPE		
);

-- Add unique constraint:
CREATE UNIQUE INDEX HOMEPAGE.EMD_RESOURCE_PREF_UNQ
	ON HOMEPAGE.EMD_RESOURCE_PREF (PERSON_ID, RESOURCE_TYPE) TABLESPACE "NEWSINDEXTABSPACE";

COMMIT;

---------------------------------------------------------------------------------
-- ADDING QUARANTINE TABLE
---------------------------------------------------------------------------------
CREATE TABLE HOMEPAGE.DELETED_STORIES_QUEUE (
	STORY_ID VARCHAR2(36) NOT NULL,
	SOURCE 	VARCHAR2(36) NOT NULL, -- this is externalized
	SOURCE_TYPE NUMBER(5,0) NOT NULL	
)
TABLESPACE "NEWSREGTABSPACE";

ALTER TABLE HOMEPAGE.DELETED_STORIES_QUEUE 
  	ADD (CONSTRAINT PK_QUARANTINE PRIMARY KEY(STORY_ID) USING INDEX TABLESPACE "NEWSINDEXTABSPACE");

COMMIT;


ALTER TABLE "HOMEPAGE"."DELETED_STORIES_QUEUE" ENABLE ROW MOVEMENT;
