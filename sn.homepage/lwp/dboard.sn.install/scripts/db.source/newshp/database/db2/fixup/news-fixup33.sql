-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                   
-- Copyright IBM Corp. 2007, 2015                                    
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 

-- {COPYRIGHT}

-- 1) UPDATE THE TOP UPDATES TABLE. Adding SOURCE_ID and CATEGORY_TYPE attributes
ALTER TABLE HOMEPAGE.NR_NEWS_TOP_UPDATES
	ADD COLUMN SOURCE_ID VARCHAR(36);

ALTER TABLE HOMEPAGE.NR_NEWS_TOP_UPDATES
	ADD COLUMN CATEGORY_TYPE SMALLINT;

REORG TABLE	HOMEPAGE.NR_NEWS_TOP_UPDATES;
	
-- 2) REMOVE IS_ACL FROM NR_SOURCE TABLE
DROP INDEX HOMEPAGE.NR_SOURCE_IX_UNIQUE;

DROP INDEX HOMEPAGE.NR_SOURCE_CONTAINER_NAME_IDX;

ALTER TABLE HOMEPAGE.NR_SOURCE
DROP COLUMN IS_ACL;

REORG TABLE HOMEPAGE.NR_SOURCE;

CREATE INDEX HOMEPAGE.NR_SOURCE_IX_UNIQUE
	ON HOMEPAGE.NR_SOURCE("SOURCE" ASC, "CONTAINER_ID" ASC, "ENTRY_ID" ASC);

CREATE INDEX HOMEPAGE.NR_SOURCE_CONTAINER_NAME_IDX
  	ON HOMEPAGE.NR_SOURCE(SOURCE ASC, CONTAINER_NAME ASC, ENTRY_ID ASC);

-- 3) UPDATE THE FK FOR SOURCE_ID AND REMOVE NR_SOURCE_WATCHED
-- NR_NEWS_WATCHLIST
DELETE FROM HOMEPAGE.NR_NEWS_WATCHLIST;

ALTER TABLE HOMEPAGE.NR_NEWS_WATCHLIST
DROP FOREIGN KEY "FK_F_WSOURCE_ID";

ALTER TABLE HOMEPAGE.NR_NEWS_WATCHLIST
	ADD CONSTRAINT "FK_F_WSOURCE_ID" FOREIGN KEY ("SOURCE_ID")
	REFERENCES HOMEPAGE.NR_SOURCE("SOURCE_ID");

REORG TABLE HOMEPAGE.NR_NEWS_WATCHLIST;

-- 	NR_FOLLOW
DELETE FROM HOMEPAGE.NR_FOLLOW;

ALTER TABLE HOMEPAGE.NR_FOLLOW
DROP FOREIGN KEY "FK_F_SOURCE_ID";

ALTER TABLE HOMEPAGE.NR_FOLLOW
	ADD CONSTRAINT "FK_F_SOURCE_ID" FOREIGN KEY ("SOURCE_ID")
	REFERENCES HOMEPAGE.NR_SOURCE("SOURCE_ID");

REORG TABLE HOMEPAGE.NR_FOLLOW;

DROP TABLE HOMEPAGE.NR_SOURCE_WATCHED;	

-- 4) ADDING THE TABLE TO MANAGE NEWS STATUS NETWORK

DROP TABLE HOMEPAGE.NR_NEWS_STATUS_NETWORK;

------------------------------------------------
-- NR_NEWS_STATUS_NETWORK
------------------------------------------------
CREATE TABLE HOMEPAGE.NR_NEWS_STATUS_NETWORK (
	NEWS_STATUS_NETWORK_ID VARCHAR(36) NOT NULL,
	READER_ID VARCHAR(36),
	ACTOR_UUID VARCHAR(36) NOT NULL,
	BRIEF_DESC VARCHAR(500),
	ITEM_URL VARCHAR(2048),
	ITEM_ID  VARCHAR(36),
	EVENT_NAME VARCHAR(36),
	TARGET_SUBJECT_ID VARCHAR(36),
	IS_WALL_POST  SMALLINT NOT NULL DEFAULT 0,
	CREATION_DATE TIMESTAMP,
	UPDATE_DATE TIMESTAMP,
	N_COMMENTS SMALLINT NOT NULL DEFAULT 0,
	IS_NETWORK_NEWS SMALLINT NOT NULL DEFAULT 0,
	IS_FOLLOW_NEWS SMALLINT NOT NULL DEFAULT 0
)
IN NEWSTABSPACE;

ALTER TABLE HOMEPAGE.NR_NEWS_STATUS_NETWORK
  	ADD CONSTRAINT "PK_NEWS_STATUS_ID" PRIMARY KEY("NEWS_STATUS_NETWORK_ID");

{DB2_GRANT_START} HOMEPAGE.NR_NEWS_STATUS_NETWORK {DB2_GRANT_STOP}  	    

------------------------------------------------
-- NR_NEWS_STATUS_COMMENT
------------------------------------------------
CREATE TABLE HOMEPAGE.NR_NEWS_STATUS_COMMENT (
	NEWS_STATUS_COMMENT_ID VARCHAR(36) NOT NULL,
	ACTOR_UUID VARCHAR(36) NOT NULL,
	CREATION_DATE TIMESTAMP,
	BRIEF_DESC VARCHAR(500),
	ITEM_ID  VARCHAR(36),
	ITEM_CORRELATION_ID VARCHAR(36),
	ITEM_URL VARCHAR(2048)
)
IN NEWSTABSPACE;

ALTER TABLE HOMEPAGE.NR_NEWS_STATUS_COMMENT
  	ADD CONSTRAINT "PK_NEWS_COMMENT_ID" PRIMARY KEY("NEWS_STATUS_COMMENT_ID");

{DB2_GRANT_START} HOMEPAGE.NR_NEWS_STATUS_COMMENT {DB2_GRANT_STOP}  	    

------------------------------------------------
-- NR_NEWS_STATUS_CONTENT
------------------------------------------------
CREATE TABLE HOMEPAGE.NR_NEWS_STATUS_CONTENT (
	NEWS_STATUS_CONTENT_ID VARCHAR(36) NOT NULL,
	CONTENT BLOB(1M) NOT NULL,
	ITEM_ID  VARCHAR(36)
)
IN NEWSTABSPACE;

ALTER TABLE HOMEPAGE.NR_NEWS_STATUS_CONTENT
  	ADD CONSTRAINT "PK_S_CONTENT_ID" PRIMARY KEY("NEWS_STATUS_CONTENT_ID");    

{DB2_GRANT_START} HOMEPAGE.NR_NEWS_STATUS_CONTENT {DB2_GRANT_STOP} 

------------------------------------------------
-- NR_NEWS_COMMENT_CONTENT
------------------------------------------------
CREATE TABLE HOMEPAGE.NR_NEWS_COMMENT_CONTENT (
	NEWS_COMMENT_CONTENT_ID VARCHAR(36) NOT NULL,
	CONTENT BLOB(1M) NOT NULL,
	NEWS_STATUS_COMMENT_ID  VARCHAR(36)
)
IN NEWSTABSPACE;

ALTER TABLE HOMEPAGE.NR_NEWS_COMMENT_CONTENT
  	ADD CONSTRAINT "PK_C_CONTENT_ID" PRIMARY KEY("NEWS_COMMENT_CONTENT_ID");    

ALTER TABLE HOMEPAGE.NR_NEWS_COMMENT_CONTENT
  	ADD CONSTRAINT "FK_C_COMMENT_ID" FOREIGN KEY ("NEWS_STATUS_COMMENT_ID")
	REFERENCES HOMEPAGE.NR_NEWS_STATUS_COMMENT("NEWS_STATUS_COMMENT_ID");

{DB2_GRANT_START} HOMEPAGE.NR_NEWS_COMMENT_CONTENT {DB2_GRANT_STOP}
	
----------------------------------------------------
----------------------------------------------------
-- MIGRATION
----------------------------------------------------
----------------------------------------------------

-- MIGRATE DATA TO THE FOLLOW TABLE
-- CREATE THE RELETIONSHIP FOR PROFILES SOURCE INTO THE FOLLOW TABLE
--INSERT INTO HOMEPAGE.NR_FOLLOW (
--    FOLLOW_ID,
--    PERSON_ID,
--    SOURCE_ID,
--    CATEGORY_TYPE    
--)
--SELECT  SUBSTR(NR_SUBSCRIPTION.PERSON_ID,1,10) || 
--        SUBSTR(NR_SOURCE.SOURCE_ID,1,10) ||  
--        SUBSTR((SUBSTR((NR_CATEGORY_TYPE.CATEGORY_TYPE_NAME || NR_SUBSCRIPTION.PERSON_ID),2,36)),1,14),
--        NR_SUBSCRIPTION.PERSON_ID,
--        NR_SOURCE.SOURCE_ID,
--		1
--FROM    HOMEPAGE.NR_SUBSCRIPTION NR_SUBSCRIPTION, 
--        HOMEPAGE.NR_SOURCE NR_SOURCE, 
--        HOMEPAGE.NR_CATEGORY_TYPE NR_CATEGORY_TYPE        
--WHERE   NR_SUBSCRIPTION.SOURCE_ID = NR_SOURCE.SOURCE_ID  AND 
--        NR_SUBSCRIPTION.IS_EXPLICIT = 1 AND
--        NR_SUBSCRIPTION.IS_ACTIVE = 1 AND
--        NR_CATEGORY_TYPE.CATEGORY_TYPE = 1 AND -- 1 is profile
--        NR_SOURCE.SOURCE = 'profiles';
--
-- MIGRATE DATA TO THE FOLLOW TABLE
-- CREATE THE RELETIONSHIP FOR TAG SOURCE INTO THE FOLLOW TABLE
--INSERT INTO HOMEPAGE.NR_FOLLOW (
--    FOLLOW_ID,
--    PERSON_ID,
--    SOURCE_ID,
--    CATEGORY_TYPE    
--)
--SELECT  SUBSTR(NR_SUBSCRIPTION.PERSON_ID,1,10) || 
--        SUBSTR(NR_SOURCE.SOURCE_ID,1,10) ||  
--        SUBSTR((SUBSTR((NR_CATEGORY_TYPE.CATEGORY_TYPE_NAME || NR_SUBSCRIPTION.PERSON_ID),2,36)),1,14),
--        NR_SUBSCRIPTION.PERSON_ID,
--        NR_SOURCE.SOURCE_ID,
--		2
--FROM    HOMEPAGE.NR_SUBSCRIPTION NR_SUBSCRIPTION, 
--        HOMEPAGE.NR_SOURCE NR_SOURCE, 
--        HOMEPAGE.NR_CATEGORY_TYPE NR_CATEGORY_TYPE        
--WHERE   NR_SUBSCRIPTION.SOURCE_ID = NR_SOURCE.SOURCE_ID  AND 
--        NR_SUBSCRIPTION.IS_EXPLICIT = 1 AND
--        NR_SUBSCRIPTION.IS_ACTIVE = 1 AND
--        NR_CATEGORY_TYPE.CATEGORY_TYPE = 2 AND -- 2 is tags
--        NR_SOURCE.SOURCE = 'tag';
--
-- POPULATE THE NEW TABLE NR_NEWS_WATCHLIST WHERE WE LINK A STORY TO A SOURCE AND NOT ANYMORE TO A SOURCE_ID
-- INSERTING PROFILES STORIES
-- 1 profile status update
--INSERT INTO HOMEPAGE.NR_NEWS_WATCHLIST 
--    (
--        NEWS_RECORDS_ID,
--        EVENT_NAME,
--        SOURCE_ID,
--        SOURCE,
--        CONTAINER_ID,
--        CONTAINER_NAME,
--        CONTAINER_URL,
--        ENTRY_NAME,
--        ENTRY_URL,
--        ENTRY_ATOM_URL,
--        CREATION_DATE,
--        BRIEF_DESC,
--        IS_BRIEF_DESC_RTL,
--        ACTOR_UUID,
--        EVENT_RECORD_UUID,
--        RELATED_COMM_UUID,
--        RELATED_COMM_NAME,
--        TAGS,
--        META_TEMPLATE,
--        TEXT_META_TEMPLATE,
--        IS_CONTAINER,
--        ITEM_ID,
--        ITEM_CORRELATION_ID,
--        N_COMMENTS,
--        N_RECOMMANDATIONS,
--        GROUP_TYPE,
--        NEWS_STORY_ID
--    )
--SELECT 
--        NR_NEWS_RECORDS.NEWS_RECORDS_ID,
--        NR_NEWS_RECORDS.EVENT_NAME,
--        NR_SOURCE.SOURCE_ID,
--        NR_NEWS_RECORDS.SOURCE,
--        NR_NEWS_RECORDS.CONTAINER_ID,
--        NR_NEWS_RECORDS.CONTAINER_NAME,
--        NR_NEWS_RECORDS.CONTAINER_URL,
--        --NR_NEWS_RECORDS.ENTRY_ID,
--        NR_NEWS_RECORDS.ENTRY_NAME,
--        NR_NEWS_RECORDS.ENTRY_URL,
--        NR_NEWS_RECORDS.ENTRY_ATOM_URL,
--        NR_NEWS_RECORDS.CREATION_DATE,
--        --NR_NEWS_RECORDS.IS_INBOX,
--        --NR_NEWS_RECORDS.IS_SAVED,
--        --NR_NEWS_RECORDS.IS_TOP_STORY,
--        --NR_NEWS_RECORDS.IS_PUBLIC,
--        --NR_NEWS_RECORDS.IS_MAILED,
--        --NR_NEWS_RECORDS.TIME_STAMP,
--        NR_NEWS_RECORDS.BRIEF_DESC,
--        NR_NEWS_RECORDS.IS_BRIEF_DESC_RTL,
--        NR_NEWS_RECORDS.ACTOR_UUID,
--        NR_NEWS_RECORDS.EVENT_RECORD_UUID,
--        NR_NEWS_RECORDS.RELATED_COMM_UUID,
--        NR_NEWS_RECORDS.RELATED_COMM_NAME,
--        NR_NEWS_RECORDS.TAGS,
--        NR_NEWS_RECORDS.META_TEMPLATE,
--        NR_NEWS_RECORDS.TEXT_META_TEMPLATE,
--        NR_NEWS_RECORDS.IS_CONTAINER,
--        NR_NEWS_RECORDS.ITEM_ID,
--        NR_NEWS_RECORDS.ITEM_CORRELATION_ID,
--        0,
--        0,
--        0,
--        NR_NEWS_RECORDS.NEWS_RECORDS_ID
--FROM    HOMEPAGE.NR_NEWS_RECORDS NR_NEWS_RECORDS, HOMEPAGE.NR_SOURCE NR_SOURCE
--WHERE   NR_NEWS_RECORDS.READER_ID IS NULL AND NR_NEWS_RECORDS.ACTOR_UUID IS NULL AND
--        (NR_NEWS_RECORDS.SOURCE='profiles' AND NR_NEWS_RECORDS.IS_CONTAINER = 1 AND NR_NEWS_RECORDS.CONTAINER_ID IS NOT NULL) AND
--        NR_NEWS_RECORDS.CONTAINER_ID = NR_SOURCE.CONTAINER_ID;
--
--COMMIT;
--
-- 2 where actor uuid is specified        
--INSERT INTO HOMEPAGE.NR_NEWS_WATCHLIST 
--    (
--        NEWS_RECORDS_ID,
--        EVENT_NAME,
--        SOURCE_ID,
--        SOURCE,
--        CONTAINER_ID,
--        CONTAINER_NAME,
--        CONTAINER_URL,
--        ENTRY_NAME,
--        ENTRY_URL,
--        ENTRY_ATOM_URL,
--        CREATION_DATE,
--        BRIEF_DESC,
--        IS_BRIEF_DESC_RTL,
--        ACTOR_UUID,
--        EVENT_RECORD_UUID,
--        RELATED_COMM_UUID,
--        RELATED_COMM_NAME,
--        TAGS,
--        META_TEMPLATE,
--        TEXT_META_TEMPLATE,
--        IS_CONTAINER,
--        ITEM_ID,
--        ITEM_CORRELATION_ID,
--        N_COMMENTS,
--        N_RECOMMANDATIONS,
--        GROUP_TYPE,
--        NEWS_STORY_ID
--    )
--SELECT 
--        NR_NEWS_RECORDS.NEWS_RECORDS_ID,
--        NR_NEWS_RECORDS.EVENT_NAME,
--        NR_SOURCE.SOURCE_ID,
--        NR_NEWS_RECORDS.SOURCE,
--        NR_NEWS_RECORDS.CONTAINER_ID,
--        NR_NEWS_RECORDS.CONTAINER_NAME,
--        NR_NEWS_RECORDS.CONTAINER_URL,
--        --NR_NEWS_RECORDS.ENTRY_ID,
--        NR_NEWS_RECORDS.ENTRY_NAME,
--        NR_NEWS_RECORDS.ENTRY_URL,
--        NR_NEWS_RECORDS.ENTRY_ATOM_URL,
--        NR_NEWS_RECORDS.CREATION_DATE,
--        --NR_NEWS_RECORDS.IS_INBOX,
--        --NR_NEWS_RECORDS.IS_SAVED,
--        --NR_NEWS_RECORDS.IS_TOP_STORY,
--        --NR_NEWS_RECORDS.IS_PUBLIC,
--        --NR_NEWS_RECORDS.IS_MAILED,
--        --NR_NEWS_RECORDS.TIME_STAMP,
--        NR_NEWS_RECORDS.BRIEF_DESC,
--        NR_NEWS_RECORDS.IS_BRIEF_DESC_RTL,
--        NR_NEWS_RECORDS.ACTOR_UUID,
--        NR_NEWS_RECORDS.EVENT_RECORD_UUID,
--        NR_NEWS_RECORDS.RELATED_COMM_UUID,
--        NR_NEWS_RECORDS.RELATED_COMM_NAME,
--        NR_NEWS_RECORDS.TAGS,
--        NR_NEWS_RECORDS.META_TEMPLATE,
--        NR_NEWS_RECORDS.TEXT_META_TEMPLATE,
--        NR_NEWS_RECORDS.IS_CONTAINER,
--        NR_NEWS_RECORDS.ITEM_ID,
--        NR_NEWS_RECORDS.ITEM_CORRELATION_ID,
--        0,
--        0,
--        0,
--        NR_NEWS_RECORDS.NEWS_RECORDS_ID
--FROM    HOMEPAGE.NR_NEWS_RECORDS NR_NEWS_RECORDS, HOMEPAGE.NR_SOURCE NR_SOURCE
--WHERE   READER_ID IS NULL AND
--        (NR_NEWS_RECORDS.IS_PUBLIC = 1 AND ACTOR_UUID IS NOT NULL) AND
--        NR_NEWS_RECORDS.ACTOR_UUID = NR_SOURCE.CONTAINER_ID;
--
--COMMIT;
--
-- INSERTING TAGS STORIES
--INSERT INTO HOMEPAGE.NR_NEWS_WATCHLIST 
--    (
--        NEWS_RECORDS_ID,
--        EVENT_NAME,
--        SOURCE_ID,
--        SOURCE,
--        CONTAINER_ID,
--        CONTAINER_NAME,
--        CONTAINER_URL,
--        ENTRY_NAME,
--        ENTRY_URL,
--        ENTRY_ATOM_URL,
--        CREATION_DATE,
--        BRIEF_DESC,
--        IS_BRIEF_DESC_RTL,
--        ACTOR_UUID,
--        EVENT_RECORD_UUID,
--        RELATED_COMM_UUID,
--        RELATED_COMM_NAME,
--        TAGS,
--        META_TEMPLATE,
--        TEXT_META_TEMPLATE,
--        IS_CONTAINER,
--        ITEM_ID,
--        ITEM_CORRELATION_ID,
--        N_COMMENTS,
--        N_RECOMMANDATIONS,
--        GROUP_TYPE,
--        NEWS_STORY_ID
--    )
--SELECT 
--        NR_NEWS_RECORDS.NEWS_RECORDS_ID,
--        NR_NEWS_RECORDS.EVENT_NAME,
--        NR_SOURCE.SOURCE_ID,
--        NR_NEWS_RECORDS.SOURCE,
--        NR_NEWS_RECORDS.CONTAINER_ID,
--        NR_NEWS_RECORDS.CONTAINER_NAME,
--        NR_NEWS_RECORDS.CONTAINER_URL,
--        --NR_NEWS_RECORDS.ENTRY_ID,
--        NR_NEWS_RECORDS.ENTRY_NAME,
--        NR_NEWS_RECORDS.ENTRY_URL,
--        NR_NEWS_RECORDS.ENTRY_ATOM_URL,
--        NR_NEWS_RECORDS.CREATION_DATE,
--        --NR_NEWS_RECORDS.IS_INBOX,
--        --NR_NEWS_RECORDS.IS_SAVED,
--        --NR_NEWS_RECORDS.IS_TOP_STORY,
--        --NR_NEWS_RECORDS.IS_PUBLIC,
--        --NR_NEWS_RECORDS.IS_MAILED,
--        --NR_NEWS_RECORDS.TIME_STAMP,
--        NR_NEWS_RECORDS.BRIEF_DESC,
--        NR_NEWS_RECORDS.IS_BRIEF_DESC_RTL,
--        NR_NEWS_RECORDS.ACTOR_UUID,
--        NR_NEWS_RECORDS.EVENT_RECORD_UUID,
--        NR_NEWS_RECORDS.RELATED_COMM_UUID,
--        NR_NEWS_RECORDS.RELATED_COMM_NAME,
--        NR_NEWS_RECORDS.TAGS,
--        NR_NEWS_RECORDS.META_TEMPLATE,
--        NR_NEWS_RECORDS.TEXT_META_TEMPLATE,
--        NR_NEWS_RECORDS.IS_CONTAINER,
--        NR_NEWS_RECORDS.ITEM_ID,
--        NR_NEWS_RECORDS.ITEM_CORRELATION_ID,
--        0,
--        0,
--        0,
--        NR_NEWS_RECORDS.NEWS_RECORDS_ID
--FROM    HOMEPAGE.NR_NEWS_RECORDS NR_NEWS_RECORDS, HOMEPAGE.NR_SOURCE NR_SOURCE
--WHERE   NR_NEWS_RECORDS.READER_ID IS NULL AND
--        NR_NEWS_RECORDS.IS_CONTAINER = 1 AND
--        NR_NEWS_RECORDS.SOURCE LIKE 'tag%' AND
--        NR_NEWS_RECORDS.CONTAINER_ID = NR_SOURCE.CONTAINER_ID;
--  	
--COMMIT;
