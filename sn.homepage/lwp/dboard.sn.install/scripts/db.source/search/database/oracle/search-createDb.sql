-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                   
-- Copyright IBM Corp. 2007, 2016                                    
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 

-- {COPYRIGHT}

------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
-- START THE DEFINITION FOR THE SEARCH DATABASE
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------
-- SEARCH -  CREATE THE TABLES
----------------------------------------------------------------------------


----------------------------------------
--  SR_TASKDEF
----------------------------------------


CREATE TABLE HOMEPAGE.SR_TASKDEF (
	TASK_ID VARCHAR2(36) NOT NULL,
	TASK_NAME VARCHAR2(256) NOT NULL,
	STARTBY VARCHAR2(256),
	INTERVAL VARCHAR2(256),
	TASK_TYPE VARCHAR2(36) NOT NULL,
	ENABLED NUMBER(5,0) DEFAULT 1 NOT NULL
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_TASKDEF
	 ADD (CONSTRAINT "PK_TASK_ID" PRIMARY KEY ("TASK_ID")
	 USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");

ALTER TABLE HOMEPAGE.SR_TASKDEF
    ADD CONSTRAINT UNIQUE_TASK_NAME UNIQUE ("TASK_NAME");

ALTER TABLE HOMEPAGE.SR_TASKDEF
    ADD CONSTRAINT CHECK_SR_TASKDEF
    CHECK ( (STARTBY IS NOT NULL AND INTERVAL IS NOT NULL) OR (STARTBY IS NULL AND INTERVAL IS NULL) );

ALTER TABLE "HOMEPAGE"."SR_TASKDEF" ENABLE ROW MOVEMENT;

----------------------------------------
--  SR_INDEXINGTASKDEF
----------------------------------------

CREATE TABLE HOMEPAGE.SR_INDEXINGTASKDEF (
	INDEXING_TASK_ID VARCHAR2(36) NOT NULL,
	TASK_ID VARCHAR2(36) NOT NULL,
	INDEXING_TASK_SERVICES VARCHAR2(256) NOT NULL,
	INDEXING_TASK_OPTIMIZE NUMBER(5,0) NOT NULL	
)
TABLESPACE "HOMEPAGEREGTABSPACE";


ALTER TABLE HOMEPAGE.SR_INDEXINGTASKDEF
	ADD (CONSTRAINT "PK_INDEX_TASK_ID" PRIMARY KEY ("INDEXING_TASK_ID")
	USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");
    
ALTER TABLE HOMEPAGE.SR_INDEXINGTASKDEF
	ADD CONSTRAINT UNIQUE_TASK_ID_IND UNIQUE ("TASK_ID");


ALTER TABLE HOMEPAGE.SR_INDEXINGTASKDEF
	ADD CONSTRAINT "FK_INDEX_TASK_ID" FOREIGN KEY ("TASK_ID") 
	REFERENCES HOMEPAGE.SR_TASKDEF("TASK_ID") ON DELETE CASCADE;

ALTER TABLE "HOMEPAGE"."SR_INDEXINGTASKDEF" ENABLE ROW MOVEMENT;

----------------------------------------
--  SR_OPTIMIZETASKDEF
----------------------------------------

CREATE TABLE HOMEPAGE.SR_OPTIMIZETASKDEF (
	OPTIMIZE_TASK_ID VARCHAR2(36) NOT NULL,	
	TASK_ID VARCHAR2(36) NOT NULL	
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_OPTIMIZETASKDEF
	ADD (CONSTRAINT "PK_OPT_TASK_ID" PRIMARY KEY ("OPTIMIZE_TASK_ID")
	USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");

ALTER TABLE HOMEPAGE.SR_OPTIMIZETASKDEF
	ADD CONSTRAINT UNIQUE_TASK_ID_OPT UNIQUE ("TASK_ID");

ALTER TABLE HOMEPAGE.SR_OPTIMIZETASKDEF
	ADD CONSTRAINT "FK_OPT_TASK_ID" FOREIGN KEY ("TASK_ID") 
	REFERENCES  HOMEPAGE.SR_TASKDEF("TASK_ID") ON DELETE CASCADE;
	
ALTER TABLE "HOMEPAGE"."SR_OPTIMIZETASKDEF" ENABLE ROW MOVEMENT;

----------------------------------------
--  SR_FILECONTENTTASKDEF
----------------------------------------

CREATE TABLE HOMEPAGE.SR_FILECONTENTTASKDEF (
	FILECONTENT_TASK_ID VARCHAR2(36) NOT NULL,	
	TASK_ID VARCHAR2(36) NOT NULL,
	FILE_CONTENT_TASK_SERVICES VARCHAR2(256) NOT NULL,
	CONTENT_FAILURES_ONLY NUMBER(5, 0) NOT NULL	
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_FILECONTENTTASKDEF
	ADD (CONSTRAINT "PK_FC_TASK_ID" PRIMARY KEY ("FILECONTENT_TASK_ID")
	USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");	

ALTER TABLE HOMEPAGE.SR_FILECONTENTTASKDEF
	ADD CONSTRAINT "UNIQUE_TASK_ID_FC" UNIQUE ("TASK_ID");
	
ALTER TABLE HOMEPAGE.SR_FILECONTENTTASKDEF
	ADD CONSTRAINT "FK_FC_TASK_ID" FOREIGN KEY ("TASK_ID") 
	REFERENCES  HOMEPAGE.SR_TASKDEF("TASK_ID") ON DELETE CASCADE;

ALTER TABLE "HOMEPAGE"."SR_FILECONTENTTASKDEF" ENABLE ROW MOVEMENT;


----------------------------------------
--  SR_BACKUPTASKDEF
----------------------------------------

CREATE TABLE HOMEPAGE.SR_BACKUPTASKDEF (
	BACKUP_TASK_ID VARCHAR2(36) NOT NULL,	
	TASK_ID VARCHAR2(36) NOT NULL,
	TYPE VARCHAR2(36) NOT NULL,
	SCRIPT VARCHAR2(256)
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_BACKUPTASKDEF
	ADD (CONSTRAINT "PK_BACKUP_TASK_ID" PRIMARY KEY ("BACKUP_TASK_ID")
	USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");	
	
ALTER TABLE HOMEPAGE.SR_BACKUPTASKDEF
	ADD CONSTRAINT "UNIQUE_TASK_ID_BKP" UNIQUE ("TASK_ID");
	
ALTER TABLE HOMEPAGE.SR_BACKUPTASKDEF
	ADD CONSTRAINT "FK_BKUP_TASK_ID" FOREIGN KEY ("TASK_ID") 
	REFERENCES  HOMEPAGE.SR_TASKDEF("TASK_ID") ON DELETE CASCADE;

ALTER TABLE "HOMEPAGE"."SR_BACKUPTASKDEF" ENABLE ROW MOVEMENT;

----------------------------------------
--  SR_SANDTASKDEF
----------------------------------------

CREATE TABLE HOMEPAGE.SR_SANDTASKDEF (
    SAND_TASK_ID VARCHAR2(36) NOT NULL,
    TASK_ID VARCHAR2(36) NOT NULL,
	SAND_TASK_SERVICES VARCHAR2(256) NOT NULL
)
TABLESPACE "HOMEPAGEREGTABSPACE";


ALTER TABLE HOMEPAGE.SR_SANDTASKDEF
	ADD (CONSTRAINT "PK_ST_TASK_ID" PRIMARY KEY ("SAND_TASK_ID")
	USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");	


ALTER TABLE HOMEPAGE.SR_SANDTASKDEF
	ADD CONSTRAINT "UNIQUE_TASK_ID_ST" UNIQUE ("TASK_ID");
	
ALTER TABLE HOMEPAGE.SR_SANDTASKDEF
	ADD CONSTRAINT "FK_ST_TASK_ID" FOREIGN KEY ("TASK_ID") 
	REFERENCES  HOMEPAGE.SR_TASKDEF("TASK_ID") ON DELETE CASCADE;

ALTER TABLE "HOMEPAGE"."SR_SANDTASKDEF" ENABLE ROW MOVEMENT;


----------------------------------------
--  SR_ALLTASKSDEF
----------------------------------------

CREATE VIEW HOMEPAGE.SR_ALLTASKSDEF AS
(
	SELECT 	T1.TASK_ID  		AS	PARENT_TASK_ID,
	T1.TASK_NAME 				AS	PARENT_TASK_NAME,
	T1.INTERVAL 				AS	PARENT_TASK_INTERVAL,
	T1.STARTBY	 				AS	PARENT_TASK_STARTBY,
	T1.TASK_TYPE 				AS	PARENT_TASK_TYPE,
	T1.ENABLED					AS  	PARENT_TASK_ENABLED,
	T2.INDEXING_TASK_SERVICES	AS	INDEXING_TASK_SERVICES,
	T2.INDEXING_TASK_OPTIMIZE	AS	INDEXING_TASK_OPTIMIZE,
	T2.INDEXING_TASK_ID			AS	INDEXING_TASK_ID,
	''							AS	OPTIMIZE_TASK_ID,
	'' 							AS 	FILECONTENT_TASK_ID,
	''							AS				FILE_CONTENT_TASK_SERVICES,
	0							AS 	CONTENT_FAILURES_ONLY,
        ''                  	AS  SAND_TASK_ID,
	''							AS	SAND_TASK_SERVICES,
	'' 							AS 	BACKUP_TASK_ID,
	''							AS	BACKUP_TASK_TYPE,
	''							AS	BACKUP_TASK_SCRIPT,
	T2.INDEXING_TASK_ID			AS	CHILDTASK_PK	
	FROM    HOMEPAGE.SR_TASKDEF T1,HOMEPAGE.SR_INDEXINGTASKDEF T2 
	WHERE T1.TASK_ID=T2.TASK_ID
) 
UNION 
(
	SELECT T3.TASK_ID		AS 	PARENT_TASK_ID,
	T3.TASK_NAME 			AS 	PARENT_TASK_NAME,
	T3.INTERVAL				AS 	PARENT_TASK_INTERVAL,
	T3.STARTBY 				AS	PARENT_TASK_STARTBY,
	T3.TASK_TYPE 			AS 	PARENT_TASK_TYPE,
 	T3.ENABLED 				AS  	PARENT_TASK_ENABLED,
	''						AS 	INDEXING_TASK_SERVICES,
	0						AS	INDEXING_TASK_OPTIMIZE,
	''						AS	INDEXING_TASK_ID,
	T4.OPTIMIZE_TASK_ID 	AS	OPTIMIZE_TASK_ID,
	'' 						AS 	FILECONTENT_TASK_ID,
	''						AS	FILE_CONTENT_TASK_SERVICES,
	0						AS	CONTENT_FAILURES_ONLY,
        ''                 	AS  SAND_TASK_ID,
	''                      AS  SAND_TASK_SERVICES,
	'' 						AS 	BACKUP_TASK_ID,
	''						AS	BACKUP_TASK_TYPE,
	''						AS	BACKUP_TASK_SCRIPT,
	T4.OPTIMIZE_TASK_ID		AS	CHILDTASK_PK
	FROM   HOMEPAGE.SR_TASKDEF T3,HOMEPAGE.SR_OPTIMIZETASKDEF T4
	WHERE  T3.TASK_ID=T4.TASK_ID
)
UNION 
(
	SELECT T5.TASK_ID				AS	PARENT_TASK_ID,
	T5.TASK_NAME 					AS	PARENT_TASK_NAME,
	T5.INTERVAL						AS	PARENT_TASK_INTERVAL,
	T5.STARTBY 						AS	PARENT_TASK_STARTBY,
	T5.TASK_TYPE 					AS	PARENT_TASK_TYPE,
 	T5.ENABLED 						AS	PARENT_TASK_ENABLED,
	''								AS	INDEXING_TASK_SERVICES,
	0								AS	INDEXING_TASK_OPTIMIZE,
	''								AS	INDEXING_TASK_ID,
	''								AS	OPTIMIZE_TASK_ID,
	T6.FILECONTENT_TASK_ID 			AS	FILECONTENT_TASK_ID,
	T6.FILE_CONTENT_TASK_SERVICES	AS	FILE_CONTENT_TASK_SERVICES,
	T6.CONTENT_FAILURES_ONLY		AS	CONTENT_FAILURES_ONLY,
        ''                  		AS  SAND_TASK_ID,
	''                      		AS  SAND_TASK_SERVICES,
	'' 								AS 	BACKUP_TASK_ID,
	''								AS	BACKUP_TASK_TYPE,
	''								AS	BACKUP_TASK_SCRIPT,
	T6.FILECONTENT_TASK_ID			AS	CHILDTASK_PK
	FROM   HOMEPAGE.SR_TASKDEF T5,HOMEPAGE.SR_FILECONTENTTASKDEF T6
	WHERE  T5.TASK_ID=T6.TASK_ID
)
UNION 
(
	SELECT T7.TASK_ID		AS 	PARENT_TASK_ID,
	T7.TASK_NAME 			AS 	PARENT_TASK_NAME,
	T7.INTERVAL				AS 	PARENT_TASK_INTERVAL,
	T7.STARTBY 				AS	PARENT_TASK_STARTBY,
	T7.TASK_TYPE 			AS 	PARENT_TASK_TYPE,
 	T7.ENABLED 				AS	PARENT_TASK_ENABLED,
	''						AS 	INDEXING_TASK_SERVICES,
	0						AS	INDEXING_TASK_OPTIMIZE,
	''						AS	INDEXING_TASK_ID,
	''						AS	OPTIMIZE_TASK_ID,
	''		 				AS 	FILECONTENT_TASK_ID,
	''						AS	FILE_CONTENT_TASK_SERVICES,
	0						AS	CONTENT_FAILURES_ONLY,
	''                  	AS  SAND_TASK_ID,
	''                      AS  SAND_TASK_SERVICES,
	T8.BACKUP_TASK_ID		AS 	BACKUP_TASK_ID,
	T8.TYPE					AS	BACKUP_TASK_TYPE,
	T8.SCRIPT				AS	BACKUP_TASK_SCRIPT,
	T8.BACKUP_TASK_ID		AS	CHILDTASK_PK
	FROM   HOMEPAGE.SR_TASKDEF T7,HOMEPAGE.SR_BACKUPTASKDEF T8
	WHERE  T7.TASK_ID=T8.TASK_ID			 		
)UNION
(
        SELECT T9.TASK_ID              AS   PARENT_TASK_ID,
        T9.TASK_NAME                   AS   PARENT_TASK_NAME,
        T9.INTERVAL                    AS   PARENT_TASK_INTERVAL,
        T9.STARTBY                     AS   PARENT_TASK_STARTBY,
        T9.TASK_TYPE                   AS   PARENT_TASK_TYPE,
        T9.ENABLED                     AS   PARENT_TASK_ENABLED,
        ''                             AS   INDEXING_TASK_SERVICES,
        0                              AS   INDEXING_TASK_OPTIMIZE,
        ''                             AS   INDEXING_TASK_ID,
        ''                             AS   OPTIMIZE_TASK_ID,
        ''                             AS   FILECONTENT_TASK_ID,
        ''                             AS   FILE_CONTENT_TASK_SERVICES,
        0                              AS   CONTENT_FAILURES_ONLY,
        T10.SAND_TASK_ID               AS   SAND_TASK_ID,
		T10.SAND_TASK_SERVICES		   AS	SAND_TASK_SERVICES,
        ''                             AS   BACKUP_TASK_ID,
        ''                             AS   BACKUP_TASK_TYPE,
        ''                             AS   BACKUP_TASK_SCRIPT,
        T10.SAND_TASK_ID               AS   CHILDTASK_PK
        FROM   HOMEPAGE.SR_TASKDEF T9,HOMEPAGE.SR_SANDTASKDEF T10
        WHERE  T9.TASK_ID=T10.TASK_ID
);

----------------------------------------
--  SR_FILESCONTENT
----------------------------------------


CREATE TABLE HOMEPAGE.SR_FILESCONTENT (
	FILESCONTENT_ID VARCHAR2(36) NOT NULL,
	URL VARCHAR2(256) NOT NULL,
	COMPONENT_UUID VARCHAR2(36) NOT NULL,
	COMPONENT VARCHAR2(36) NOT NULL,
	CREATION_DATE TIMESTAMP NOT NULL,
	LAST_MODIFIED_DATE TIMESTAMP NOT NULL,
	LAST_ACCESSED_DATE TIMESTAMP NOT NULL,
	STATUS NUMBER(5,0) NOT NULL,
	FILE_SIZE NUMBER(19 ,0) NOT NULL,
	CONTENT_SIZE NUMBER(19 ,0) NOT NULL,
	INPUT_MIME_TYPE VARCHAR2(256) NOT NULL,
	CLAIMED NUMBER(5,0) DEFAULT 0 NOT NULL,
	CLAIMED_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,	
	FS_LOCAL_PATH VARCHAR2(256) NOT NULL,
	PROCESSOR VARCHAR2(36),
 	PROCESSOR_STATE BLOB,
 	CONTENT_LOCATION VARCHAR2(256) NOT NULL,
	IS_READY NUMBER(5,0) DEFAULT 0 NOT NULL,
	VERSION VARCHAR2(36)
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_FILESCONTENT
	ADD (CONSTRAINT "PK_FILESCONTENT_ID" PRIMARY KEY ("FILESCONTENT_ID")
	USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");	

ALTER TABLE HOMEPAGE.SR_FILESCONTENT
	ADD CONSTRAINT UNIQUE_COMP_UUID UNIQUE ("COMPONENT_UUID","COMPONENT");

CREATE INDEX "HOMEPAGE"."SR_FILESCONTENT_STATUS_IDX" 
	ON HOMEPAGE.SR_FILESCONTENT(STATUS) TABLESPACE "HOMEPAGEINDEXTABSPACE"; 
	
CREATE INDEX "HOMEPAGE"."SR_FILESCONTENT_VERSION_IDX" 
	ON HOMEPAGE.SR_FILESCONTENT(VERSION) TABLESPACE "HOMEPAGEINDEXTABSPACE"; 	
 
ALTER TABLE "HOMEPAGE"."SR_FILESCONTENT" ENABLE ROW MOVEMENT;

----------------------------------------
--  SR_MIGTASKDEFINFO
----------------------------------------

CREATE TABLE HOMEPAGE.SR_MIGTASKDEFINFO (
	MIGTASKDEFINFO_ID VARCHAR2(36) NOT NULL,
	NUM_TASKS_MIG NUMBER(10,0) DEFAULT 1 NOT NULL  
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_MIGTASKDEFINFO
	ADD (CONSTRAINT "PK_MIGTASKDEF_ID" PRIMARY KEY("MIGTASKDEFINFO_ID"));

ALTER TABLE "HOMEPAGE"."SR_MIGTASKDEFINFO" ENABLE ROW MOVEMENT;


----------------------------------------
--  SR_INDEX_MANAGEMENT
----------------------------------------

CREATE TABLE HOMEPAGE.SR_INDEX_MANAGEMENT (
	NODE_ID VARCHAR2(256) NOT NULL,
	LAST_CRAWLING_VERSION NUMBER(19, 0) NOT NULL,
	OUT_OF_DATE NUMBER(5, 0) DEFAULT 0 NOT NULL,
	OUT_OF_SYNC NUMBER(5, 0) DEFAULT 0 NOT NULL,
	INDEXER  NUMBER(5, 0) DEFAULT 1 NOT NULL
)
TABLESPACE "HOMEPAGEREGTABSPACE";


ALTER TABLE HOMEPAGE.SR_INDEX_MANAGEMENT
	ADD (CONSTRAINT "PK_INDEX_MGMT_ID" PRIMARY KEY ("NODE_ID"));

ALTER TABLE "HOMEPAGE"."SR_INDEX_MANAGEMENT" ENABLE ROW MOVEMENT;


----------------------------------------
--  SR_RESUME_TOKENS
----------------------------------------

CREATE TABLE HOMEPAGE.SR_RESUME_TOKENS (
	TOKEN_ID VARCHAR2(36) NOT NULL,
	NODE_ID VARCHAR2(256) NOT NULL,
	TOKEN VARCHAR2(256),
	SERVICE VARCHAR2(36) NOT NULL
)
TABLESPACE "HOMEPAGEREGTABSPACE";

	
ALTER TABLE HOMEPAGE.SR_RESUME_TOKENS
	ADD (CONSTRAINT "PK_TOKEN_ID" PRIMARY KEY ("TOKEN_ID")
	USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");	

ALTER TABLE HOMEPAGE.SR_RESUME_TOKENS
	ADD CONSTRAINT "FK_RT_IDX_MGMT_ID" FOREIGN KEY ("NODE_ID")
	REFERENCES HOMEPAGE.SR_INDEX_MANAGEMENT("NODE_ID") ON DELETE CASCADE;

ALTER TABLE "HOMEPAGE"."SR_RESUME_TOKENS" ENABLE ROW MOVEMENT;
	

----------------------------------------
--  SR_INDEX_DOCS
----------------------------------------
CREATE TABLE HOMEPAGE.SR_INDEX_DOCS(
	DOCUMENT_ID VARCHAR2(36) NOT NULL,
	DOCUMENT BLOB NOT NULL,
	CRAWLING_VERSION NUMBER(19, 0) NOT NULL,
	ACTION NUMBER(5, 0) NOT NULL,
	UPDATE_TIME  TIMESTAMP NOT NULL,
	RESUME_POINT VARCHAR2(256),
	SERVICE VARCHAR2(36) NOT NULL,
	FILES_REF_ID VARCHAR(36),
	ATOM_ID  VARCHAR2(256)
)
TABLESPACE "HOMEPAGEREGTABSPACE";


ALTER TABLE HOMEPAGE.SR_INDEX_DOCS
	ADD (CONSTRAINT "PK_INDEX_DOCS_ID" PRIMARY KEY ("DOCUMENT_ID")
	USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");	

CREATE INDEX HOMEPAGE.SR_INDEX_CRAWL_SRV_ACT_IDX 
	ON HOMEPAGE.SR_INDEX_DOCS (CRAWLING_VERSION, SERVICE, ACTION) TABLESPACE "HOMEPAGEINDEXTABSPACE";

CREATE INDEX HOMEPAGE.SR_INDEX_DOCS_RPS_IDX
    ON HOMEPAGE.SR_INDEX_DOCS (RESUME_POINT,SERVICE) TABLESPACE "HOMEPAGEINDEXTABSPACE";	   
	
CREATE INDEX HOMEPAGE.SR_INDEX_DOCS_ACT_IDX
	ON HOMEPAGE.SR_INDEX_DOCS(ACTION) TABLESPACE "HOMEPAGEINDEXTABSPACE";
	
CREATE INDEX HOMEPAGE.SR_INDEX_DOCS_ACS_IDX
	ON HOMEPAGE.SR_INDEX_DOCS(SERVICE,ATOM_ID,CRAWLING_VERSION) TABLESPACE "HOMEPAGEINDEXTABSPACE";
	
CREATE INDEX HOMEPAGE.SR_INDEX_DOCS_FRID_IDX 
	ON  HOMEPAGE.SR_INDEX_DOCS(FILES_REF_ID ASC, SERVICE ASC, UPDATE_TIME DESC) TABLESPACE "HOMEPAGEINDEXTABSPACE";

--40269: PERF, homepage db,  this read sql needs index on sr_index_docs
CREATE INDEX HOMEPAGE.SR_INDEX_DOCS_LLT4_IDX ON HOMEPAGE.SR_INDEX_DOCS(UPDATE_TIME ASC,ACTION DESC,CRAWLING_VERSION,SERVICE) TABLESPACE "HOMEPAGEINDEXTABSPACE";

--Defect 77766: Search slow query
CREATE INDEX HOMEPAGE.SR_INDEX_DOCS_SU_IDX ON  HOMEPAGE.SR_INDEX_DOCS(SERVICE,UPDATE_TIME) TABLESPACE "HOMEPAGEINDEXTABSPACE";

--SmartCloud Defect 96370
CREATE INDEX HOMEPAGE.SR_INDEX_DOCS_TAW_IDX ON  HOMEPAGE.SR_INDEX_DOCS(UPDATE_TIME ASC,DOCUMENT_ID ASC,CRAWLING_VERSION ASC) TABLESPACE "HOMEPAGEINDEXTABSPACE";

CREATE INDEX HOMEPAGE.SR_INDEX_DOCS_SUDCRA_IDX
	ON HOMEPAGE.SR_INDEX_DOCS (SERVICE ASC, UPDATE_TIME ASC, DOCUMENT_ID ASC, CRAWLING_VERSION ASC, RESUME_POINT ASC, ACTION ASC) TABLESPACE "HOMEPAGEINDEXTABSPACE";
	
ALTER TABLE HOMEPAGE.SR_INDEX_DOCS 
	ADD CONSTRAINT "ID_ACT_CHECK"
	CHECK (ACTION >=0 AND ACTION < 4);	
	
ALTER TABLE HOMEPAGE.SR_INDEX_DOCS 
	ADD CONSTRAINT "IGNORE_ACT_CHECK"
	CHECK (ACTION <> 3 OR RESUME_POINT IS NULL); 

ALTER TABLE "HOMEPAGE"."SR_INDEX_DOCS" ENABLE ROW MOVEMENT;


----------------------------------------
--  SR_FEEDBACK
----------------------------------------

CREATE TABLE HOMEPAGE.SR_FEEDBACK (
	ID VARCHAR2(36) NOT NULL,
	PERSON_ID  VARCHAR2(36) NOT NULL,
	CLIENT_ID VARCHAR2(256) NOT NULL,
	ACTION VARCHAR2(256) NOT NULL,
	FEEDBACK_TIME	TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL ,
	ITEM_ID  VARCHAR2(256) NOT NULL 
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_FEEDBACK
	ADD ( CONSTRAINT "PK_FEEDBACK_ID" PRIMARY KEY ("ID") 
	USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");	
	
ALTER TABLE HOMEPAGE.SR_FEEDBACK
	ADD CONSTRAINT "FK_SRFB_PERSON_ID" FOREIGN KEY ("PERSON_ID")
	REFERENCES HOMEPAGE.PERSON("PERSON_ID");
	
CREATE INDEX "HOMEPAGE"."SR_FEEDBACK_CLIENT_IDX"
		ON HOMEPAGE.SR_FEEDBACK (CLIENT_ID) TABLESPACE "HOMEPAGEINDEXTABSPACE";   
		
CREATE INDEX "HOMEPAGE"."SR_FEEDBACK_PERSON_IDX" 
		ON  HOMEPAGE.SR_FEEDBACK(PERSON_ID) TABLESPACE "HOMEPAGEINDEXTABSPACE";
COMMIT;		

----------------------------------------
--  SR_FEEDBACK_CONTEXT
----------------------------------------

CREATE TABLE HOMEPAGE.SR_FEEDBACK_CONTEXT (
	CONTEXT_ID VARCHAR2(36) NOT NULL,
	ID VARCHAR2(36) NOT NULL,
	TYPE  VARCHAR2(256) NOT NULL,
	TYPE_VALUE VARCHAR2(256) NOT NULL,
	WEIGHT VARCHAR2(256) NOT NULL
)
TABLESPACE "HOMEPAGEREGTABSPACE";


ALTER TABLE HOMEPAGE.SR_FEEDBACK_CONTEXT
	ADD ( CONSTRAINT "PK_FBK_CTXT_ID" PRIMARY KEY ("CONTEXT_ID")
	USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");	


ALTER TABLE HOMEPAGE.SR_FEEDBACK_CONTEXT
	ADD CONSTRAINT "FK_FBK_CTXT_ID" FOREIGN KEY ("ID")
	REFERENCES HOMEPAGE.SR_FEEDBACK("ID") ON DELETE CASCADE;

ALTER TABLE "HOMEPAGE"."SR_FEEDBACK_CONTEXT" ENABLE ROW MOVEMENT;

----------------------------------------
--  SR_FEEDBACK_PARAMETERS
----------------------------------------

CREATE TABLE HOMEPAGE.SR_FEEDBACK_PARAMETERS (
	PARAMETERS_ID VARCHAR2(36) NOT NULL,
	ID VARCHAR2(36) NOT NULL,
	PARAM  VARCHAR2(256) NOT NULL,
	PARAM_VALUE VARCHAR2(256) NOT NULL
)
TABLESPACE "HOMEPAGEREGTABSPACE";
	
ALTER TABLE HOMEPAGE.SR_FEEDBACK_PARAMETERS
	ADD ( CONSTRAINT "PK_FBK_PARAMS_ID" PRIMARY KEY ("PARAMETERS_ID")
	USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");	
	
ALTER TABLE HOMEPAGE.SR_FEEDBACK_PARAMETERS
	ADD CONSTRAINT "FK_FBK_PARAMS_ID" FOREIGN KEY ("ID")
	REFERENCES HOMEPAGE.SR_FEEDBACK("ID") ON DELETE CASCADE;

ALTER TABLE "HOMEPAGE"."SR_FEEDBACK_PARAMETERS" ENABLE ROW MOVEMENT;

----------------------------------------
--  SR_STATS
----------------------------------------

CREATE TABLE HOMEPAGE.SR_STATS(
	STAT_ID		VARCHAR2(36) NOT NULL,
	STAT_KEY 	VARCHAR2(256) NOT NULL,
	STAT_TYPE	NUMBER(5,0) NOT NULL,
	UPDATED		TIMESTAMP NOT NULL
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_STATS
	ADD ( CONSTRAINT "PK_SR_STAT_ID" PRIMARY KEY ("STAT_ID")
	USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");	

ALTER TABLE HOMEPAGE.SR_STATS
	ADD CONSTRAINT "UNIQUE_STAT_KEY" UNIQUE ("STAT_KEY");

ALTER TABLE "HOMEPAGE"."SR_STATS" ENABLE ROW MOVEMENT;

----------------------------------------
--  SR_STRING_STATS
----------------------------------------

CREATE TABLE HOMEPAGE.SR_STRING_STATS(
	STRING_STAT_ID		VARCHAR2(36) NOT NULL,
	STAT_ID				VARCHAR2(36) NOT NULL,
	STAT_VALUE			VARCHAR2(256)  NOT NULL
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_STRING_STATS
	ADD ( CONSTRAINT "PK_STR_STAT_ID" PRIMARY KEY ("STRING_STAT_ID")
	USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");	

ALTER TABLE HOMEPAGE.SR_STRING_STATS
	ADD CONSTRAINT "FK_STR_STAT_ID" FOREIGN KEY ("STAT_ID")
	REFERENCES HOMEPAGE.SR_STATS("STAT_ID");

CREATE INDEX HOMEPAGE.SR_STRING_STAT_IDX ON HOMEPAGE.SR_STRING_STATS(STAT_ID) TABLESPACE "HOMEPAGEINDEXTABSPACE";

ALTER TABLE "HOMEPAGE"."SR_STRING_STATS" ENABLE ROW MOVEMENT;

----------------------------------------
--  SR_NUMBER_STATS
----------------------------------------

CREATE TABLE HOMEPAGE.SR_NUMBER_STATS(
	NUMBER_STAT_ID		VARCHAR2(36) NOT NULL,
	STAT_ID				VARCHAR2(36) NOT NULL,
	STAT_VALUE			NUMBER(19 ,0) NOT NULL
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_NUMBER_STATS
	ADD ( CONSTRAINT "PK_NUM_STAT_ID" PRIMARY KEY ("NUMBER_STAT_ID")
	USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");	


ALTER TABLE HOMEPAGE.SR_NUMBER_STATS
	ADD CONSTRAINT "FK_NUM_STAT_ID" FOREIGN KEY ("STAT_ID")
	REFERENCES HOMEPAGE.SR_STATS("STAT_ID");
	
CREATE INDEX HOMEPAGE.SR_NUMBER_STAT_IDX ON HOMEPAGE.SR_NUMBER_STATS(STAT_ID) TABLESPACE "HOMEPAGEINDEXTABSPACE";	


ALTER TABLE "HOMEPAGE"."SR_NUMBER_STATS" ENABLE ROW MOVEMENT;

----------------------------------------
--  SR_TIMER_STATS
----------------------------------------

CREATE TABLE HOMEPAGE.SR_TIMER_STATS(
	TIMER_STAT_ID		VARCHAR2(36) NOT NULL,
	STAT_ID				VARCHAR2(36) NOT NULL,
	AVERAGE				NUMBER(19 ,0) NOT NULL,
	MINIMUM				NUMBER(19 ,0) NOT NULL,
	MAXIMUM				NUMBER(19 ,0) NOT NULL,
	COUNTER				NUMBER(10 ,0)	NOT NULL
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_TIMER_STATS
	ADD ( CONSTRAINT "PK_TMR_STAT_ID" PRIMARY KEY ("TIMER_STAT_ID")
	USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");	
	
ALTER TABLE HOMEPAGE.SR_TIMER_STATS
	ADD CONSTRAINT "FK_TMR_STAT_ID" FOREIGN KEY ("STAT_ID")
	REFERENCES HOMEPAGE.SR_STATS("STAT_ID");

CREATE INDEX HOMEPAGE.SR_TIMER_STAT_IDX ON HOMEPAGE.SR_TIMER_STATS(STAT_ID) TABLESPACE "HOMEPAGEINDEXTABSPACE";

ALTER TABLE "HOMEPAGE"."SR_TIMER_STATS" ENABLE ROW MOVEMENT;

--START 38374: DAO Layer Changes for Dynamic Global Properties for SAND 

----------------------------------------
--  SR_GLOBAL_SAND_PROPS
----------------------------------------

CREATE TABLE HOMEPAGE.SR_GLOBAL_SAND_PROPS(
	GSP_ID			VARCHAR2(36) NOT NULL,
	GSP_NAME		VARCHAR2(36) NOT NULL,
	GSP_VALUE		VARCHAR2(36) NOT NULL,
	GSP_TYPE        NUMBER(5,0) NOT NULL
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_GLOBAL_SAND_PROPS
	 ADD (CONSTRAINT "PK_GSP_ID" PRIMARY KEY ("GSP_ID")
	 USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");

ALTER TABLE HOMEPAGE.SR_GLOBAL_SAND_PROPS
    ADD CONSTRAINT UNIQUE_GSP_NAME UNIQUE ("GSP_NAME");

ALTER TABLE HOMEPAGE.SR_GLOBAL_SAND_PROPS		
	ADD CONSTRAINT GSP_TYPE_CHECK
	CHECK (GSP_TYPE >=0 AND GSP_TYPE < 4);

ALTER TABLE "HOMEPAGE"."SR_GLOBAL_SAND_PROPS" ENABLE ROW MOVEMENT;

--END 38374: DAO Layer Changes for Dynamic Global Properties for SAND 


--START 74517: Create script that creates DB table that hold document type labels

----------------------------------------
--  SR_ECM_DOCUMENT_TYPE_LABELS
----------------------------------------

CREATE TABLE HOMEPAGE.SR_ECM_DOCUMENT_TYPE_LABELS(
        LABEL_ID VARCHAR2(36) NOT NULL,
        LABEL_NAME VARCHAR2(256) NOT NULL,
        DOCUMENT_TYPES CLOB NOT NULL,
        UPDATE_TIME  TIMESTAMP NOT NULL
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_ECM_DOCUMENT_TYPE_LABELS
         ADD (CONSTRAINT "PK_LABEL_ID" PRIMARY KEY ("LABEL_ID")
         USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");

ALTER TABLE HOMEPAGE.SR_ECM_DOCUMENT_TYPE_LABELS
    ADD CONSTRAINT UNIQUE_LABEL_NAME UNIQUE ("LABEL_NAME");


--END 74517: Create script that creates DB table that hold document type labels

--START Task 78083 Prepare DB table for storing post filtering service.

----------------------------------------
--  SR_POST_FILTERING_SERVICE
----------------------------------------

CREATE TABLE HOMEPAGE.SR_POST_FILTERING_SERVICE(
    PFS_ID VARCHAR2(36) NOT NULL,
    SERVICE_NAME VARCHAR2(36) NOT NULL,
    URL VARCHAR2(2048) NOT NULL
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_POST_FILTERING_SERVICE
         ADD (CONSTRAINT "PK_PFS_ID" PRIMARY KEY ("PFS_ID")
         USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");


ALTER TABLE HOMEPAGE.SR_POST_FILTERING_SERVICE
    ADD CONSTRAINT UNIQUE_SERVICE_NAME UNIQUE ("SERVICE_NAME");

--END Task 78083 Prepare DB table for storing post filtering service.


--START 74517: Create script that creates DB table that hold document type labels

----------------------------------------
--  SR_ECM_DOCUMENT_TYPE_PROPS
----------------------------------------


CREATE TABLE HOMEPAGE.SR_ECM_DOCUMENT_TYPE_PROPS(
	PROPERTIES_ID VARCHAR2(36) NOT NULL,
	DOCUMENT_TYPE_ID VARCHAR2(256) NOT NULL,
	LOCALE VARCHAR2(10) NOT NULL,	
	PROPERTIES CLOB NOT NULL
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_ECM_DOCUMENT_TYPE_PROPS
         ADD (CONSTRAINT "PK_PROPERTIES_ID" PRIMARY KEY ("PROPERTIES_ID")
         USING INDEX TABLESPACE "HOMEPAGEINDEXTABSPACE");

--END 74517: Create script that creates DB table that hold document type labels


-------------------------------------------------------------------
-- START SEARCH SCHEDULER TABLES
-------------------------------------------------------------------

CREATE TABLE "HOMEPAGE"."LOTUSCONNECTIONSTASK"("TASKID" NUMBER(19) NOT NULL,
               "VERSION" VARCHAR2(5) NOT NULL,
               "ROW_VERSION" NUMBER(10) NOT NULL,
               "TASKTYPE" NUMBER(10) NOT NULL,
               "TASKSUSPENDED" NUMBER(1) NOT NULL,
               "CANCELLED" NUMBER(1) NOT NULL,
               "NEXTFIRETIME" NUMBER(19) NOT NULL,
               "STARTBYINTERVAL" VARCHAR2(254),
               "STARTBYTIME" NUMBER(19),
               "VALIDFROMTIME" NUMBER(19),
               "VALIDTOTIME" NUMBER(19),
               "REPEATINTERVAL" VARCHAR2(254),
               "MAXREPEATS" NUMBER(10) NOT NULL,
               "REPEATSLEFT" NUMBER(10) NOT NULL,
               "TASKINFO" BLOB,
               "NAME" VARCHAR2(254),
               "AUTOPURGE" NUMBER(10) NOT NULL,
               "FAILUREACTION" NUMBER(10),
               "MAXATTEMPTS" NUMBER(10),
               "QOS" NUMBER(10),
               "PARTITIONID" NUMBER(10),
               "OWNERTOKEN" VARCHAR2(200) NOT NULL,
               "CREATETIME" NUMBER(19) NOT NULL,
               PRIMARY KEY ("TASKID") ) TABLESPACE "HOMEPAGEREGTABSPACE";

CREATE INDEX "HOMEPAGE"."LOTUSCONNECTIONSTASK_IDX1" ON "HOMEPAGE"."LOTUSCONNECTIONSTASK" ("TASKID",
              "OWNERTOKEN") ;

CREATE INDEX "HOMEPAGE"."LOTUSCONNECTIONSTASK_IDX2" ON "HOMEPAGE"."LOTUSCONNECTIONSTASK" ("NEXTFIRETIME" ASC,
               "REPEATSLEFT",
               "PARTITIONID") ;

--40252: SPR#WDWU8AAA3P : search cluster nodes will insert dup scheduler task when scheduler table is empty
ALTER TABLE HOMEPAGE.LOTUSCONNECTIONSTASK ADD CONSTRAINT UNIQUE_LCT_NAME UNIQUE ("NAME");


ALTER TABLE "HOMEPAGE"."LOTUSCONNECTIONSTASK" ENABLE ROW MOVEMENT;

-------------------------------------------------------------------
-- LOTUSCONNECTIONSTREG
-------------------------------------------------------------------
CREATE TABLE "HOMEPAGE"."LOTUSCONNECTIONSTREG" ("REGKEY" VARCHAR2(254) NOT NULL ,
               "REGVALUE" VARCHAR2(254) ,
               PRIMARY KEY ( "REGKEY" )) TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE "HOMEPAGE"."LOTUSCONNECTIONSTREG" ENABLE ROW MOVEMENT;

-------------------------------------------------------------------
-- LOTUSCONNECTIONSLMGR
-------------------------------------------------------------------


CREATE TABLE "HOMEPAGE"."LOTUSCONNECTIONSLMGR" ("LEASENAME" VARCHAR2(254) NOT NULL,
               "LEASEOWNER" VARCHAR2(254),
               "LEASE_EXPIRE_TIME" NUMBER(19),
               "DISABLED" VARCHAR2(254),
               PRIMARY KEY ( "LEASENAME" )) TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE "HOMEPAGE"."LOTUSCONNECTIONSLMGR" ENABLE ROW MOVEMENT;

-------------------------------------------------------------------
-- LOTUSCONNECTIONSLMPR
-------------------------------------------------------------------

CREATE TABLE "HOMEPAGE"."LOTUSCONNECTIONSLMPR" ("LEASENAME" VARCHAR2(254) NOT NULL,
               "NAME" VARCHAR2(254) NOT NULL,
               "VALUE" VARCHAR2(254) NOT NULL ) TABLESPACE "HOMEPAGEREGTABSPACE";

CREATE INDEX "HOMEPAGE"."LOTUSCONNECTIONSLMPR_IDX1" ON "HOMEPAGE"."LOTUSCONNECTIONSLMPR" ("LEASENAME",
               "NAME") ;


ALTER TABLE "HOMEPAGE"."LOTUSCONNECTIONSLMPR" ENABLE ROW MOVEMENT;

-----------------------------------------------
---HOMEPAGE.SR_FILECONTENTINDEXINGTASK
-----------------------------------------------


CREATE TABLE HOMEPAGE.SR_FILECONTENTINDEXINGTASK (
	FILE_CONTENT_INDEXING_TASK_ID VARCHAR2(36) NOT NULL,
	TASK_ID VARCHAR2(36) NOT NULL,
	FILE_CONT_INDX_TASK_SERVICES VARCHAR2(256) NOT NULL,
	FILE_CONT_INDX_TASK_DURATION NUMBER(19,0) NOT NULL
)
TABLESPACE "HOMEPAGEREGTABSPACE";

ALTER TABLE HOMEPAGE.SR_FILECONTENTINDEXINGTASK
	ADD CONSTRAINT "PK_FCI_TASK_ID" PRIMARY KEY ("FILE_CONTENT_INDEXING_TASK_ID");	

CREATE UNIQUE INDEX HOMEPAGE.TASK_ID_UN_IDX
    ON HOMEPAGE.SR_FILECONTENTINDEXINGTASK("TASK_ID");

ALTER TABLE HOMEPAGE.SR_FILECONTENTINDEXINGTASK
	ADD CONSTRAINT "FK_FCI_TASK_ID" FOREIGN KEY ("TASK_ID") 
	REFERENCES  HOMEPAGE.SR_TASKDEF("TASK_ID");

DROP VIEW HOMEPAGE.SR_ALLTASKSDEF;

CREATE VIEW HOMEPAGE.SR_ALLTASKSDEF AS
(
	SELECT 	T1.TASK_ID  		AS	PARENT_TASK_ID,
	T1.TASK_NAME 				AS	PARENT_TASK_NAME,
	T1.INTERVAL 				AS	PARENT_TASK_INTERVAL,
	T1.STARTBY	 				AS	PARENT_TASK_STARTBY,
	T1.TASK_TYPE 				AS	PARENT_TASK_TYPE,
	T1.ENABLED					AS  PARENT_TASK_ENABLED,
	T2.INDEXING_TASK_SERVICES	AS	INDEXING_TASK_SERVICES,
	T2.INDEXING_TASK_OPTIMIZE	AS	INDEXING_TASK_OPTIMIZE,
	T2.INDEXING_TASK_ID			AS	INDEXING_TASK_ID,
	''							AS	OPTIMIZE_TASK_ID,
	'' 							AS 	FILECONTENT_TASK_ID,
	''							AS	FILE_CONTENT_TASK_SERVICES,
	0							AS 	CONTENT_FAILURES_ONLY,
        ''                  	AS  SAND_TASK_ID,
	''							AS	SAND_TASK_SERVICES,
	'' 							AS 	BACKUP_TASK_ID,
	''							AS	BACKUP_TASK_TYPE,
	''							AS	BACKUP_TASK_SCRIPT,
	''							AS	FILE_CONTENT_INDEXING_TASK_ID,
	''							AS	FILE_CONT_INDX_TASK_SERVICES,
	0							AS	FILE_CONT_INDX_TASK_DURATION,
	T2.INDEXING_TASK_ID			AS	CHILDTASK_PK	
	FROM    HOMEPAGE.SR_TASKDEF T1,HOMEPAGE.SR_INDEXINGTASKDEF T2 
	WHERE T1.TASK_ID=T2.TASK_ID
) 
UNION 
(
	SELECT T3.TASK_ID		AS 	PARENT_TASK_ID,
	T3.TASK_NAME 			AS 	PARENT_TASK_NAME,
	T3.INTERVAL				AS 	PARENT_TASK_INTERVAL,
	T3.STARTBY 				AS	PARENT_TASK_STARTBY,
	T3.TASK_TYPE 			AS 	PARENT_TASK_TYPE,
 	T3.ENABLED 				AS 	PARENT_TASK_ENABLED,
	''						AS 	INDEXING_TASK_SERVICES,
	0						AS	INDEXING_TASK_OPTIMIZE,
	''						AS	INDEXING_TASK_ID,
	T4.OPTIMIZE_TASK_ID 	AS	OPTIMIZE_TASK_ID,
	'' 						AS 	FILECONTENT_TASK_ID,
	''						AS	FILE_CONTENT_TASK_SERVICES,
	0						AS	CONTENT_FAILURES_ONLY,
        ''                 	AS  SAND_TASK_ID,
	''                      AS  SAND_TASK_SERVICES,
	'' 						AS 	BACKUP_TASK_ID,
	''						AS	BACKUP_TASK_TYPE,
	''						AS	BACKUP_TASK_SCRIPT,
	''						AS	FILE_CONTENT_INDEXING_TASK_ID,
	''						AS	FILE_CONT_INDX_TASK_SERVICES,
	0						AS	FILE_CONT_INDX_TASK_DURATION,
	T4.OPTIMIZE_TASK_ID		AS	CHILDTASK_PK
	FROM   HOMEPAGE.SR_TASKDEF T3,HOMEPAGE.SR_OPTIMIZETASKDEF T4
	WHERE  T3.TASK_ID=T4.TASK_ID
)
UNION 
(
	SELECT T5.TASK_ID				AS	PARENT_TASK_ID,
	T5.TASK_NAME 					AS	PARENT_TASK_NAME,
	T5.INTERVAL						AS	PARENT_TASK_INTERVAL,
	T5.STARTBY 						AS	PARENT_TASK_STARTBY,
	T5.TASK_TYPE 					AS	PARENT_TASK_TYPE,
 	T5.ENABLED 						AS	PARENT_TASK_ENABLED,
	''								AS	INDEXING_TASK_SERVICES,
	0								AS	INDEXING_TASK_OPTIMIZE,
	''								AS	INDEXING_TASK_ID,
	''								AS	OPTIMIZE_TASK_ID,
	T6.FILECONTENT_TASK_ID 			AS	FILECONTENT_TASK_ID,
	T6.FILE_CONTENT_TASK_SERVICES	AS	FILE_CONTENT_TASK_SERVICES,
	T6.CONTENT_FAILURES_ONLY		AS	CONTENT_FAILURES_ONLY,
        ''                  		AS  SAND_TASK_ID,
	''                      		AS  SAND_TASK_SERVICES,
	'' 								AS  BACKUP_TASK_ID,
	''								AS	BACKUP_TASK_TYPE,
	''								AS	BACKUP_TASK_SCRIPT,
	''								AS	FILE_CONTENT_INDEXING_TASK_ID,
	''								AS	FILE_CONT_INDX_TASK_SERVICES,
	0								AS	FILE_CONT_INDX_TASK_DURATION,
	T6.FILECONTENT_TASK_ID			AS	CHILDTASK_PK
	FROM   HOMEPAGE.SR_TASKDEF T5,HOMEPAGE.SR_FILECONTENTTASKDEF T6
	WHERE  T5.TASK_ID=T6.TASK_ID
)
UNION 
(
	SELECT T7.TASK_ID		AS 	PARENT_TASK_ID,
	T7.TASK_NAME 			AS 	PARENT_TASK_NAME,
	T7.INTERVAL				AS 	PARENT_TASK_INTERVAL,
	T7.STARTBY 				AS	PARENT_TASK_STARTBY,
	T7.TASK_TYPE 			AS 	PARENT_TASK_TYPE,
 	T7.ENABLED 				AS	PARENT_TASK_ENABLED,
	''						AS 	INDEXING_TASK_SERVICES,
	0						AS	INDEXING_TASK_OPTIMIZE,
	''						AS	INDEXING_TASK_ID,
	''						AS	OPTIMIZE_TASK_ID,
	''		 				AS 	FILECONTENT_TASK_ID,
	''						AS	FILE_CONTENT_TASK_SERVICES,
	0						AS	CONTENT_FAILURES_ONLY,
	''                  	AS  SAND_TASK_ID,
	''                      AS  SAND_TASK_SERVICES,
	T8.BACKUP_TASK_ID		AS 	BACKUP_TASK_ID,
	T8.TYPE					AS	BACKUP_TASK_TYPE,
	T8.SCRIPT				AS	BACKUP_TASK_SCRIPT,
	''						AS	FILE_CONTENT_INDEXING_TASK_ID,
	''						AS	FILE_CONT_INDX_TASK_SERVICES,
	0						AS	FILE_CONT_INDX_TASK_DURATION,
	T8.BACKUP_TASK_ID		AS	CHILDTASK_PK
	FROM   HOMEPAGE.SR_TASKDEF T7,HOMEPAGE.SR_BACKUPTASKDEF T8
	WHERE  T7.TASK_ID=T8.TASK_ID
)
UNION
(
        SELECT T9.TASK_ID              AS   PARENT_TASK_ID,
        T9.TASK_NAME                   AS   PARENT_TASK_NAME,
        T9.INTERVAL                    AS   PARENT_TASK_INTERVAL,
        T9.STARTBY                     AS   PARENT_TASK_STARTBY,
        T9.TASK_TYPE                   AS   PARENT_TASK_TYPE,
        T9.ENABLED                     AS   PARENT_TASK_ENABLED,
        ''                             AS   INDEXING_TASK_SERVICES,
        0                              AS   INDEXING_TASK_OPTIMIZE,
        ''                             AS   INDEXING_TASK_ID,
        ''                             AS   OPTIMIZE_TASK_ID,
        ''                             AS   FILECONTENT_TASK_ID,
        ''                             AS   FILE_CONTENT_TASK_SERVICES,
        0                              AS   CONTENT_FAILURES_ONLY,
        T10.SAND_TASK_ID               AS   SAND_TASK_ID,
	T10.SAND_TASK_SERVICES		   AS	SAND_TASK_SERVICES,
        ''                             AS   BACKUP_TASK_ID,
        ''                             AS   BACKUP_TASK_TYPE,
        ''                             AS   BACKUP_TASK_SCRIPT,
        ''							   AS	FILE_CONTENT_INDEXING_TASK_ID,
	''							   AS	FILE_CONT_INDX_TASK_SERVICES,
	0							   AS	FILE_CONT_INDX_TASK_DURATION,
        T10.SAND_TASK_ID               AS   CHILDTASK_PK
        FROM   HOMEPAGE.SR_TASKDEF T9,HOMEPAGE.SR_SANDTASKDEF T10
        WHERE  T9.TASK_ID=T10.TASK_ID
)
UNION
(
        SELECT T11.TASK_ID              		AS	PARENT_TASK_ID,
        T11.TASK_NAME                   		AS	PARENT_TASK_NAME,
        T11.INTERVAL                    		AS	PARENT_TASK_INTERVAL,
        T11.STARTBY                     		AS	PARENT_TASK_STARTBY,
        T11.TASK_TYPE                   		AS	PARENT_TASK_TYPE,
        T11.ENABLED                    			AS	PARENT_TASK_ENABLED,
        ''                             			AS	INDEXING_TASK_SERVICES,
        0                              			AS	INDEXING_TASK_OPTIMIZE,
        ''                             			AS	INDEXING_TASK_ID,
        ''                             			AS	OPTIMIZE_TASK_ID,
        ''                             			AS	FILECONTENT_TASK_ID,
        ''                             			AS	FILE_CONTENT_TASK_SERVICES,
        0                              			AS	CONTENT_FAILURES_ONLY,
        ''       				       	AS  	SAND_TASK_ID,
	''						AS	SAND_TASK_SERVICES,
        ''                             			AS  	BACKUP_TASK_ID,
        ''                             			AS  	BACKUP_TASK_TYPE,
        ''                             			AS  	BACKUP_TASK_SCRIPT,
        T12.FILE_CONTENT_INDEXING_TASK_ID		AS	FILE_CONTENT_INDEXING_TASK_ID,
	T12.FILE_CONT_INDX_TASK_SERVICES		AS	FILE_CONT_INDX_TASK_SERVICES,
	T12.FILE_CONT_INDX_TASK_DURATION		AS	FILE_CONT_INDX_TASK_DURATION,
        T12.FILE_CONTENT_INDEXING_TASK_ID		AS	CHILDTASK_PK
        FROM   HOMEPAGE.SR_TASKDEF T11,HOMEPAGE.SR_FILECONTENTINDEXINGTASK T12
        WHERE  T11.TASK_ID=T12.TASK_ID
);


------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
-- END THE DEFINITION FOR THE SEARCH DATABASE
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------

